
NetworkedProgrammer.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000777c  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0040777c  0040777c  0001777c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00006b68  20000000  00407784  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000538  20006b68  0040e2ec  00026b68  2**2
                  ALLOC
  4 .stack        00003000  200070a0  0040e824  00026b68  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  00026b68  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00026b92  2**0
                  CONTENTS, READONLY
  7 .debug_info   00012af8  00000000  00000000  00026beb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002889  00000000  00000000  000396e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000060d2  00000000  00000000  0003bf6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000ab8  00000000  00000000  0004203e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000a00  00000000  00000000  00042af6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000616c  00000000  00000000  000434f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000c896  00000000  00000000  00049662  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00052170  00000000  00000000  00055ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00003a38  00000000  00000000  000a8068  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	a0 a0 00 20 ed 1d 40 00 b5 1e 40 00 b5 1e 40 00     ... ..@...@...@.
  400010:	b5 1e 40 00 b5 1e 40 00 b5 1e 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	b5 1e 40 00 b5 1e 40 00 00 00 00 00 b5 1e 40 00     ..@...@.......@.
  40003c:	b5 1e 40 00 b5 1e 40 00 b5 1e 40 00 b5 1e 40 00     ..@...@...@...@.
  40004c:	b5 1e 40 00 b5 1e 40 00 b5 1e 40 00 b5 1e 40 00     ..@...@...@...@.
  40005c:	00 00 00 00 b5 1e 40 00 b5 1e 40 00 00 00 00 00     ......@...@.....
  40006c:	ad 02 40 00 c5 02 40 00 00 00 00 00 dd 0b 40 00     ..@...@.......@.
  40007c:	b5 1e 40 00 00 00 00 00 00 00 00 00 b5 1e 40 00     ..@...........@.
  40008c:	b5 1e 40 00 b5 1e 40 00 b5 1e 40 00 b5 1e 40 00     ..@...@...@...@.
  40009c:	21 09 40 00 b5 1e 40 00 b5 1e 40 00 00 00 00 00     !.@...@...@.....
	...
  4000b4:	b5 1e 40 00 b5 1e 40 00 b5 1e 40 00 b5 1e 40 00     ..@...@...@...@.
  4000c4:	b5 1e 40 00 b5 1e 40 00                             ..@...@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	20006b68 	.word	0x20006b68
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00407784 	.word	0x00407784

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	00407784 	.word	0x00407784
  40012c:	20006b6c 	.word	0x20006b6c
  400130:	00407784 	.word	0x00407784
  400134:	00000000 	.word	0x00000000

00400138 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400138:	b580      	push	{r7, lr}
  40013a:	b084      	sub	sp, #16
  40013c:	af00      	add	r7, sp, #0
  40013e:	6078      	str	r0, [r7, #4]
  400140:	6039      	str	r1, [r7, #0]
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400142:	6878      	ldr	r0, [r7, #4]
  400144:	4b2c      	ldr	r3, [pc, #176]	; (4001f8 <pio_handler_process+0xc0>)
  400146:	4798      	blx	r3
  400148:	60f8      	str	r0, [r7, #12]
	status &= pio_get_interrupt_mask(p_pio);
  40014a:	6878      	ldr	r0, [r7, #4]
  40014c:	4b2b      	ldr	r3, [pc, #172]	; (4001fc <pio_handler_process+0xc4>)
  40014e:	4798      	blx	r3
  400150:	4602      	mov	r2, r0
  400152:	68fb      	ldr	r3, [r7, #12]
  400154:	4013      	ands	r3, r2
  400156:	60fb      	str	r3, [r7, #12]

	/* Check pending events */
	if (status != 0) {
  400158:	68fb      	ldr	r3, [r7, #12]
  40015a:	2b00      	cmp	r3, #0
  40015c:	d03c      	beq.n	4001d8 <pio_handler_process+0xa0>
		/* Find triggering source */
		i = 0;
  40015e:	2300      	movs	r3, #0
  400160:	60bb      	str	r3, [r7, #8]
		while (status != 0) {
  400162:	e034      	b.n	4001ce <pio_handler_process+0x96>
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  400164:	4a26      	ldr	r2, [pc, #152]	; (400200 <pio_handler_process+0xc8>)
  400166:	68bb      	ldr	r3, [r7, #8]
  400168:	011b      	lsls	r3, r3, #4
  40016a:	4413      	add	r3, r2
  40016c:	681a      	ldr	r2, [r3, #0]
  40016e:	683b      	ldr	r3, [r7, #0]
  400170:	429a      	cmp	r2, r3
  400172:	d126      	bne.n	4001c2 <pio_handler_process+0x8a>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400174:	4a22      	ldr	r2, [pc, #136]	; (400200 <pio_handler_process+0xc8>)
  400176:	68bb      	ldr	r3, [r7, #8]
  400178:	011b      	lsls	r3, r3, #4
  40017a:	4413      	add	r3, r2
  40017c:	3304      	adds	r3, #4
  40017e:	681a      	ldr	r2, [r3, #0]
  400180:	68fb      	ldr	r3, [r7, #12]
  400182:	4013      	ands	r3, r2
  400184:	2b00      	cmp	r3, #0
  400186:	d01c      	beq.n	4001c2 <pio_handler_process+0x8a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400188:	4a1d      	ldr	r2, [pc, #116]	; (400200 <pio_handler_process+0xc8>)
  40018a:	68bb      	ldr	r3, [r7, #8]
  40018c:	011b      	lsls	r3, r3, #4
  40018e:	4413      	add	r3, r2
  400190:	330c      	adds	r3, #12
  400192:	681b      	ldr	r3, [r3, #0]
  400194:	491a      	ldr	r1, [pc, #104]	; (400200 <pio_handler_process+0xc8>)
  400196:	68ba      	ldr	r2, [r7, #8]
  400198:	0112      	lsls	r2, r2, #4
  40019a:	440a      	add	r2, r1
  40019c:	6810      	ldr	r0, [r2, #0]
  40019e:	4918      	ldr	r1, [pc, #96]	; (400200 <pio_handler_process+0xc8>)
  4001a0:	68ba      	ldr	r2, [r7, #8]
  4001a2:	0112      	lsls	r2, r2, #4
  4001a4:	440a      	add	r2, r1
  4001a6:	3204      	adds	r2, #4
  4001a8:	6812      	ldr	r2, [r2, #0]
  4001aa:	4611      	mov	r1, r2
  4001ac:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
  4001ae:	4a14      	ldr	r2, [pc, #80]	; (400200 <pio_handler_process+0xc8>)
  4001b0:	68bb      	ldr	r3, [r7, #8]
  4001b2:	011b      	lsls	r3, r3, #4
  4001b4:	4413      	add	r3, r2
  4001b6:	3304      	adds	r3, #4
  4001b8:	681b      	ldr	r3, [r3, #0]
  4001ba:	43db      	mvns	r3, r3
  4001bc:	68fa      	ldr	r2, [r7, #12]
  4001be:	4013      	ands	r3, r2
  4001c0:	60fb      	str	r3, [r7, #12]
				}
			}
			i++;
  4001c2:	68bb      	ldr	r3, [r7, #8]
  4001c4:	3301      	adds	r3, #1
  4001c6:	60bb      	str	r3, [r7, #8]
			if (i >= MAX_INTERRUPT_SOURCES) {
  4001c8:	68bb      	ldr	r3, [r7, #8]
  4001ca:	2b06      	cmp	r3, #6
  4001cc:	d803      	bhi.n	4001d6 <pio_handler_process+0x9e>
		while (status != 0) {
  4001ce:	68fb      	ldr	r3, [r7, #12]
  4001d0:	2b00      	cmp	r3, #0
  4001d2:	d1c7      	bne.n	400164 <pio_handler_process+0x2c>
  4001d4:	e000      	b.n	4001d8 <pio_handler_process+0xa0>
				break;
  4001d6:	bf00      	nop
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  4001d8:	4b0a      	ldr	r3, [pc, #40]	; (400204 <pio_handler_process+0xcc>)
  4001da:	681b      	ldr	r3, [r3, #0]
  4001dc:	2b00      	cmp	r3, #0
  4001de:	d007      	beq.n	4001f0 <pio_handler_process+0xb8>
		if (pio_capture_handler) {
  4001e0:	4b09      	ldr	r3, [pc, #36]	; (400208 <pio_handler_process+0xd0>)
  4001e2:	681b      	ldr	r3, [r3, #0]
  4001e4:	2b00      	cmp	r3, #0
  4001e6:	d003      	beq.n	4001f0 <pio_handler_process+0xb8>
			pio_capture_handler(p_pio);
  4001e8:	4b07      	ldr	r3, [pc, #28]	; (400208 <pio_handler_process+0xd0>)
  4001ea:	681b      	ldr	r3, [r3, #0]
  4001ec:	6878      	ldr	r0, [r7, #4]
  4001ee:	4798      	blx	r3
		}
	}
#endif
}
  4001f0:	bf00      	nop
  4001f2:	3710      	adds	r7, #16
  4001f4:	46bd      	mov	sp, r7
  4001f6:	bd80      	pop	{r7, pc}
  4001f8:	00401653 	.word	0x00401653
  4001fc:	00401669 	.word	0x00401669
  400200:	20006b84 	.word	0x20006b84
  400204:	20007074 	.word	0x20007074
  400208:	20006bf8 	.word	0x20006bf8

0040020c <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  40020c:	b580      	push	{r7, lr}
  40020e:	b086      	sub	sp, #24
  400210:	af00      	add	r7, sp, #0
  400212:	60f8      	str	r0, [r7, #12]
  400214:	60b9      	str	r1, [r7, #8]
  400216:	607a      	str	r2, [r7, #4]
  400218:	603b      	str	r3, [r7, #0]
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  40021a:	4b21      	ldr	r3, [pc, #132]	; (4002a0 <pio_handler_set+0x94>)
  40021c:	681b      	ldr	r3, [r3, #0]
  40021e:	2b06      	cmp	r3, #6
  400220:	d901      	bls.n	400226 <pio_handler_set+0x1a>
		return 1;
  400222:	2301      	movs	r3, #1
  400224:	e038      	b.n	400298 <pio_handler_set+0x8c>

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400226:	2300      	movs	r3, #0
  400228:	75fb      	strb	r3, [r7, #23]
  40022a:	e011      	b.n	400250 <pio_handler_set+0x44>
		pSource = &(gs_interrupt_sources[i]);
  40022c:	7dfb      	ldrb	r3, [r7, #23]
  40022e:	011b      	lsls	r3, r3, #4
  400230:	4a1c      	ldr	r2, [pc, #112]	; (4002a4 <pio_handler_set+0x98>)
  400232:	4413      	add	r3, r2
  400234:	613b      	str	r3, [r7, #16]
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400236:	693b      	ldr	r3, [r7, #16]
  400238:	681a      	ldr	r2, [r3, #0]
  40023a:	68bb      	ldr	r3, [r7, #8]
  40023c:	429a      	cmp	r2, r3
  40023e:	d104      	bne.n	40024a <pio_handler_set+0x3e>
  400240:	693b      	ldr	r3, [r7, #16]
  400242:	685a      	ldr	r2, [r3, #4]
  400244:	687b      	ldr	r3, [r7, #4]
  400246:	429a      	cmp	r2, r3
  400248:	d008      	beq.n	40025c <pio_handler_set+0x50>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  40024a:	7dfb      	ldrb	r3, [r7, #23]
  40024c:	3301      	adds	r3, #1
  40024e:	75fb      	strb	r3, [r7, #23]
  400250:	7dfa      	ldrb	r2, [r7, #23]
  400252:	4b13      	ldr	r3, [pc, #76]	; (4002a0 <pio_handler_set+0x94>)
  400254:	681b      	ldr	r3, [r3, #0]
  400256:	429a      	cmp	r2, r3
  400258:	d9e8      	bls.n	40022c <pio_handler_set+0x20>
  40025a:	e000      	b.n	40025e <pio_handler_set+0x52>
			break;
  40025c:	bf00      	nop
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  40025e:	693b      	ldr	r3, [r7, #16]
  400260:	68ba      	ldr	r2, [r7, #8]
  400262:	601a      	str	r2, [r3, #0]
	pSource->mask = ul_mask;
  400264:	693b      	ldr	r3, [r7, #16]
  400266:	687a      	ldr	r2, [r7, #4]
  400268:	605a      	str	r2, [r3, #4]
	pSource->attr = ul_attr;
  40026a:	693b      	ldr	r3, [r7, #16]
  40026c:	683a      	ldr	r2, [r7, #0]
  40026e:	609a      	str	r2, [r3, #8]
	pSource->handler = p_handler;
  400270:	693b      	ldr	r3, [r7, #16]
  400272:	6a3a      	ldr	r2, [r7, #32]
  400274:	60da      	str	r2, [r3, #12]
	if (i == gs_ul_nb_sources + 1) {
  400276:	7dfa      	ldrb	r2, [r7, #23]
  400278:	4b09      	ldr	r3, [pc, #36]	; (4002a0 <pio_handler_set+0x94>)
  40027a:	681b      	ldr	r3, [r3, #0]
  40027c:	3301      	adds	r3, #1
  40027e:	429a      	cmp	r2, r3
  400280:	d104      	bne.n	40028c <pio_handler_set+0x80>
		gs_ul_nb_sources++;
  400282:	4b07      	ldr	r3, [pc, #28]	; (4002a0 <pio_handler_set+0x94>)
  400284:	681b      	ldr	r3, [r3, #0]
  400286:	3301      	adds	r3, #1
  400288:	4a05      	ldr	r2, [pc, #20]	; (4002a0 <pio_handler_set+0x94>)
  40028a:	6013      	str	r3, [r2, #0]
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  40028c:	683a      	ldr	r2, [r7, #0]
  40028e:	6879      	ldr	r1, [r7, #4]
  400290:	68f8      	ldr	r0, [r7, #12]
  400292:	4b05      	ldr	r3, [pc, #20]	; (4002a8 <pio_handler_set+0x9c>)
  400294:	4798      	blx	r3

	return 0;
  400296:	2300      	movs	r3, #0
}
  400298:	4618      	mov	r0, r3
  40029a:	3718      	adds	r7, #24
  40029c:	46bd      	mov	sp, r7
  40029e:	bd80      	pop	{r7, pc}
  4002a0:	20006bf4 	.word	0x20006bf4
  4002a4:	20006b84 	.word	0x20006b84
  4002a8:	004015b5 	.word	0x004015b5

004002ac <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  4002ac:	b580      	push	{r7, lr}
  4002ae:	af00      	add	r7, sp, #0
	pio_handler_process(PIOA, ID_PIOA);
  4002b0:	210b      	movs	r1, #11
  4002b2:	4802      	ldr	r0, [pc, #8]	; (4002bc <PIOA_Handler+0x10>)
  4002b4:	4b02      	ldr	r3, [pc, #8]	; (4002c0 <PIOA_Handler+0x14>)
  4002b6:	4798      	blx	r3
}
  4002b8:	bf00      	nop
  4002ba:	bd80      	pop	{r7, pc}
  4002bc:	400e0e00 	.word	0x400e0e00
  4002c0:	00400139 	.word	0x00400139

004002c4 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  4002c4:	b580      	push	{r7, lr}
  4002c6:	af00      	add	r7, sp, #0
    pio_handler_process(PIOB, ID_PIOB);
  4002c8:	210c      	movs	r1, #12
  4002ca:	4802      	ldr	r0, [pc, #8]	; (4002d4 <PIOB_Handler+0x10>)
  4002cc:	4b02      	ldr	r3, [pc, #8]	; (4002d8 <PIOB_Handler+0x14>)
  4002ce:	4798      	blx	r3
}
  4002d0:	bf00      	nop
  4002d2:	bd80      	pop	{r7, pc}
  4002d4:	400e1000 	.word	0x400e1000
  4002d8:	00400139 	.word	0x00400139

004002dc <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  4002dc:	b480      	push	{r7}
  4002de:	b089      	sub	sp, #36	; 0x24
  4002e0:	af00      	add	r7, sp, #0
  4002e2:	60f8      	str	r0, [r7, #12]
  4002e4:	60b9      	str	r1, [r7, #8]
  4002e6:	607a      	str	r2, [r7, #4]
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  4002e8:	68bb      	ldr	r3, [r7, #8]
  4002ea:	011a      	lsls	r2, r3, #4
  4002ec:	687b      	ldr	r3, [r7, #4]
  4002ee:	429a      	cmp	r2, r3
  4002f0:	d802      	bhi.n	4002f8 <usart_set_async_baudrate+0x1c>
		over = HIGH_FRQ_SAMPLE_DIV;
  4002f2:	2310      	movs	r3, #16
  4002f4:	61fb      	str	r3, [r7, #28]
  4002f6:	e001      	b.n	4002fc <usart_set_async_baudrate+0x20>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
  4002f8:	2308      	movs	r3, #8
  4002fa:	61fb      	str	r3, [r7, #28]
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4002fc:	687b      	ldr	r3, [r7, #4]
  4002fe:	00da      	lsls	r2, r3, #3
  400300:	69fb      	ldr	r3, [r7, #28]
  400302:	68b9      	ldr	r1, [r7, #8]
  400304:	fb01 f303 	mul.w	r3, r1, r3
  400308:	085b      	lsrs	r3, r3, #1
  40030a:	441a      	add	r2, r3
  40030c:	69fb      	ldr	r3, [r7, #28]
  40030e:	68b9      	ldr	r1, [r7, #8]
  400310:	fb01 f303 	mul.w	r3, r1, r3
  400314:	fbb2 f3f3 	udiv	r3, r2, r3
  400318:	61bb      	str	r3, [r7, #24]
	cd = cd_fp >> 3;
  40031a:	69bb      	ldr	r3, [r7, #24]
  40031c:	08db      	lsrs	r3, r3, #3
  40031e:	617b      	str	r3, [r7, #20]
	fp = cd_fp & 0x07;
  400320:	69bb      	ldr	r3, [r7, #24]
  400322:	f003 0307 	and.w	r3, r3, #7
  400326:	613b      	str	r3, [r7, #16]
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400328:	697b      	ldr	r3, [r7, #20]
  40032a:	2b00      	cmp	r3, #0
  40032c:	d003      	beq.n	400336 <usart_set_async_baudrate+0x5a>
  40032e:	697b      	ldr	r3, [r7, #20]
  400330:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
  400334:	d301      	bcc.n	40033a <usart_set_async_baudrate+0x5e>
		return 1;
  400336:	2301      	movs	r3, #1
  400338:	e00f      	b.n	40035a <usart_set_async_baudrate+0x7e>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
  40033a:	69fb      	ldr	r3, [r7, #28]
  40033c:	2b08      	cmp	r3, #8
  40033e:	d105      	bne.n	40034c <usart_set_async_baudrate+0x70>
		p_usart->US_MR |= US_MR_OVER;
  400340:	68fb      	ldr	r3, [r7, #12]
  400342:	685b      	ldr	r3, [r3, #4]
  400344:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
  400348:	68fb      	ldr	r3, [r7, #12]
  40034a:	605a      	str	r2, [r3, #4]
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  40034c:	693b      	ldr	r3, [r7, #16]
  40034e:	041a      	lsls	r2, r3, #16
  400350:	697b      	ldr	r3, [r7, #20]
  400352:	431a      	orrs	r2, r3
  400354:	68fb      	ldr	r3, [r7, #12]
  400356:	621a      	str	r2, [r3, #32]

	return 0;
  400358:	2300      	movs	r3, #0
}
  40035a:	4618      	mov	r0, r3
  40035c:	3724      	adds	r7, #36	; 0x24
  40035e:	46bd      	mov	sp, r7
  400360:	bc80      	pop	{r7}
  400362:	4770      	bx	lr

00400364 <usart_reset>:
 * \brief Reset the USART and disable TX and RX.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset(Usart *p_usart)
{
  400364:	b580      	push	{r7, lr}
  400366:	b082      	sub	sp, #8
  400368:	af00      	add	r7, sp, #0
  40036a:	6078      	str	r0, [r7, #4]
	/* Disable the Write Protect. */
	usart_disable_writeprotect(p_usart);
  40036c:	6878      	ldr	r0, [r7, #4]
  40036e:	4b0f      	ldr	r3, [pc, #60]	; (4003ac <usart_reset+0x48>)
  400370:	4798      	blx	r3

	/* Reset registers that could cause unpredictable behavior after reset. */
	p_usart->US_MR = 0;
  400372:	687b      	ldr	r3, [r7, #4]
  400374:	2200      	movs	r2, #0
  400376:	605a      	str	r2, [r3, #4]
	p_usart->US_RTOR = 0;
  400378:	687b      	ldr	r3, [r7, #4]
  40037a:	2200      	movs	r2, #0
  40037c:	625a      	str	r2, [r3, #36]	; 0x24
	p_usart->US_TTGR = 0;
  40037e:	687b      	ldr	r3, [r7, #4]
  400380:	2200      	movs	r2, #0
  400382:	629a      	str	r2, [r3, #40]	; 0x28

	/* Disable TX and RX. */
	usart_reset_tx(p_usart);
  400384:	6878      	ldr	r0, [r7, #4]
  400386:	4b0a      	ldr	r3, [pc, #40]	; (4003b0 <usart_reset+0x4c>)
  400388:	4798      	blx	r3
	usart_reset_rx(p_usart);
  40038a:	6878      	ldr	r0, [r7, #4]
  40038c:	4b09      	ldr	r3, [pc, #36]	; (4003b4 <usart_reset+0x50>)
  40038e:	4798      	blx	r3
	/* Reset status bits. */
	usart_reset_status(p_usart);
  400390:	6878      	ldr	r0, [r7, #4]
  400392:	4b09      	ldr	r3, [pc, #36]	; (4003b8 <usart_reset+0x54>)
  400394:	4798      	blx	r3
	/* Turn off RTS and DTR if exist. */
	usart_drive_RTS_pin_high(p_usart);
  400396:	6878      	ldr	r0, [r7, #4]
  400398:	4b08      	ldr	r3, [pc, #32]	; (4003bc <usart_reset+0x58>)
  40039a:	4798      	blx	r3
#if (SAM3S || SAM4S || SAM3U || SAM4L || SAM4E)
	usart_drive_DTR_pin_high(p_usart);
  40039c:	6878      	ldr	r0, [r7, #4]
  40039e:	4b08      	ldr	r3, [pc, #32]	; (4003c0 <usart_reset+0x5c>)
  4003a0:	4798      	blx	r3
#endif
}
  4003a2:	bf00      	nop
  4003a4:	3708      	adds	r7, #8
  4003a6:	46bd      	mov	sp, r7
  4003a8:	bd80      	pop	{r7, pc}
  4003aa:	bf00      	nop
  4003ac:	004005b5 	.word	0x004005b5
  4003b0:	004004a1 	.word	0x004004a1
  4003b4:	004004d1 	.word	0x004004d1
  4003b8:	00400533 	.word	0x00400533
  4003bc:	00400567 	.word	0x00400567
  4003c0:	0040054d 	.word	0x0040054d

004003c4 <usart_init_rs232>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_init_rs232(Usart *p_usart,
		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
{
  4003c4:	b580      	push	{r7, lr}
  4003c6:	b084      	sub	sp, #16
  4003c8:	af00      	add	r7, sp, #0
  4003ca:	60f8      	str	r0, [r7, #12]
  4003cc:	60b9      	str	r1, [r7, #8]
  4003ce:	607a      	str	r2, [r7, #4]
	static uint32_t ul_reg_val;

	/* Reset the USART and shut down TX and RX. */
	usart_reset(p_usart);
  4003d0:	68f8      	ldr	r0, [r7, #12]
  4003d2:	4b1a      	ldr	r3, [pc, #104]	; (40043c <usart_init_rs232+0x78>)
  4003d4:	4798      	blx	r3

	ul_reg_val = 0;
  4003d6:	4b1a      	ldr	r3, [pc, #104]	; (400440 <usart_init_rs232+0x7c>)
  4003d8:	2200      	movs	r2, #0
  4003da:	601a      	str	r2, [r3, #0]
	/* Check whether the input values are legal. */
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  4003dc:	68bb      	ldr	r3, [r7, #8]
  4003de:	2b00      	cmp	r3, #0
  4003e0:	d009      	beq.n	4003f6 <usart_init_rs232+0x32>
  4003e2:	68bb      	ldr	r3, [r7, #8]
  4003e4:	681b      	ldr	r3, [r3, #0]
  4003e6:	687a      	ldr	r2, [r7, #4]
  4003e8:	4619      	mov	r1, r3
  4003ea:	68f8      	ldr	r0, [r7, #12]
  4003ec:	4b15      	ldr	r3, [pc, #84]	; (400444 <usart_init_rs232+0x80>)
  4003ee:	4798      	blx	r3
  4003f0:	4603      	mov	r3, r0
  4003f2:	2b00      	cmp	r3, #0
  4003f4:	d001      	beq.n	4003fa <usart_init_rs232+0x36>
			p_usart_opt->baudrate, ul_mck)) {
		return 1;
  4003f6:	2301      	movs	r3, #1
  4003f8:	e01b      	b.n	400432 <usart_init_rs232+0x6e>
	}

	/* Configure the USART option. */
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  4003fa:	68bb      	ldr	r3, [r7, #8]
  4003fc:	685a      	ldr	r2, [r3, #4]
  4003fe:	68bb      	ldr	r3, [r7, #8]
  400400:	689b      	ldr	r3, [r3, #8]
  400402:	431a      	orrs	r2, r3
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400404:	68bb      	ldr	r3, [r7, #8]
  400406:	691b      	ldr	r3, [r3, #16]
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400408:	431a      	orrs	r2, r3
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  40040a:	68bb      	ldr	r3, [r7, #8]
  40040c:	68db      	ldr	r3, [r3, #12]
  40040e:	431a      	orrs	r2, r3
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400410:	4b0b      	ldr	r3, [pc, #44]	; (400440 <usart_init_rs232+0x7c>)
  400412:	681b      	ldr	r3, [r3, #0]
  400414:	4313      	orrs	r3, r2
  400416:	4a0a      	ldr	r2, [pc, #40]	; (400440 <usart_init_rs232+0x7c>)
  400418:	6013      	str	r3, [r2, #0]

	/* Configure the USART mode as normal mode. */
	ul_reg_val |= US_MR_USART_MODE_NORMAL;
  40041a:	4b09      	ldr	r3, [pc, #36]	; (400440 <usart_init_rs232+0x7c>)
  40041c:	681b      	ldr	r3, [r3, #0]
  40041e:	4a08      	ldr	r2, [pc, #32]	; (400440 <usart_init_rs232+0x7c>)
  400420:	6013      	str	r3, [r2, #0]

	p_usart->US_MR |= ul_reg_val;
  400422:	68fb      	ldr	r3, [r7, #12]
  400424:	685a      	ldr	r2, [r3, #4]
  400426:	4b06      	ldr	r3, [pc, #24]	; (400440 <usart_init_rs232+0x7c>)
  400428:	681b      	ldr	r3, [r3, #0]
  40042a:	431a      	orrs	r2, r3
  40042c:	68fb      	ldr	r3, [r7, #12]
  40042e:	605a      	str	r2, [r3, #4]

	return 0;
  400430:	2300      	movs	r3, #0
}
  400432:	4618      	mov	r0, r3
  400434:	3710      	adds	r7, #16
  400436:	46bd      	mov	sp, r7
  400438:	bd80      	pop	{r7, pc}
  40043a:	bf00      	nop
  40043c:	00400365 	.word	0x00400365
  400440:	20006bfc 	.word	0x20006bfc
  400444:	004002dd 	.word	0x004002dd

00400448 <usart_init_hw_handshaking>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_init_hw_handshaking(Usart *p_usart,
		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
{
  400448:	b580      	push	{r7, lr}
  40044a:	b084      	sub	sp, #16
  40044c:	af00      	add	r7, sp, #0
  40044e:	60f8      	str	r0, [r7, #12]
  400450:	60b9      	str	r1, [r7, #8]
  400452:	607a      	str	r2, [r7, #4]
	/* Initialize the USART as standard RS232. */
	if (usart_init_rs232(p_usart, p_usart_opt, ul_mck)) {
  400454:	687a      	ldr	r2, [r7, #4]
  400456:	68b9      	ldr	r1, [r7, #8]
  400458:	68f8      	ldr	r0, [r7, #12]
  40045a:	4b0a      	ldr	r3, [pc, #40]	; (400484 <usart_init_hw_handshaking+0x3c>)
  40045c:	4798      	blx	r3
  40045e:	4603      	mov	r3, r0
  400460:	2b00      	cmp	r3, #0
  400462:	d001      	beq.n	400468 <usart_init_hw_handshaking+0x20>
		return 1;
  400464:	2301      	movs	r3, #1
  400466:	e008      	b.n	40047a <usart_init_hw_handshaking+0x32>
	}

	/* Set hardware handshaking mode. */
	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USART_MODE_Msk) |
  400468:	68fb      	ldr	r3, [r7, #12]
  40046a:	685b      	ldr	r3, [r3, #4]
  40046c:	f023 030f 	bic.w	r3, r3, #15
  400470:	f043 0202 	orr.w	r2, r3, #2
  400474:	68fb      	ldr	r3, [r7, #12]
  400476:	605a      	str	r2, [r3, #4]
			US_MR_USART_MODE_HW_HANDSHAKING;

	return 0;
  400478:	2300      	movs	r3, #0
}
  40047a:	4618      	mov	r0, r3
  40047c:	3710      	adds	r7, #16
  40047e:	46bd      	mov	sp, r7
  400480:	bd80      	pop	{r7, pc}
  400482:	bf00      	nop
  400484:	004003c5 	.word	0x004003c5

00400488 <usart_enable_tx>:
 * \brief Enable USART transmitter.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_enable_tx(Usart *p_usart)
{
  400488:	b480      	push	{r7}
  40048a:	b083      	sub	sp, #12
  40048c:	af00      	add	r7, sp, #0
  40048e:	6078      	str	r0, [r7, #4]
	p_usart->US_CR = US_CR_TXEN;
  400490:	687b      	ldr	r3, [r7, #4]
  400492:	2240      	movs	r2, #64	; 0x40
  400494:	601a      	str	r2, [r3, #0]
}
  400496:	bf00      	nop
  400498:	370c      	adds	r7, #12
  40049a:	46bd      	mov	sp, r7
  40049c:	bc80      	pop	{r7}
  40049e:	4770      	bx	lr

004004a0 <usart_reset_tx>:
 * \brief Immediately stop and disable USART transmitter.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset_tx(Usart *p_usart)
{
  4004a0:	b480      	push	{r7}
  4004a2:	b083      	sub	sp, #12
  4004a4:	af00      	add	r7, sp, #0
  4004a6:	6078      	str	r0, [r7, #4]
	/* Reset transmitter */
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  4004a8:	687b      	ldr	r3, [r7, #4]
  4004aa:	2288      	movs	r2, #136	; 0x88
  4004ac:	601a      	str	r2, [r3, #0]
}
  4004ae:	bf00      	nop
  4004b0:	370c      	adds	r7, #12
  4004b2:	46bd      	mov	sp, r7
  4004b4:	bc80      	pop	{r7}
  4004b6:	4770      	bx	lr

004004b8 <usart_enable_rx>:
 * \brief Enable USART receiver.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_enable_rx(Usart *p_usart)
{
  4004b8:	b480      	push	{r7}
  4004ba:	b083      	sub	sp, #12
  4004bc:	af00      	add	r7, sp, #0
  4004be:	6078      	str	r0, [r7, #4]
	p_usart->US_CR = US_CR_RXEN;
  4004c0:	687b      	ldr	r3, [r7, #4]
  4004c2:	2210      	movs	r2, #16
  4004c4:	601a      	str	r2, [r3, #0]
}
  4004c6:	bf00      	nop
  4004c8:	370c      	adds	r7, #12
  4004ca:	46bd      	mov	sp, r7
  4004cc:	bc80      	pop	{r7}
  4004ce:	4770      	bx	lr

004004d0 <usart_reset_rx>:
 * \brief Immediately stop and disable USART receiver.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset_rx(Usart *p_usart)
{
  4004d0:	b480      	push	{r7}
  4004d2:	b083      	sub	sp, #12
  4004d4:	af00      	add	r7, sp, #0
  4004d6:	6078      	str	r0, [r7, #4]
	/* Reset Receiver */
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  4004d8:	687b      	ldr	r3, [r7, #4]
  4004da:	2224      	movs	r2, #36	; 0x24
  4004dc:	601a      	str	r2, [r3, #0]
}
  4004de:	bf00      	nop
  4004e0:	370c      	adds	r7, #12
  4004e2:	46bd      	mov	sp, r7
  4004e4:	bc80      	pop	{r7}
  4004e6:	4770      	bx	lr

004004e8 <usart_enable_interrupt>:
 *
 * \param p_usart Pointer to a USART peripheral.
 * \param ul_sources Interrupt sources bit map.
 */
void usart_enable_interrupt(Usart *p_usart, uint32_t ul_sources)
{
  4004e8:	b480      	push	{r7}
  4004ea:	b083      	sub	sp, #12
  4004ec:	af00      	add	r7, sp, #0
  4004ee:	6078      	str	r0, [r7, #4]
  4004f0:	6039      	str	r1, [r7, #0]
	p_usart->US_IER = ul_sources;
  4004f2:	687b      	ldr	r3, [r7, #4]
  4004f4:	683a      	ldr	r2, [r7, #0]
  4004f6:	609a      	str	r2, [r3, #8]
}
  4004f8:	bf00      	nop
  4004fa:	370c      	adds	r7, #12
  4004fc:	46bd      	mov	sp, r7
  4004fe:	bc80      	pop	{r7}
  400500:	4770      	bx	lr

00400502 <usart_disable_interrupt>:
 *
 * \param p_usart Pointer to a USART peripheral.
 * \param ul_sources Interrupt sources bit map.
 */
void usart_disable_interrupt(Usart *p_usart, uint32_t ul_sources)
{
  400502:	b480      	push	{r7}
  400504:	b083      	sub	sp, #12
  400506:	af00      	add	r7, sp, #0
  400508:	6078      	str	r0, [r7, #4]
  40050a:	6039      	str	r1, [r7, #0]
	p_usart->US_IDR = ul_sources;
  40050c:	687b      	ldr	r3, [r7, #4]
  40050e:	683a      	ldr	r2, [r7, #0]
  400510:	60da      	str	r2, [r3, #12]
}
  400512:	bf00      	nop
  400514:	370c      	adds	r7, #12
  400516:	46bd      	mov	sp, r7
  400518:	bc80      	pop	{r7}
  40051a:	4770      	bx	lr

0040051c <usart_get_status>:
 * \param p_usart Pointer to a USART instance.
 *
 * \return The current USART status.
 */
uint32_t usart_get_status(Usart *p_usart)
{
  40051c:	b480      	push	{r7}
  40051e:	b083      	sub	sp, #12
  400520:	af00      	add	r7, sp, #0
  400522:	6078      	str	r0, [r7, #4]
	return p_usart->US_CSR;
  400524:	687b      	ldr	r3, [r7, #4]
  400526:	695b      	ldr	r3, [r3, #20]
}
  400528:	4618      	mov	r0, r3
  40052a:	370c      	adds	r7, #12
  40052c:	46bd      	mov	sp, r7
  40052e:	bc80      	pop	{r7}
  400530:	4770      	bx	lr

00400532 <usart_reset_status>:
 * \brief Reset status bits (PARE, OVER, MANERR, UNRE and PXBRK in US_CSR).
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset_status(Usart *p_usart)
{
  400532:	b480      	push	{r7}
  400534:	b083      	sub	sp, #12
  400536:	af00      	add	r7, sp, #0
  400538:	6078      	str	r0, [r7, #4]
	p_usart->US_CR = US_CR_RSTSTA;
  40053a:	687b      	ldr	r3, [r7, #4]
  40053c:	f44f 7280 	mov.w	r2, #256	; 0x100
  400540:	601a      	str	r2, [r3, #0]
}
  400542:	bf00      	nop
  400544:	370c      	adds	r7, #12
  400546:	46bd      	mov	sp, r7
  400548:	bc80      	pop	{r7}
  40054a:	4770      	bx	lr

0040054c <usart_drive_DTR_pin_high>:
 * \brief Drive the pin DTR to 1.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_drive_DTR_pin_high(Usart *p_usart)
{
  40054c:	b480      	push	{r7}
  40054e:	b083      	sub	sp, #12
  400550:	af00      	add	r7, sp, #0
  400552:	6078      	str	r0, [r7, #4]
	p_usart->US_CR = US_CR_DTRDIS;
  400554:	687b      	ldr	r3, [r7, #4]
  400556:	f44f 3200 	mov.w	r2, #131072	; 0x20000
  40055a:	601a      	str	r2, [r3, #0]
}
  40055c:	bf00      	nop
  40055e:	370c      	adds	r7, #12
  400560:	46bd      	mov	sp, r7
  400562:	bc80      	pop	{r7}
  400564:	4770      	bx	lr

00400566 <usart_drive_RTS_pin_high>:
 * \brief Drive the pin RTS to 1.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_drive_RTS_pin_high(Usart *p_usart)
{
  400566:	b480      	push	{r7}
  400568:	b083      	sub	sp, #12
  40056a:	af00      	add	r7, sp, #0
  40056c:	6078      	str	r0, [r7, #4]
	p_usart->US_CR = US_CR_RTSDIS;
  40056e:	687b      	ldr	r3, [r7, #4]
  400570:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  400574:	601a      	str	r2, [r3, #0]
}
  400576:	bf00      	nop
  400578:	370c      	adds	r7, #12
  40057a:	46bd      	mov	sp, r7
  40057c:	bc80      	pop	{r7}
  40057e:	4770      	bx	lr

00400580 <usart_read>:
 *
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
  400580:	b480      	push	{r7}
  400582:	b083      	sub	sp, #12
  400584:	af00      	add	r7, sp, #0
  400586:	6078      	str	r0, [r7, #4]
  400588:	6039      	str	r1, [r7, #0]
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  40058a:	687b      	ldr	r3, [r7, #4]
  40058c:	695b      	ldr	r3, [r3, #20]
  40058e:	f003 0301 	and.w	r3, r3, #1
  400592:	2b00      	cmp	r3, #0
  400594:	d101      	bne.n	40059a <usart_read+0x1a>
		return 1;
  400596:	2301      	movs	r3, #1
  400598:	e006      	b.n	4005a8 <usart_read+0x28>
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  40059a:	687b      	ldr	r3, [r7, #4]
  40059c:	699b      	ldr	r3, [r3, #24]
  40059e:	f3c3 0208 	ubfx	r2, r3, #0, #9
  4005a2:	683b      	ldr	r3, [r7, #0]
  4005a4:	601a      	str	r2, [r3, #0]

	return 0;
  4005a6:	2300      	movs	r3, #0
}
  4005a8:	4618      	mov	r0, r3
  4005aa:	370c      	adds	r7, #12
  4005ac:	46bd      	mov	sp, r7
  4005ae:	bc80      	pop	{r7}
  4005b0:	4770      	bx	lr
	...

004005b4 <usart_disable_writeprotect>:
 * \brief Disable write protect of USART registers.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
  4005b4:	b480      	push	{r7}
  4005b6:	b083      	sub	sp, #12
  4005b8:	af00      	add	r7, sp, #0
  4005ba:	6078      	str	r0, [r7, #4]
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  4005bc:	687b      	ldr	r3, [r7, #4]
  4005be:	4a04      	ldr	r2, [pc, #16]	; (4005d0 <usart_disable_writeprotect+0x1c>)
  4005c0:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
}
  4005c4:	bf00      	nop
  4005c6:	370c      	adds	r7, #12
  4005c8:	46bd      	mov	sp, r7
  4005ca:	bc80      	pop	{r7}
  4005cc:	4770      	bx	lr
  4005ce:	bf00      	nop
  4005d0:	55534100 	.word	0x55534100

004005d4 <wdt_disable>:

/**
 * \brief Disable the watchdog timer.
 */
void wdt_disable(Wdt *p_wdt)
{
  4005d4:	b480      	push	{r7}
  4005d6:	b083      	sub	sp, #12
  4005d8:	af00      	add	r7, sp, #0
  4005da:	6078      	str	r0, [r7, #4]
	p_wdt->WDT_MR = WDT_MR_WDDIS;
  4005dc:	687b      	ldr	r3, [r7, #4]
  4005de:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4005e2:	605a      	str	r2, [r3, #4]

}
  4005e4:	bf00      	nop
  4005e6:	370c      	adds	r7, #12
  4005e8:	46bd      	mov	sp, r7
  4005ea:	bc80      	pop	{r7}
  4005ec:	4770      	bx	lr
	...

004005f0 <ASCII_to_Num>:
volatile uint8_t buffer_program[MAX_PROGRAM_SIZE] = hardprogram;

// Functions /////////////////////////////////////////////
// Helper functions:
// Convert from ASCII to number (supports up to base 16)
uint8_t ASCII_to_Num(uint8_t inputChar){
  4005f0:	b480      	push	{r7}
  4005f2:	b083      	sub	sp, #12
  4005f4:	af00      	add	r7, sp, #0
  4005f6:	4603      	mov	r3, r0
  4005f8:	71fb      	strb	r3, [r7, #7]
	switch(inputChar){
  4005fa:	79fb      	ldrb	r3, [r7, #7]
  4005fc:	3b30      	subs	r3, #48	; 0x30
  4005fe:	2b16      	cmp	r3, #22
  400600:	d850      	bhi.n	4006a4 <ASCII_to_Num+0xb4>
  400602:	a201      	add	r2, pc, #4	; (adr r2, 400608 <ASCII_to_Num+0x18>)
  400604:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  400608:	00400665 	.word	0x00400665
  40060c:	00400669 	.word	0x00400669
  400610:	0040066d 	.word	0x0040066d
  400614:	00400671 	.word	0x00400671
  400618:	00400675 	.word	0x00400675
  40061c:	00400679 	.word	0x00400679
  400620:	0040067d 	.word	0x0040067d
  400624:	00400681 	.word	0x00400681
  400628:	00400685 	.word	0x00400685
  40062c:	00400689 	.word	0x00400689
  400630:	004006a5 	.word	0x004006a5
  400634:	004006a5 	.word	0x004006a5
  400638:	004006a5 	.word	0x004006a5
  40063c:	004006a5 	.word	0x004006a5
  400640:	004006a5 	.word	0x004006a5
  400644:	004006a5 	.word	0x004006a5
  400648:	004006a5 	.word	0x004006a5
  40064c:	0040068d 	.word	0x0040068d
  400650:	00400691 	.word	0x00400691
  400654:	00400695 	.word	0x00400695
  400658:	00400699 	.word	0x00400699
  40065c:	0040069d 	.word	0x0040069d
  400660:	004006a1 	.word	0x004006a1
		case 0x30:
			return 0;
  400664:	2300      	movs	r3, #0
  400666:	e01d      	b.n	4006a4 <ASCII_to_Num+0xb4>
		case 0x31:
			return 1;
  400668:	2301      	movs	r3, #1
  40066a:	e01b      	b.n	4006a4 <ASCII_to_Num+0xb4>
		case 0x32:
			return 2;
  40066c:	2302      	movs	r3, #2
  40066e:	e019      	b.n	4006a4 <ASCII_to_Num+0xb4>
		case 0x33:
			return 3;
  400670:	2303      	movs	r3, #3
  400672:	e017      	b.n	4006a4 <ASCII_to_Num+0xb4>
		case 0x34:
			return 4;
  400674:	2304      	movs	r3, #4
  400676:	e015      	b.n	4006a4 <ASCII_to_Num+0xb4>
		case 0x35:
			return 5;
  400678:	2305      	movs	r3, #5
  40067a:	e013      	b.n	4006a4 <ASCII_to_Num+0xb4>
		case 0x36:
			return 6;
  40067c:	2306      	movs	r3, #6
  40067e:	e011      	b.n	4006a4 <ASCII_to_Num+0xb4>
		case 0x37:
			return 7;
  400680:	2307      	movs	r3, #7
  400682:	e00f      	b.n	4006a4 <ASCII_to_Num+0xb4>
		case 0x38:
			return 8;
  400684:	2308      	movs	r3, #8
  400686:	e00d      	b.n	4006a4 <ASCII_to_Num+0xb4>
		case 0x39:
			return 9;
  400688:	2309      	movs	r3, #9
  40068a:	e00b      	b.n	4006a4 <ASCII_to_Num+0xb4>
		case 0x41:
			return 10;
  40068c:	230a      	movs	r3, #10
  40068e:	e009      	b.n	4006a4 <ASCII_to_Num+0xb4>
		case 0x42:
			return 11;
  400690:	230b      	movs	r3, #11
  400692:	e007      	b.n	4006a4 <ASCII_to_Num+0xb4>
		case 0x43:
			return 12;
  400694:	230c      	movs	r3, #12
  400696:	e005      	b.n	4006a4 <ASCII_to_Num+0xb4>
		case 0x44:
			return 13;
  400698:	230d      	movs	r3, #13
  40069a:	e003      	b.n	4006a4 <ASCII_to_Num+0xb4>
		case 0x45:
			return 14;
  40069c:	230e      	movs	r3, #14
  40069e:	e001      	b.n	4006a4 <ASCII_to_Num+0xb4>
		case 0x46:
			return 15;
  4006a0:	230f      	movs	r3, #15
  4006a2:	e7ff      	b.n	4006a4 <ASCII_to_Num+0xb4>
	}
}
  4006a4:	4618      	mov	r0, r3
  4006a6:	370c      	adds	r7, #12
  4006a8:	46bd      	mov	sp, r7
  4006aa:	bc80      	pop	{r7}
  4006ac:	4770      	bx	lr
  4006ae:	bf00      	nop

004006b0 <Parse_Program>:
	}
}

///////////////////////////
// Interpret the given program
void Parse_Program(void){// eventually put input file here?
  4006b0:	b590      	push	{r4, r7, lr}
  4006b2:	b08b      	sub	sp, #44	; 0x2c
  4006b4:	af00      	add	r7, sp, #0
	uint8_t EOF_reached = 0;
  4006b6:	2300      	movs	r3, #0
  4006b8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	uint8_t current_character = 0;
  4006bc:	2300      	movs	r3, #0
  4006be:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
	uint32_t current_line = 0;
  4006c2:	2300      	movs	r3, #0
  4006c4:	623b      	str	r3, [r7, #32]
	
	// Go through entire program
	while(EOF_reached!=1){
  4006c6:	e0af      	b.n	400828 <Parse_Program+0x178>
		// Check if I am looking at the start of the line
		if(buffer_program[current_character]==':'){
  4006c8:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
  4006cc:	4a5b      	ldr	r2, [pc, #364]	; (40083c <Parse_Program+0x18c>)
  4006ce:	5cd3      	ldrb	r3, [r2, r3]
  4006d0:	b2db      	uxtb	r3, r3
  4006d2:	2b3a      	cmp	r3, #58	; 0x3a
  4006d4:	f040 80a3 	bne.w	40081e <Parse_Program+0x16e>
			// Check the byte count
			uint32_t byteCount = ASCII_to_Num(buffer_program[current_character+1])*16+ASCII_to_Num(buffer_program[current_character+2]);
  4006d8:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
  4006dc:	3301      	adds	r3, #1
  4006de:	4a57      	ldr	r2, [pc, #348]	; (40083c <Parse_Program+0x18c>)
  4006e0:	5cd3      	ldrb	r3, [r2, r3]
  4006e2:	b2db      	uxtb	r3, r3
  4006e4:	4618      	mov	r0, r3
  4006e6:	4b56      	ldr	r3, [pc, #344]	; (400840 <Parse_Program+0x190>)
  4006e8:	4798      	blx	r3
  4006ea:	4603      	mov	r3, r0
  4006ec:	011c      	lsls	r4, r3, #4
  4006ee:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
  4006f2:	3302      	adds	r3, #2
  4006f4:	4a51      	ldr	r2, [pc, #324]	; (40083c <Parse_Program+0x18c>)
  4006f6:	5cd3      	ldrb	r3, [r2, r3]
  4006f8:	b2db      	uxtb	r3, r3
  4006fa:	4618      	mov	r0, r3
  4006fc:	4b50      	ldr	r3, [pc, #320]	; (400840 <Parse_Program+0x190>)
  4006fe:	4798      	blx	r3
  400700:	4603      	mov	r3, r0
  400702:	4423      	add	r3, r4
  400704:	61bb      	str	r3, [r7, #24]
			
			uint32_t addressValue = 0;
  400706:	2300      	movs	r3, #0
  400708:	617b      	str	r3, [r7, #20]
			uint8_t byteToWrite = 0;
  40070a:	2300      	movs	r3, #0
  40070c:	74fb      	strb	r3, [r7, #19]
			// Check the record type
			switch(buffer_program[current_character+OFFSET_RECORDTYPE]){
  40070e:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
  400712:	3307      	adds	r3, #7
  400714:	4a49      	ldr	r2, [pc, #292]	; (40083c <Parse_Program+0x18c>)
  400716:	5cd3      	ldrb	r3, [r2, r3]
  400718:	b2db      	uxtb	r3, r3
  40071a:	2b05      	cmp	r3, #5
  40071c:	d872      	bhi.n	400804 <Parse_Program+0x154>
  40071e:	a201      	add	r2, pc, #4	; (adr r2, 400724 <Parse_Program+0x74>)
  400720:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  400724:	0040073d 	.word	0x0040073d
  400728:	004007fd 	.word	0x004007fd
  40072c:	00400805 	.word	0x00400805
  400730:	00400805 	.word	0x00400805
  400734:	00400805 	.word	0x00400805
  400738:	00400805 	.word	0x00400805
				case HEX_DATA:
					// Reconstruct the value of the address
					addressValue = PROGRAM_MEMORY_START + 
										ASCII_to_Num(buffer_program[current_character+OFFSET_ADDRESS+0])*0x1000 +
  40073c:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
  400740:	3303      	adds	r3, #3
  400742:	4a3e      	ldr	r2, [pc, #248]	; (40083c <Parse_Program+0x18c>)
  400744:	5cd3      	ldrb	r3, [r2, r3]
  400746:	b2db      	uxtb	r3, r3
  400748:	4618      	mov	r0, r3
  40074a:	4b3d      	ldr	r3, [pc, #244]	; (400840 <Parse_Program+0x190>)
  40074c:	4798      	blx	r3
  40074e:	4603      	mov	r3, r0
					addressValue = PROGRAM_MEMORY_START + 
  400750:	f503 6380 	add.w	r3, r3, #1024	; 0x400
										ASCII_to_Num(buffer_program[current_character+OFFSET_ADDRESS+0])*0x1000 +
  400754:	011c      	lsls	r4, r3, #4
										ASCII_to_Num(buffer_program[current_character+OFFSET_ADDRESS+1])*0x100 +
  400756:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
  40075a:	3304      	adds	r3, #4
  40075c:	4a37      	ldr	r2, [pc, #220]	; (40083c <Parse_Program+0x18c>)
  40075e:	5cd3      	ldrb	r3, [r2, r3]
  400760:	b2db      	uxtb	r3, r3
  400762:	4618      	mov	r0, r3
  400764:	4b36      	ldr	r3, [pc, #216]	; (400840 <Parse_Program+0x190>)
  400766:	4798      	blx	r3
  400768:	4603      	mov	r3, r0
										ASCII_to_Num(buffer_program[current_character+OFFSET_ADDRESS+0])*0x1000 +
  40076a:	4423      	add	r3, r4
										ASCII_to_Num(buffer_program[current_character+OFFSET_ADDRESS+1])*0x100 +
  40076c:	011c      	lsls	r4, r3, #4
										ASCII_to_Num(buffer_program[current_character+OFFSET_ADDRESS+2])*0x10 +
  40076e:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
  400772:	3305      	adds	r3, #5
  400774:	4a31      	ldr	r2, [pc, #196]	; (40083c <Parse_Program+0x18c>)
  400776:	5cd3      	ldrb	r3, [r2, r3]
  400778:	b2db      	uxtb	r3, r3
  40077a:	4618      	mov	r0, r3
  40077c:	4b30      	ldr	r3, [pc, #192]	; (400840 <Parse_Program+0x190>)
  40077e:	4798      	blx	r3
  400780:	4603      	mov	r3, r0
										ASCII_to_Num(buffer_program[current_character+OFFSET_ADDRESS+1])*0x100 +
  400782:	4423      	add	r3, r4
  400784:	011c      	lsls	r4, r3, #4
										ASCII_to_Num(buffer_program[current_character+OFFSET_ADDRESS+0]);
  400786:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
  40078a:	3303      	adds	r3, #3
  40078c:	4a2b      	ldr	r2, [pc, #172]	; (40083c <Parse_Program+0x18c>)
  40078e:	5cd3      	ldrb	r3, [r2, r3]
  400790:	b2db      	uxtb	r3, r3
  400792:	4618      	mov	r0, r3
  400794:	4b2a      	ldr	r3, [pc, #168]	; (400840 <Parse_Program+0x190>)
  400796:	4798      	blx	r3
  400798:	4603      	mov	r3, r0
										ASCII_to_Num(buffer_program[current_character+OFFSET_ADDRESS+2])*0x10 +
  40079a:	4423      	add	r3, r4
					addressValue = PROGRAM_MEMORY_START + 
  40079c:	617b      	str	r3, [r7, #20]

					// Loop through for each byte to send and send it
					for(uint32_t jj = 0; jj < byteCount; jj++){
  40079e:	2300      	movs	r3, #0
  4007a0:	61fb      	str	r3, [r7, #28]
  4007a2:	e026      	b.n	4007f2 <Parse_Program+0x142>
						// Read in the byte to write
						byteToWrite = ASCII_to_Num(buffer_program[current_character+OFFSET_DATA+jj*2])*0x10 +
  4007a4:	f897 2026 	ldrb.w	r2, [r7, #38]	; 0x26
  4007a8:	69fb      	ldr	r3, [r7, #28]
  4007aa:	005b      	lsls	r3, r3, #1
  4007ac:	4413      	add	r3, r2
  4007ae:	3309      	adds	r3, #9
  4007b0:	4a22      	ldr	r2, [pc, #136]	; (40083c <Parse_Program+0x18c>)
  4007b2:	5cd3      	ldrb	r3, [r2, r3]
  4007b4:	b2db      	uxtb	r3, r3
  4007b6:	4618      	mov	r0, r3
  4007b8:	4b21      	ldr	r3, [pc, #132]	; (400840 <Parse_Program+0x190>)
  4007ba:	4798      	blx	r3
  4007bc:	4603      	mov	r3, r0
  4007be:	011b      	lsls	r3, r3, #4
  4007c0:	b2dc      	uxtb	r4, r3
										ASCII_to_Num(buffer_program[current_character+OFFSET_DATA+jj*2+1]);
  4007c2:	f897 2026 	ldrb.w	r2, [r7, #38]	; 0x26
  4007c6:	69fb      	ldr	r3, [r7, #28]
  4007c8:	005b      	lsls	r3, r3, #1
  4007ca:	4413      	add	r3, r2
  4007cc:	330a      	adds	r3, #10
  4007ce:	4a1b      	ldr	r2, [pc, #108]	; (40083c <Parse_Program+0x18c>)
  4007d0:	5cd3      	ldrb	r3, [r2, r3]
  4007d2:	b2db      	uxtb	r3, r3
  4007d4:	4618      	mov	r0, r3
  4007d6:	4b1a      	ldr	r3, [pc, #104]	; (400840 <Parse_Program+0x190>)
  4007d8:	4798      	blx	r3
  4007da:	4603      	mov	r3, r0
						byteToWrite = ASCII_to_Num(buffer_program[current_character+OFFSET_DATA+jj*2])*0x10 +
  4007dc:	4423      	add	r3, r4
  4007de:	74fb      	strb	r3, [r7, #19]
						// Create the string to write
						uint8_t boot_write_string[17];
						sprintf(boot_write_string, "O%x,%x#",addressValue,byteToWrite);
  4007e0:	7cfb      	ldrb	r3, [r7, #19]
  4007e2:	4638      	mov	r0, r7
  4007e4:	697a      	ldr	r2, [r7, #20]
  4007e6:	4917      	ldr	r1, [pc, #92]	; (400844 <Parse_Program+0x194>)
  4007e8:	4c17      	ldr	r4, [pc, #92]	; (400848 <Parse_Program+0x198>)
  4007ea:	47a0      	blx	r4
					for(uint32_t jj = 0; jj < byteCount; jj++){
  4007ec:	69fb      	ldr	r3, [r7, #28]
  4007ee:	3301      	adds	r3, #1
  4007f0:	61fb      	str	r3, [r7, #28]
  4007f2:	69fa      	ldr	r2, [r7, #28]
  4007f4:	69bb      	ldr	r3, [r7, #24]
  4007f6:	429a      	cmp	r2, r3
  4007f8:	d3d4      	bcc.n	4007a4 <Parse_Program+0xf4>
					
					// Gather the data, put it into the program_data array
					for(uint32_t jj = 0; jj < byteCount*2; jj++){
						program_data[jj][current_line] = buffer_program[current_character+OFFSET_DATA+jj];
					}*/
					break;
  4007fa:	e003      	b.n	400804 <Parse_Program+0x154>
				case HEX_EOF:
					EOF_reached = 1;
  4007fc:	2301      	movs	r3, #1
  4007fe:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
					break;
  400802:	bf00      	nop
					// Not implemented. The address field is 0000 (not used) and the byte count is 04. The four data bytes represent the 32-bit value loaded into the EIP register of the 80386 and higher CPU.
					break;
			}
			
			// Jump to next colon
			current_character = current_character+OFFSET_DATA+2+byteCount;
  400804:	69bb      	ldr	r3, [r7, #24]
  400806:	b2da      	uxtb	r2, r3
  400808:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
  40080c:	4413      	add	r3, r2
  40080e:	b2db      	uxtb	r3, r3
  400810:	330b      	adds	r3, #11
  400812:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
			current_line++;
  400816:	6a3b      	ldr	r3, [r7, #32]
  400818:	3301      	adds	r3, #1
  40081a:	623b      	str	r3, [r7, #32]
  40081c:	e004      	b.n	400828 <Parse_Program+0x178>
			
		}
		else{
			// Otherwise increment what character I'm looking at
			current_character += 1;
  40081e:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
  400822:	3301      	adds	r3, #1
  400824:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
	while(EOF_reached!=1){
  400828:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
  40082c:	2b01      	cmp	r3, #1
  40082e:	f47f af4b 	bne.w	4006c8 <Parse_Program+0x18>
		}
	}
}
  400832:	bf00      	nop
  400834:	372c      	adds	r7, #44	; 0x2c
  400836:	46bd      	mov	sp, r7
  400838:	bd90      	pop	{r4, r7, pc}
  40083a:	bf00      	nop
  40083c:	2000000c 	.word	0x2000000c
  400840:	004005f1 	.word	0x004005f1
  400844:	00407324 	.word	0x00407324
  400848:	00402769 	.word	0x00402769

0040084c <NVIC_EnableIRQ>:
    The function enables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  40084c:	b480      	push	{r7}
  40084e:	b083      	sub	sp, #12
  400850:	af00      	add	r7, sp, #0
  400852:	4603      	mov	r3, r0
  400854:	71fb      	strb	r3, [r7, #7]
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400856:	4908      	ldr	r1, [pc, #32]	; (400878 <NVIC_EnableIRQ+0x2c>)
  400858:	f997 3007 	ldrsb.w	r3, [r7, #7]
  40085c:	095b      	lsrs	r3, r3, #5
  40085e:	79fa      	ldrb	r2, [r7, #7]
  400860:	f002 021f 	and.w	r2, r2, #31
  400864:	2001      	movs	r0, #1
  400866:	fa00 f202 	lsl.w	r2, r0, r2
  40086a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
  40086e:	bf00      	nop
  400870:	370c      	adds	r7, #12
  400872:	46bd      	mov	sp, r7
  400874:	bc80      	pop	{r7}
  400876:	4770      	bx	lr
  400878:	e000e100 	.word	0xe000e100

0040087c <osc_get_rate>:

	return 0;
}

static inline uint32_t osc_get_rate(uint32_t ul_id)
{
  40087c:	b480      	push	{r7}
  40087e:	b083      	sub	sp, #12
  400880:	af00      	add	r7, sp, #0
  400882:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  400884:	687b      	ldr	r3, [r7, #4]
  400886:	2b07      	cmp	r3, #7
  400888:	d825      	bhi.n	4008d6 <osc_get_rate+0x5a>
  40088a:	a201      	add	r2, pc, #4	; (adr r2, 400890 <osc_get_rate+0x14>)
  40088c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  400890:	004008b1 	.word	0x004008b1
  400894:	004008b7 	.word	0x004008b7
  400898:	004008bd 	.word	0x004008bd
  40089c:	004008c3 	.word	0x004008c3
  4008a0:	004008c7 	.word	0x004008c7
  4008a4:	004008cb 	.word	0x004008cb
  4008a8:	004008cf 	.word	0x004008cf
  4008ac:	004008d3 	.word	0x004008d3
	case OSC_SLCK_32K_RC:
		return OSC_SLCK_32K_RC_HZ;
  4008b0:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  4008b4:	e010      	b.n	4008d8 <osc_get_rate+0x5c>

	case OSC_SLCK_32K_XTAL:
		return BOARD_FREQ_SLCK_XTAL;
  4008b6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  4008ba:	e00d      	b.n	4008d8 <osc_get_rate+0x5c>

	case OSC_SLCK_32K_BYPASS:
		return BOARD_FREQ_SLCK_BYPASS;
  4008bc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  4008c0:	e00a      	b.n	4008d8 <osc_get_rate+0x5c>

	case OSC_MAINCK_4M_RC:
		return OSC_MAINCK_4M_RC_HZ;
  4008c2:	4b08      	ldr	r3, [pc, #32]	; (4008e4 <osc_get_rate+0x68>)
  4008c4:	e008      	b.n	4008d8 <osc_get_rate+0x5c>

	case OSC_MAINCK_8M_RC:
		return OSC_MAINCK_8M_RC_HZ;
  4008c6:	4b08      	ldr	r3, [pc, #32]	; (4008e8 <osc_get_rate+0x6c>)
  4008c8:	e006      	b.n	4008d8 <osc_get_rate+0x5c>

	case OSC_MAINCK_12M_RC:
		return OSC_MAINCK_12M_RC_HZ;
  4008ca:	4b08      	ldr	r3, [pc, #32]	; (4008ec <osc_get_rate+0x70>)
  4008cc:	e004      	b.n	4008d8 <osc_get_rate+0x5c>

	case OSC_MAINCK_XTAL:
		return BOARD_FREQ_MAINCK_XTAL;
  4008ce:	4b07      	ldr	r3, [pc, #28]	; (4008ec <osc_get_rate+0x70>)
  4008d0:	e002      	b.n	4008d8 <osc_get_rate+0x5c>

	case OSC_MAINCK_BYPASS:
		return BOARD_FREQ_MAINCK_BYPASS;
  4008d2:	4b06      	ldr	r3, [pc, #24]	; (4008ec <osc_get_rate+0x70>)
  4008d4:	e000      	b.n	4008d8 <osc_get_rate+0x5c>
	}

	return 0;
  4008d6:	2300      	movs	r3, #0
}
  4008d8:	4618      	mov	r0, r3
  4008da:	370c      	adds	r7, #12
  4008dc:	46bd      	mov	sp, r7
  4008de:	bc80      	pop	{r7}
  4008e0:	4770      	bx	lr
  4008e2:	bf00      	nop
  4008e4:	003d0900 	.word	0x003d0900
  4008e8:	007a1200 	.word	0x007a1200
  4008ec:	00b71b00 	.word	0x00b71b00

004008f0 <sysclk_get_main_hz>:
 */
#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
extern uint32_t sysclk_initialized;
#endif
static inline uint32_t sysclk_get_main_hz(void)
{
  4008f0:	b580      	push	{r7, lr}
  4008f2:	af00      	add	r7, sp, #0
	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_BYPASS) {
		return OSC_MAINCK_BYPASS_HZ;
	}
#ifdef CONFIG_PLL0_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		return pll_get_default_rate(0);
  4008f4:	2006      	movs	r0, #6
  4008f6:	4b04      	ldr	r3, [pc, #16]	; (400908 <sysclk_get_main_hz+0x18>)
  4008f8:	4798      	blx	r3
  4008fa:	4602      	mov	r2, r0
  4008fc:	4613      	mov	r3, r2
  4008fe:	009b      	lsls	r3, r3, #2
  400900:	4413      	add	r3, r2
  400902:	009b      	lsls	r3, r3, #2

	else {
		/* unhandled_case(CONFIG_SYSCLK_SOURCE); */
		return 0;
	}
}
  400904:	4618      	mov	r0, r3
  400906:	bd80      	pop	{r7, pc}
  400908:	0040087d 	.word	0x0040087d

0040090c <sysclk_get_cpu_hz>:
 * clocks.
 *
 * \return Frequency of the CPU clock, in Hz.
 */
static inline uint32_t sysclk_get_cpu_hz(void)
{
  40090c:	b580      	push	{r7, lr}
  40090e:	af00      	add	r7, sp, #0
	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
	/* prescaler, not an immediate value. */
	return sysclk_get_main_hz() /
  400910:	4b02      	ldr	r3, [pc, #8]	; (40091c <sysclk_get_cpu_hz+0x10>)
  400912:	4798      	blx	r3
  400914:	4603      	mov	r3, r0
  400916:	085b      	lsrs	r3, r3, #1
		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
}
  400918:	4618      	mov	r0, r3
  40091a:	bd80      	pop	{r7, pc}
  40091c:	004008f1 	.word	0x004008f1

00400920 <TC0_Handler>:
 */ 

#include "timer_interface.h"

void TC0_Handler(void)
{
  400920:	b580      	push	{r7, lr}
  400922:	b082      	sub	sp, #8
  400924:	af00      	add	r7, sp, #0
	uint32_t ul_status;

	// Read TC0 status.
	ul_status = tc_get_status(TC0, 0);
  400926:	2100      	movs	r1, #0
  400928:	4809      	ldr	r0, [pc, #36]	; (400950 <TC0_Handler+0x30>)
  40092a:	4b0a      	ldr	r3, [pc, #40]	; (400954 <TC0_Handler+0x34>)
  40092c:	4798      	blx	r3
  40092e:	6078      	str	r0, [r7, #4]

	// RC compare.
	if ((ul_status & TC_SR_CPCS) == TC_SR_CPCS) {
  400930:	687b      	ldr	r3, [r7, #4]
  400932:	f003 0310 	and.w	r3, r3, #16
  400936:	2b00      	cmp	r3, #0
  400938:	d006      	beq.n	400948 <TC0_Handler+0x28>
		counts++;
  40093a:	4b07      	ldr	r3, [pc, #28]	; (400958 <TC0_Handler+0x38>)
  40093c:	781b      	ldrb	r3, [r3, #0]
  40093e:	b2db      	uxtb	r3, r3
  400940:	3301      	adds	r3, #1
  400942:	b2da      	uxtb	r2, r3
  400944:	4b04      	ldr	r3, [pc, #16]	; (400958 <TC0_Handler+0x38>)
  400946:	701a      	strb	r2, [r3, #0]
	}
}
  400948:	bf00      	nop
  40094a:	3708      	adds	r7, #8
  40094c:	46bd      	mov	sp, r7
  40094e:	bd80      	pop	{r7, pc}
  400950:	40010000 	.word	0x40010000
  400954:	00401bc3 	.word	0x00401bc3
  400958:	20006c0c 	.word	0x20006c0c

0040095c <configure_tc>:

void configure_tc(void)
{
  40095c:	b590      	push	{r4, r7, lr}
  40095e:	b087      	sub	sp, #28
  400960:	af02      	add	r7, sp, #8
	uint32_t ul_div;
	uint32_t ul_tcclks;
	uint32_t ul_sysclk;

	// Get system clock.
	ul_sysclk = sysclk_get_cpu_hz();
  400962:	4b18      	ldr	r3, [pc, #96]	; (4009c4 <configure_tc+0x68>)
  400964:	4798      	blx	r3
  400966:	60f8      	str	r0, [r7, #12]

	// Configure PMC.
	pmc_enable_periph_clk(ID_TC0);
  400968:	2017      	movs	r0, #23
  40096a:	4b17      	ldr	r3, [pc, #92]	; (4009c8 <configure_tc+0x6c>)
  40096c:	4798      	blx	r3

	// Configure TC for a 1Hz frequency and trigger on RC compare.
	tc_find_mck_divisor(TC_FREQ, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  40096e:	1d39      	adds	r1, r7, #4
  400970:	f107 0208 	add.w	r2, r7, #8
  400974:	68fb      	ldr	r3, [r7, #12]
  400976:	9300      	str	r3, [sp, #0]
  400978:	460b      	mov	r3, r1
  40097a:	68f9      	ldr	r1, [r7, #12]
  40097c:	2001      	movs	r0, #1
  40097e:	4c13      	ldr	r4, [pc, #76]	; (4009cc <configure_tc+0x70>)
  400980:	47a0      	blx	r4
	tc_init(TC0, 0, ul_tcclks | TC_CMR_CPCTRG);
  400982:	687b      	ldr	r3, [r7, #4]
  400984:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  400988:	461a      	mov	r2, r3
  40098a:	2100      	movs	r1, #0
  40098c:	4810      	ldr	r0, [pc, #64]	; (4009d0 <configure_tc+0x74>)
  40098e:	4b11      	ldr	r3, [pc, #68]	; (4009d4 <configure_tc+0x78>)
  400990:	4798      	blx	r3
	tc_write_rc(TC0, 0, (ul_sysclk / ul_div) / TC_FREQ);
  400992:	68bb      	ldr	r3, [r7, #8]
  400994:	68fa      	ldr	r2, [r7, #12]
  400996:	fbb2 f3f3 	udiv	r3, r2, r3
  40099a:	461a      	mov	r2, r3
  40099c:	2100      	movs	r1, #0
  40099e:	480c      	ldr	r0, [pc, #48]	; (4009d0 <configure_tc+0x74>)
  4009a0:	4b0d      	ldr	r3, [pc, #52]	; (4009d8 <configure_tc+0x7c>)
  4009a2:	4798      	blx	r3

	// Configure and enable interrupt on RC compare.
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
  4009a4:	2017      	movs	r0, #23
  4009a6:	4b0d      	ldr	r3, [pc, #52]	; (4009dc <configure_tc+0x80>)
  4009a8:	4798      	blx	r3
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
  4009aa:	2210      	movs	r2, #16
  4009ac:	2100      	movs	r1, #0
  4009ae:	4808      	ldr	r0, [pc, #32]	; (4009d0 <configure_tc+0x74>)
  4009b0:	4b0b      	ldr	r3, [pc, #44]	; (4009e0 <configure_tc+0x84>)
  4009b2:	4798      	blx	r3
	
	// Start the timer
	tc_start(TC0, 0);
  4009b4:	2100      	movs	r1, #0
  4009b6:	4806      	ldr	r0, [pc, #24]	; (4009d0 <configure_tc+0x74>)
  4009b8:	4b0a      	ldr	r3, [pc, #40]	; (4009e4 <configure_tc+0x88>)
  4009ba:	4798      	blx	r3
  4009bc:	bf00      	nop
  4009be:	3714      	adds	r7, #20
  4009c0:	46bd      	mov	sp, r7
  4009c2:	bd90      	pop	{r4, r7, pc}
  4009c4:	0040090d 	.word	0x0040090d
  4009c8:	00401aa1 	.word	0x00401aa1
  4009cc:	00401be5 	.word	0x00401be5
  4009d0:	40010000 	.word	0x40010000
  4009d4:	00401b21 	.word	0x00401b21
  4009d8:	00401b79 	.word	0x00401b79
  4009dc:	0040084d 	.word	0x0040084d
  4009e0:	00401b9d 	.word	0x00401b9d
  4009e4:	00401b59 	.word	0x00401b59

004009e8 <NVIC_EnableIRQ>:
{
  4009e8:	b480      	push	{r7}
  4009ea:	b083      	sub	sp, #12
  4009ec:	af00      	add	r7, sp, #0
  4009ee:	4603      	mov	r3, r0
  4009f0:	71fb      	strb	r3, [r7, #7]
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4009f2:	4908      	ldr	r1, [pc, #32]	; (400a14 <NVIC_EnableIRQ+0x2c>)
  4009f4:	f997 3007 	ldrsb.w	r3, [r7, #7]
  4009f8:	095b      	lsrs	r3, r3, #5
  4009fa:	79fa      	ldrb	r2, [r7, #7]
  4009fc:	f002 021f 	and.w	r2, r2, #31
  400a00:	2001      	movs	r0, #1
  400a02:	fa00 f202 	lsl.w	r2, r0, r2
  400a06:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
  400a0a:	bf00      	nop
  400a0c:	370c      	adds	r7, #12
  400a0e:	46bd      	mov	sp, r7
  400a10:	bc80      	pop	{r7}
  400a12:	4770      	bx	lr
  400a14:	e000e100 	.word	0xe000e100

00400a18 <osc_get_rate>:
{
  400a18:	b480      	push	{r7}
  400a1a:	b083      	sub	sp, #12
  400a1c:	af00      	add	r7, sp, #0
  400a1e:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  400a20:	687b      	ldr	r3, [r7, #4]
  400a22:	2b07      	cmp	r3, #7
  400a24:	d825      	bhi.n	400a72 <osc_get_rate+0x5a>
  400a26:	a201      	add	r2, pc, #4	; (adr r2, 400a2c <osc_get_rate+0x14>)
  400a28:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  400a2c:	00400a4d 	.word	0x00400a4d
  400a30:	00400a53 	.word	0x00400a53
  400a34:	00400a59 	.word	0x00400a59
  400a38:	00400a5f 	.word	0x00400a5f
  400a3c:	00400a63 	.word	0x00400a63
  400a40:	00400a67 	.word	0x00400a67
  400a44:	00400a6b 	.word	0x00400a6b
  400a48:	00400a6f 	.word	0x00400a6f
		return OSC_SLCK_32K_RC_HZ;
  400a4c:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  400a50:	e010      	b.n	400a74 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
  400a52:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400a56:	e00d      	b.n	400a74 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
  400a58:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400a5c:	e00a      	b.n	400a74 <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
  400a5e:	4b08      	ldr	r3, [pc, #32]	; (400a80 <osc_get_rate+0x68>)
  400a60:	e008      	b.n	400a74 <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
  400a62:	4b08      	ldr	r3, [pc, #32]	; (400a84 <osc_get_rate+0x6c>)
  400a64:	e006      	b.n	400a74 <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
  400a66:	4b08      	ldr	r3, [pc, #32]	; (400a88 <osc_get_rate+0x70>)
  400a68:	e004      	b.n	400a74 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
  400a6a:	4b07      	ldr	r3, [pc, #28]	; (400a88 <osc_get_rate+0x70>)
  400a6c:	e002      	b.n	400a74 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
  400a6e:	4b06      	ldr	r3, [pc, #24]	; (400a88 <osc_get_rate+0x70>)
  400a70:	e000      	b.n	400a74 <osc_get_rate+0x5c>
	return 0;
  400a72:	2300      	movs	r3, #0
}
  400a74:	4618      	mov	r0, r3
  400a76:	370c      	adds	r7, #12
  400a78:	46bd      	mov	sp, r7
  400a7a:	bc80      	pop	{r7}
  400a7c:	4770      	bx	lr
  400a7e:	bf00      	nop
  400a80:	003d0900 	.word	0x003d0900
  400a84:	007a1200 	.word	0x007a1200
  400a88:	00b71b00 	.word	0x00b71b00

00400a8c <sysclk_get_main_hz>:
{
  400a8c:	b580      	push	{r7, lr}
  400a8e:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
  400a90:	2006      	movs	r0, #6
  400a92:	4b04      	ldr	r3, [pc, #16]	; (400aa4 <sysclk_get_main_hz+0x18>)
  400a94:	4798      	blx	r3
  400a96:	4602      	mov	r2, r0
  400a98:	4613      	mov	r3, r2
  400a9a:	009b      	lsls	r3, r3, #2
  400a9c:	4413      	add	r3, r2
  400a9e:	009b      	lsls	r3, r3, #2
}
  400aa0:	4618      	mov	r0, r3
  400aa2:	bd80      	pop	{r7, pc}
  400aa4:	00400a19 	.word	0x00400a19

00400aa8 <sysclk_get_cpu_hz>:
{
  400aa8:	b580      	push	{r7, lr}
  400aaa:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
  400aac:	4b02      	ldr	r3, [pc, #8]	; (400ab8 <sysclk_get_cpu_hz+0x10>)
  400aae:	4798      	blx	r3
  400ab0:	4603      	mov	r3, r0
  400ab2:	085b      	lsrs	r3, r3, #1
}
  400ab4:	4618      	mov	r0, r3
  400ab6:	bd80      	pop	{r7, pc}
  400ab8:	00400a8d 	.word	0x00400a8d

00400abc <sysclk_get_peripheral_hz>:
 * \brief Retrieves the current rate in Hz of the peripheral clocks.
 *
 * \return Frequency of the peripheral clocks, in Hz.
 */
static inline uint32_t sysclk_get_peripheral_hz(void)
{
  400abc:	b580      	push	{r7, lr}
  400abe:	af00      	add	r7, sp, #0
	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
	/* prescaler, not an immediate value. */
	return sysclk_get_main_hz() /
  400ac0:	4b02      	ldr	r3, [pc, #8]	; (400acc <sysclk_get_peripheral_hz+0x10>)
  400ac2:	4798      	blx	r3
  400ac4:	4603      	mov	r3, r0
  400ac6:	085b      	lsrs	r3, r3, #1
		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
}
  400ac8:	4618      	mov	r0, r3
  400aca:	bd80      	pop	{r7, pc}
  400acc:	00400a8d 	.word	0x00400a8d

00400ad0 <sysclk_enable_peripheral_clock>:
 * \brief Enable a peripheral's clock.
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
  400ad0:	b580      	push	{r7, lr}
  400ad2:	b082      	sub	sp, #8
  400ad4:	af00      	add	r7, sp, #0
  400ad6:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
  400ad8:	6878      	ldr	r0, [r7, #4]
  400ada:	4b03      	ldr	r3, [pc, #12]	; (400ae8 <sysclk_enable_peripheral_clock+0x18>)
  400adc:	4798      	blx	r3
}
  400ade:	bf00      	nop
  400ae0:	3708      	adds	r7, #8
  400ae2:	46bd      	mov	sp, r7
  400ae4:	bd80      	pop	{r7, pc}
  400ae6:	bf00      	nop
  400ae8:	00401aa1 	.word	0x00401aa1

00400aec <ioport_set_pin_dir>:
 * \param pin IOPORT pin to configure
 * \param dir Direction to set for the specified pin (\ref ioport_direction)
 */
static inline void ioport_set_pin_dir(ioport_pin_t pin,
		enum ioport_direction dir)
{
  400aec:	b480      	push	{r7}
  400aee:	b08d      	sub	sp, #52	; 0x34
  400af0:	af00      	add	r7, sp, #0
  400af2:	6078      	str	r0, [r7, #4]
  400af4:	460b      	mov	r3, r1
  400af6:	70fb      	strb	r3, [r7, #3]
  400af8:	687b      	ldr	r3, [r7, #4]
  400afa:	62fb      	str	r3, [r7, #44]	; 0x2c
  400afc:	78fb      	ldrb	r3, [r7, #3]
  400afe:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
  400b02:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  400b04:	627b      	str	r3, [r7, #36]	; 0x24
  400b06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  400b08:	623b      	str	r3, [r7, #32]
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
  400b0a:	6a3b      	ldr	r3, [r7, #32]
  400b0c:	095b      	lsrs	r3, r3, #5
  400b0e:	61fb      	str	r3, [r7, #28]
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  400b10:	69fb      	ldr	r3, [r7, #28]
  400b12:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400b16:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400b1a:	025b      	lsls	r3, r3, #9
}

__always_inline static void arch_ioport_set_pin_dir(ioport_pin_t pin,
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);
  400b1c:	61bb      	str	r3, [r7, #24]

	if (dir == IOPORT_DIR_OUTPUT) {
  400b1e:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
  400b22:	2b01      	cmp	r3, #1
  400b24:	d109      	bne.n	400b3a <ioport_set_pin_dir+0x4e>
  400b26:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  400b28:	617b      	str	r3, [r7, #20]
	return 1U << (pin & 0x1F);
  400b2a:	697b      	ldr	r3, [r7, #20]
  400b2c:	f003 031f 	and.w	r3, r3, #31
  400b30:	2201      	movs	r2, #1
  400b32:	409a      	lsls	r2, r3
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400b34:	69bb      	ldr	r3, [r7, #24]
  400b36:	611a      	str	r2, [r3, #16]
  400b38:	e00c      	b.n	400b54 <ioport_set_pin_dir+0x68>
	} else if (dir == IOPORT_DIR_INPUT) {
  400b3a:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
  400b3e:	2b00      	cmp	r3, #0
  400b40:	d108      	bne.n	400b54 <ioport_set_pin_dir+0x68>
  400b42:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  400b44:	613b      	str	r3, [r7, #16]
	return 1U << (pin & 0x1F);
  400b46:	693b      	ldr	r3, [r7, #16]
  400b48:	f003 031f 	and.w	r3, r3, #31
  400b4c:	2201      	movs	r2, #1
  400b4e:	409a      	lsls	r2, r3
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400b50:	69bb      	ldr	r3, [r7, #24]
  400b52:	615a      	str	r2, [r3, #20]
  400b54:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  400b56:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
  400b58:	68fb      	ldr	r3, [r7, #12]
  400b5a:	f003 031f 	and.w	r3, r3, #31
  400b5e:	2201      	movs	r2, #1
  400b60:	409a      	lsls	r2, r3
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400b62:	69bb      	ldr	r3, [r7, #24]
  400b64:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	arch_ioport_set_pin_dir(pin, dir);
}
  400b68:	bf00      	nop
  400b6a:	3734      	adds	r7, #52	; 0x34
  400b6c:	46bd      	mov	sp, r7
  400b6e:	bc80      	pop	{r7}
  400b70:	4770      	bx	lr

00400b72 <ioport_set_pin_level>:
 *
 * \param pin IOPORT pin to configure
 * \param level Logical value of the pin
 */
static inline void ioport_set_pin_level(ioport_pin_t pin, bool level)
{
  400b72:	b480      	push	{r7}
  400b74:	b08b      	sub	sp, #44	; 0x2c
  400b76:	af00      	add	r7, sp, #0
  400b78:	6078      	str	r0, [r7, #4]
  400b7a:	460b      	mov	r3, r1
  400b7c:	70fb      	strb	r3, [r7, #3]
  400b7e:	687b      	ldr	r3, [r7, #4]
  400b80:	627b      	str	r3, [r7, #36]	; 0x24
  400b82:	78fb      	ldrb	r3, [r7, #3]
  400b84:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  400b88:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  400b8a:	61fb      	str	r3, [r7, #28]
  400b8c:	69fb      	ldr	r3, [r7, #28]
  400b8e:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
  400b90:	69bb      	ldr	r3, [r7, #24]
  400b92:	095b      	lsrs	r3, r3, #5
  400b94:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  400b96:	697b      	ldr	r3, [r7, #20]
  400b98:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400b9c:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400ba0:	025b      	lsls	r3, r3, #9
}

__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);
  400ba2:	613b      	str	r3, [r7, #16]

	if (level) {
  400ba4:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
  400ba8:	2b00      	cmp	r3, #0
  400baa:	d009      	beq.n	400bc0 <ioport_set_pin_level+0x4e>
  400bac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  400bae:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
  400bb0:	68fb      	ldr	r3, [r7, #12]
  400bb2:	f003 031f 	and.w	r3, r3, #31
  400bb6:	2201      	movs	r2, #1
  400bb8:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400bba:	693b      	ldr	r3, [r7, #16]
  400bbc:	631a      	str	r2, [r3, #48]	; 0x30
	arch_ioport_set_pin_level(pin, level);
}
  400bbe:	e008      	b.n	400bd2 <ioport_set_pin_level+0x60>
  400bc0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  400bc2:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
  400bc4:	68bb      	ldr	r3, [r7, #8]
  400bc6:	f003 031f 	and.w	r3, r3, #31
  400bca:	2201      	movs	r2, #1
  400bcc:	409a      	lsls	r2, r3
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400bce:	693b      	ldr	r3, [r7, #16]
  400bd0:	635a      	str	r2, [r3, #52]	; 0x34
  400bd2:	bf00      	nop
  400bd4:	372c      	adds	r7, #44	; 0x2c
  400bd6:	46bd      	mov	sp, r7
  400bd8:	bc80      	pop	{r7}
  400bda:	4770      	bx	lr

00400bdc <USART0_Handler>:
/*
Handler for incoming data from the WiFi. Should call
process incoming byte wifi when a new byte arrives
*/
void WIFI_USART_HANDLER(void) 
{
  400bdc:	b580      	push	{r7, lr}
  400bde:	b082      	sub	sp, #8
  400be0:	af00      	add	r7, sp, #0
	uint32_t ul_status;
	
	/* Read USART status. */
	ul_status = usart_get_status(BOARD_USART);
  400be2:	480d      	ldr	r0, [pc, #52]	; (400c18 <USART0_Handler+0x3c>)
  400be4:	4b0d      	ldr	r3, [pc, #52]	; (400c1c <USART0_Handler+0x40>)
  400be6:	4798      	blx	r3
  400be8:	6078      	str	r0, [r7, #4]

	/* Receive buffer is full. */
	if (ul_status & US_CSR_RXBUFF) {
  400bea:	687b      	ldr	r3, [r7, #4]
  400bec:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  400bf0:	2b00      	cmp	r3, #0
  400bf2:	d00c      	beq.n	400c0e <USART0_Handler+0x32>
		usart_read(BOARD_USART, &received_byte_wifi);
  400bf4:	490a      	ldr	r1, [pc, #40]	; (400c20 <USART0_Handler+0x44>)
  400bf6:	4808      	ldr	r0, [pc, #32]	; (400c18 <USART0_Handler+0x3c>)
  400bf8:	4b0a      	ldr	r3, [pc, #40]	; (400c24 <USART0_Handler+0x48>)
  400bfa:	4798      	blx	r3
		new_rx_wifi = true;
  400bfc:	4b0a      	ldr	r3, [pc, #40]	; (400c28 <USART0_Handler+0x4c>)
  400bfe:	2201      	movs	r2, #1
  400c00:	701a      	strb	r2, [r3, #0]
		process_incoming_byte_wifi((uint8_t)received_byte_wifi);
  400c02:	4b07      	ldr	r3, [pc, #28]	; (400c20 <USART0_Handler+0x44>)
  400c04:	681b      	ldr	r3, [r3, #0]
  400c06:	b2db      	uxtb	r3, r3
  400c08:	4618      	mov	r0, r3
  400c0a:	4b08      	ldr	r3, [pc, #32]	; (400c2c <USART0_Handler+0x50>)
  400c0c:	4798      	blx	r3
	}
}
  400c0e:	bf00      	nop
  400c10:	3708      	adds	r7, #8
  400c12:	46bd      	mov	sp, r7
  400c14:	bd80      	pop	{r7, pc}
  400c16:	bf00      	nop
  400c18:	40024000 	.word	0x40024000
  400c1c:	0040051d 	.word	0x0040051d
  400c20:	20006c00 	.word	0x20006c00
  400c24:	00400581 	.word	0x00400581
  400c28:	20006c04 	.word	0x20006c04
  400c2c:	00400c31 	.word	0x00400c31

00400c30 <process_incoming_byte_wifi>:

/*
Stores every incoming byte (in byte) from the AMW136 in a buffer.
*/
void process_incoming_byte_wifi(uint8_t in_byte) 
{
  400c30:	b480      	push	{r7}
  400c32:	b083      	sub	sp, #12
  400c34:	af00      	add	r7, sp, #0
  400c36:	4603      	mov	r3, r0
  400c38:	71fb      	strb	r3, [r7, #7]
	buffer_wifi[input_pos_wifi] = in_byte;
  400c3a:	4b07      	ldr	r3, [pc, #28]	; (400c58 <process_incoming_byte_wifi+0x28>)
  400c3c:	681b      	ldr	r3, [r3, #0]
  400c3e:	4907      	ldr	r1, [pc, #28]	; (400c5c <process_incoming_byte_wifi+0x2c>)
  400c40:	79fa      	ldrb	r2, [r7, #7]
  400c42:	54ca      	strb	r2, [r1, r3]
	input_pos_wifi++;
  400c44:	4b04      	ldr	r3, [pc, #16]	; (400c58 <process_incoming_byte_wifi+0x28>)
  400c46:	681b      	ldr	r3, [r3, #0]
  400c48:	3301      	adds	r3, #1
  400c4a:	4a03      	ldr	r2, [pc, #12]	; (400c58 <process_incoming_byte_wifi+0x28>)
  400c4c:	6013      	str	r3, [r2, #0]
}
  400c4e:	bf00      	nop
  400c50:	370c      	adds	r7, #12
  400c52:	46bd      	mov	sp, r7
  400c54:	bc80      	pop	{r7}
  400c56:	4770      	bx	lr
  400c58:	20006c08 	.word	0x20006c08
  400c5c:	20006c88 	.word	0x20006c88

00400c60 <wifi_command_response_handler>:
/*
Handler for command complete rising-edge interrupt from AMW136.
When this is triggered, it is time to process the response of the AMW136.
*/
void wifi_command_response_handler(uint32_t ul_id, uint32_t ul_mask) 
{
  400c60:	b580      	push	{r7, lr}
  400c62:	b084      	sub	sp, #16
  400c64:	af00      	add	r7, sp, #0
  400c66:	6078      	str	r0, [r7, #4]
  400c68:	6039      	str	r1, [r7, #0]
	unused(ul_id);
	unused(ul_mask);

	process_data_wifi();
  400c6a:	4b0c      	ldr	r3, [pc, #48]	; (400c9c <wifi_command_response_handler+0x3c>)
  400c6c:	4798      	blx	r3
	
	// reset the buffer
	input_pos_wifi = 0;
  400c6e:	4b0c      	ldr	r3, [pc, #48]	; (400ca0 <wifi_command_response_handler+0x40>)
  400c70:	2200      	movs	r2, #0
  400c72:	601a      	str	r2, [r3, #0]
	for(uint32_t ii = 0 ;ii < MAX_INPUT_WIFI; ii++){
  400c74:	2300      	movs	r3, #0
  400c76:	60fb      	str	r3, [r7, #12]
  400c78:	e007      	b.n	400c8a <wifi_command_response_handler+0x2a>
		buffer_wifi[ii] = 0;
  400c7a:	4a0a      	ldr	r2, [pc, #40]	; (400ca4 <wifi_command_response_handler+0x44>)
  400c7c:	68fb      	ldr	r3, [r7, #12]
  400c7e:	4413      	add	r3, r2
  400c80:	2200      	movs	r2, #0
  400c82:	701a      	strb	r2, [r3, #0]
	for(uint32_t ii = 0 ;ii < MAX_INPUT_WIFI; ii++){
  400c84:	68fb      	ldr	r3, [r7, #12]
  400c86:	3301      	adds	r3, #1
  400c88:	60fb      	str	r3, [r7, #12]
  400c8a:	68fb      	ldr	r3, [r7, #12]
  400c8c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  400c90:	d3f3      	bcc.n	400c7a <wifi_command_response_handler+0x1a>
	}
	
}
  400c92:	bf00      	nop
  400c94:	3710      	adds	r7, #16
  400c96:	46bd      	mov	sp, r7
  400c98:	bd80      	pop	{r7, pc}
  400c9a:	bf00      	nop
  400c9c:	00400ca9 	.word	0x00400ca9
  400ca0:	20006c08 	.word	0x20006c08
  400ca4:	20006c88 	.word	0x20006c88

00400ca8 <process_data_wifi>:
filled by process incoming byte wifi. This processing should be looking for certain
responses that the AMW136 should give, such as start transfer when it is ready to
receive the image.
*/
void process_data_wifi (void) 
{
  400ca8:	b580      	push	{r7, lr}
  400caa:	af00      	add	r7, sp, #0
	strcpy(rawRecievedMessage,buffer_wifi);
  400cac:	491a      	ldr	r1, [pc, #104]	; (400d18 <process_data_wifi+0x70>)
  400cae:	481b      	ldr	r0, [pc, #108]	; (400d1c <process_data_wifi+0x74>)
  400cb0:	4b1b      	ldr	r3, [pc, #108]	; (400d20 <process_data_wifi+0x78>)
  400cb2:	4798      	blx	r3
	// Compare the received string with some other string
	/*if(strstr(buffer_wifi, "StringToCompare")){
		// set receivedMessage variable as appropriate
	}*/
	if(strstr(buffer_wifi,msg_START_TRANSFER)){
  400cb4:	491b      	ldr	r1, [pc, #108]	; (400d24 <process_data_wifi+0x7c>)
  400cb6:	4818      	ldr	r0, [pc, #96]	; (400d18 <process_data_wifi+0x70>)
  400cb8:	4b1b      	ldr	r3, [pc, #108]	; (400d28 <process_data_wifi+0x80>)
  400cba:	4798      	blx	r3
  400cbc:	4603      	mov	r3, r0
  400cbe:	2b00      	cmp	r3, #0
  400cc0:	d003      	beq.n	400cca <process_data_wifi+0x22>
		receivedMessage = START_TRANSFER;
  400cc2:	4b1a      	ldr	r3, [pc, #104]	; (400d2c <process_data_wifi+0x84>)
  400cc4:	2202      	movs	r2, #2
  400cc6:	601a      	str	r2, [r3, #0]
					receivedMessage = DEFAULT;
				}
			}
		}
	}
}
  400cc8:	e024      	b.n	400d14 <process_data_wifi+0x6c>
    	if(strstr(buffer_wifi,msg_CLIENT_NOT_CONNECTED)){
  400cca:	4919      	ldr	r1, [pc, #100]	; (400d30 <process_data_wifi+0x88>)
  400ccc:	4812      	ldr	r0, [pc, #72]	; (400d18 <process_data_wifi+0x70>)
  400cce:	4b16      	ldr	r3, [pc, #88]	; (400d28 <process_data_wifi+0x80>)
  400cd0:	4798      	blx	r3
  400cd2:	4603      	mov	r3, r0
  400cd4:	2b00      	cmp	r3, #0
  400cd6:	d003      	beq.n	400ce0 <process_data_wifi+0x38>
			receivedMessage = CLIENT_NOT_CONNECTED	;
  400cd8:	4b14      	ldr	r3, [pc, #80]	; (400d2c <process_data_wifi+0x84>)
  400cda:	2204      	movs	r2, #4
  400cdc:	601a      	str	r2, [r3, #0]
}
  400cde:	e019      	b.n	400d14 <process_data_wifi+0x6c>
			if(strstr(buffer_wifi,msg_COMMAND_FAILED)){
  400ce0:	4914      	ldr	r1, [pc, #80]	; (400d34 <process_data_wifi+0x8c>)
  400ce2:	480d      	ldr	r0, [pc, #52]	; (400d18 <process_data_wifi+0x70>)
  400ce4:	4b10      	ldr	r3, [pc, #64]	; (400d28 <process_data_wifi+0x80>)
  400ce6:	4798      	blx	r3
  400ce8:	4603      	mov	r3, r0
  400cea:	2b00      	cmp	r3, #0
  400cec:	d003      	beq.n	400cf6 <process_data_wifi+0x4e>
				receivedMessage = COMMAND_FAILED;
  400cee:	4b0f      	ldr	r3, [pc, #60]	; (400d2c <process_data_wifi+0x84>)
  400cf0:	2205      	movs	r2, #5
  400cf2:	601a      	str	r2, [r3, #0]
}
  400cf4:	e00e      	b.n	400d14 <process_data_wifi+0x6c>
				if(strstr(buffer_wifi,msg_RECIEVE_NONE)){
  400cf6:	4910      	ldr	r1, [pc, #64]	; (400d38 <process_data_wifi+0x90>)
  400cf8:	4807      	ldr	r0, [pc, #28]	; (400d18 <process_data_wifi+0x70>)
  400cfa:	4b0b      	ldr	r3, [pc, #44]	; (400d28 <process_data_wifi+0x80>)
  400cfc:	4798      	blx	r3
  400cfe:	4603      	mov	r3, r0
  400d00:	2b00      	cmp	r3, #0
  400d02:	d003      	beq.n	400d0c <process_data_wifi+0x64>
					receivedMessage = RECIEVE_NONE;
  400d04:	4b09      	ldr	r3, [pc, #36]	; (400d2c <process_data_wifi+0x84>)
  400d06:	2206      	movs	r2, #6
  400d08:	601a      	str	r2, [r3, #0]
}
  400d0a:	e003      	b.n	400d14 <process_data_wifi+0x6c>
					receivedMessage = DEFAULT;
  400d0c:	4b07      	ldr	r3, [pc, #28]	; (400d2c <process_data_wifi+0x84>)
  400d0e:	f44f 627a 	mov.w	r2, #4000	; 0xfa0
  400d12:	601a      	str	r2, [r3, #0]
}
  400d14:	bf00      	nop
  400d16:	bd80      	pop	{r7, pc}
  400d18:	20006c88 	.word	0x20006c88
  400d1c:	20006c50 	.word	0x20006c50
  400d20:	004027b5 	.word	0x004027b5
  400d24:	0040732c 	.word	0x0040732c
  400d28:	00402b21 	.word	0x00402b21
  400d2c:	20006c10 	.word	0x20006c10
  400d30:	0040733c 	.word	0x0040733c
  400d34:	00407354 	.word	0x00407354
  400d38:	00407364 	.word	0x00407364

00400d3c <wifi_web_setup_handler>:
/*
Handler for button to initiate web setup of AMW136. Should set a flag indicating a
request to initiate web setup
*/
void wifi_web_setup_handler(uint32_t ul_id, uint32_t ul_mask) 
{
  400d3c:	b480      	push	{r7}
  400d3e:	b083      	sub	sp, #12
  400d40:	af00      	add	r7, sp, #0
  400d42:	6078      	str	r0, [r7, #4]
  400d44:	6039      	str	r1, [r7, #0]
	unused(ul_id);
	unused(ul_mask);

	wifi_setup_flag = true;
  400d46:	4b04      	ldr	r3, [pc, #16]	; (400d58 <wifi_web_setup_handler+0x1c>)
  400d48:	2201      	movs	r2, #1
  400d4a:	701a      	strb	r2, [r3, #0]
}
  400d4c:	bf00      	nop
  400d4e:	370c      	adds	r7, #12
  400d50:	46bd      	mov	sp, r7
  400d52:	bc80      	pop	{r7}
  400d54:	4770      	bx	lr
  400d56:	bf00      	nop
  400d58:	20006c0d 	.word	0x20006c0d

00400d5c <configure_usart_wifi>:

/*
Configuration of USART port used to communicate with the AMW136.
*/
void configure_usart_wifi(void) 
{
  400d5c:	b5b0      	push	{r4, r5, r7, lr}
  400d5e:	b086      	sub	sp, #24
  400d60:	af00      	add	r7, sp, #0
	
	static uint32_t ul_sysclk;
	const sam_usart_opt_t usart_console_settings = {
  400d62:	4b22      	ldr	r3, [pc, #136]	; (400dec <configure_usart_wifi+0x90>)
  400d64:	463c      	mov	r4, r7
  400d66:	461d      	mov	r5, r3
  400d68:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  400d6a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  400d6c:	e895 0003 	ldmia.w	r5, {r0, r1}
  400d70:	e884 0003 	stmia.w	r4, {r0, r1}
		/* This field is only used in IrDA mode. */
		0
	};

	/* Get peripheral clock. */
	ul_sysclk = sysclk_get_peripheral_hz();
  400d74:	4b1e      	ldr	r3, [pc, #120]	; (400df0 <configure_usart_wifi+0x94>)
  400d76:	4798      	blx	r3
  400d78:	4602      	mov	r2, r0
  400d7a:	4b1e      	ldr	r3, [pc, #120]	; (400df4 <configure_usart_wifi+0x98>)
  400d7c:	601a      	str	r2, [r3, #0]

	/* Enable peripheral clock. */
	sysclk_enable_peripheral_clock(BOARD_ID_USART);
  400d7e:	200e      	movs	r0, #14
  400d80:	4b1d      	ldr	r3, [pc, #116]	; (400df8 <configure_usart_wifi+0x9c>)
  400d82:	4798      	blx	r3

	/* Configure USART. */
	usart_init_hw_handshaking(BOARD_USART, &usart_console_settings, ul_sysclk);
  400d84:	4b1b      	ldr	r3, [pc, #108]	; (400df4 <configure_usart_wifi+0x98>)
  400d86:	681a      	ldr	r2, [r3, #0]
  400d88:	463b      	mov	r3, r7
  400d8a:	4619      	mov	r1, r3
  400d8c:	481b      	ldr	r0, [pc, #108]	; (400dfc <configure_usart_wifi+0xa0>)
  400d8e:	4b1c      	ldr	r3, [pc, #112]	; (400e00 <configure_usart_wifi+0xa4>)
  400d90:	4798      	blx	r3

	/* Disable all the interrupts. */
	usart_disable_interrupt(BOARD_USART, ALL_INTERRUPT_MASK);
  400d92:	f04f 31ff 	mov.w	r1, #4294967295
  400d96:	4819      	ldr	r0, [pc, #100]	; (400dfc <configure_usart_wifi+0xa0>)
  400d98:	4b1a      	ldr	r3, [pc, #104]	; (400e04 <configure_usart_wifi+0xa8>)
  400d9a:	4798      	blx	r3
	
	/* Enable TX & RX function. */
	usart_enable_tx(BOARD_USART);
  400d9c:	4817      	ldr	r0, [pc, #92]	; (400dfc <configure_usart_wifi+0xa0>)
  400d9e:	4b1a      	ldr	r3, [pc, #104]	; (400e08 <configure_usart_wifi+0xac>)
  400da0:	4798      	blx	r3
	usart_enable_rx(BOARD_USART);
  400da2:	4816      	ldr	r0, [pc, #88]	; (400dfc <configure_usart_wifi+0xa0>)
  400da4:	4b19      	ldr	r3, [pc, #100]	; (400e0c <configure_usart_wifi+0xb0>)
  400da6:	4798      	blx	r3

	usart_enable_interrupt(BOARD_USART, US_IER_RXRDY);
  400da8:	2101      	movs	r1, #1
  400daa:	4814      	ldr	r0, [pc, #80]	; (400dfc <configure_usart_wifi+0xa0>)
  400dac:	4b18      	ldr	r3, [pc, #96]	; (400e10 <configure_usart_wifi+0xb4>)
  400dae:	4798      	blx	r3

	/* Configure and enable interrupt of USART. */
	NVIC_EnableIRQ(USART_IRQn);
  400db0:	200e      	movs	r0, #14
  400db2:	4b18      	ldr	r3, [pc, #96]	; (400e14 <configure_usart_wifi+0xb8>)
  400db4:	4798      	blx	r3

	// Configure the RX / TX pins
	/* Configure USART RXD pin */
	gpio_configure_pin(PIN_USART0_RXD_IDX, PIN_USART0_RXD_FLAGS);
  400db6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400dba:	2005      	movs	r0, #5
  400dbc:	4b16      	ldr	r3, [pc, #88]	; (400e18 <configure_usart_wifi+0xbc>)
  400dbe:	4798      	blx	r3
	/* Configure USART TXD pin */
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
  400dc0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400dc4:	2006      	movs	r0, #6
  400dc6:	4b14      	ldr	r3, [pc, #80]	; (400e18 <configure_usart_wifi+0xbc>)
  400dc8:	4798      	blx	r3
	/* Configure USART CTS pin */
	//gpio_configure_pin(PIN_USART0_CTS_IDX, PIN_USART0_CTS_FLAGS);
	ioport_set_pin_dir(PIN_USART0_CTS_IDX,IOPORT_DIR_OUTPUT);
  400dca:	2101      	movs	r1, #1
  400dcc:	2008      	movs	r0, #8
  400dce:	4b13      	ldr	r3, [pc, #76]	; (400e1c <configure_usart_wifi+0xc0>)
  400dd0:	4798      	blx	r3
	ioport_set_pin_level(PIN_USART0_CTS_IDX,false);
  400dd2:	2100      	movs	r1, #0
  400dd4:	2008      	movs	r0, #8
  400dd6:	4b12      	ldr	r3, [pc, #72]	; (400e20 <configure_usart_wifi+0xc4>)
  400dd8:	4798      	blx	r3
	/* Configure USART RTS pin */
	gpio_configure_pin(PIN_USART0_RTS_IDX, PIN_USART0_RTS_FLAGS);
  400dda:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400dde:	2007      	movs	r0, #7
  400de0:	4b0d      	ldr	r3, [pc, #52]	; (400e18 <configure_usart_wifi+0xbc>)
  400de2:	4798      	blx	r3
}
  400de4:	bf00      	nop
  400de6:	3718      	adds	r7, #24
  400de8:	46bd      	mov	sp, r7
  400dea:	bdb0      	pop	{r4, r5, r7, pc}
  400dec:	0040736c 	.word	0x0040736c
  400df0:	00400abd 	.word	0x00400abd
  400df4:	20006c14 	.word	0x20006c14
  400df8:	00400ad1 	.word	0x00400ad1
  400dfc:	40024000 	.word	0x40024000
  400e00:	00400449 	.word	0x00400449
  400e04:	00400503 	.word	0x00400503
  400e08:	00400489 	.word	0x00400489
  400e0c:	004004b9 	.word	0x004004b9
  400e10:	004004e9 	.word	0x004004e9
  400e14:	004009e9 	.word	0x004009e9
  400e18:	00401681 	.word	0x00401681
  400e1c:	00400aed 	.word	0x00400aed
  400e20:	00400b73 	.word	0x00400b73

00400e24 <configure_wifi_comm_pin>:

/*
Configuration of command complete rising-edge interrupt.
*/
void configure_wifi_comm_pin(void) 
{
  400e24:	b590      	push	{r4, r7, lr}
  400e26:	b083      	sub	sp, #12
  400e28:	af02      	add	r7, sp, #8
	/* Configure PIO clock. */
	
	pmc_enable_periph_clk(WIFI_COM_COMPLETE_ID);
  400e2a:	200b      	movs	r0, #11
  400e2c:	4b0e      	ldr	r3, [pc, #56]	; (400e68 <configure_wifi_comm_pin+0x44>)
  400e2e:	4798      	blx	r3
	
	/* Adjust PIO debounce filter using a 10 Hz filter. */
	pio_set_debounce_filter(WIFI_COM_COMPLETE_PIO, WIFI_COM_COMPLETE_MSK, 10);
  400e30:	220a      	movs	r2, #10
  400e32:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  400e36:	480d      	ldr	r0, [pc, #52]	; (400e6c <configure_wifi_comm_pin+0x48>)
  400e38:	4b0d      	ldr	r3, [pc, #52]	; (400e70 <configure_wifi_comm_pin+0x4c>)
  400e3a:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h	**/
	pio_handler_set(WIFI_COM_COMPLETE_PIO, WIFI_COM_COMPLETE_ID, WIFI_COM_COMPLETE_MSK,
  400e3c:	4b0d      	ldr	r3, [pc, #52]	; (400e74 <configure_wifi_comm_pin+0x50>)
  400e3e:	9300      	str	r3, [sp, #0]
  400e40:	2371      	movs	r3, #113	; 0x71
  400e42:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  400e46:	210b      	movs	r1, #11
  400e48:	4808      	ldr	r0, [pc, #32]	; (400e6c <configure_wifi_comm_pin+0x48>)
  400e4a:	4c0b      	ldr	r4, [pc, #44]	; (400e78 <configure_wifi_comm_pin+0x54>)
  400e4c:	47a0      	blx	r4
			WIFI_COM_COMPLETE_ATTR, wifi_command_response_handler);

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)WIFI_COM_COMPLETE_ID);
  400e4e:	200b      	movs	r0, #11
  400e50:	4b0a      	ldr	r3, [pc, #40]	; (400e7c <configure_wifi_comm_pin+0x58>)
  400e52:	4798      	blx	r3

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WIFI_COM_COMPLETE_PIO, WIFI_COM_COMPLETE_MSK);
  400e54:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  400e58:	4804      	ldr	r0, [pc, #16]	; (400e6c <configure_wifi_comm_pin+0x48>)
  400e5a:	4b09      	ldr	r3, [pc, #36]	; (400e80 <configure_wifi_comm_pin+0x5c>)
  400e5c:	4798      	blx	r3
}
  400e5e:	bf00      	nop
  400e60:	3704      	adds	r7, #4
  400e62:	46bd      	mov	sp, r7
  400e64:	bd90      	pop	{r4, r7, pc}
  400e66:	bf00      	nop
  400e68:	00401aa1 	.word	0x00401aa1
  400e6c:	400e0e00 	.word	0x400e0e00
  400e70:	0040138b 	.word	0x0040138b
  400e74:	00400c61 	.word	0x00400c61
  400e78:	0040020d 	.word	0x0040020d
  400e7c:	004009e9 	.word	0x004009e9
  400e80:	0040161f 	.word	0x0040161f

00400e84 <configure_wifi_web_setup_pin>:

/*
Configuration of button interrupt to initiate web setup.
*/
void configure_wifi_web_setup_pin(void) 
{
  400e84:	b590      	push	{r4, r7, lr}
  400e86:	b083      	sub	sp, #12
  400e88:	af02      	add	r7, sp, #8
	/* Configure PIO clock. */
	pmc_enable_periph_clk(PUSH_BUTTON_ID);
  400e8a:	200b      	movs	r0, #11
  400e8c:	4b0c      	ldr	r3, [pc, #48]	; (400ec0 <configure_wifi_web_setup_pin+0x3c>)
  400e8e:	4798      	blx	r3

	/* Adjust PIO debounce filter using a 10 Hz filter. */
	pio_set_debounce_filter(PUSH_BUTTON_PIO, PUSH_BUTTON_PIN_MSK, 10);
  400e90:	220a      	movs	r2, #10
  400e92:	2101      	movs	r1, #1
  400e94:	480b      	ldr	r0, [pc, #44]	; (400ec4 <configure_wifi_web_setup_pin+0x40>)
  400e96:	4b0c      	ldr	r3, [pc, #48]	; (400ec8 <configure_wifi_web_setup_pin+0x44>)
  400e98:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h**/
	pio_handler_set(PUSH_BUTTON_PIO, PUSH_BUTTON_ID, PUSH_BUTTON_PIN_MSK,
  400e9a:	4b0c      	ldr	r3, [pc, #48]	; (400ecc <configure_wifi_web_setup_pin+0x48>)
  400e9c:	9300      	str	r3, [sp, #0]
  400e9e:	2349      	movs	r3, #73	; 0x49
  400ea0:	2201      	movs	r2, #1
  400ea2:	210b      	movs	r1, #11
  400ea4:	4807      	ldr	r0, [pc, #28]	; (400ec4 <configure_wifi_web_setup_pin+0x40>)
  400ea6:	4c0a      	ldr	r4, [pc, #40]	; (400ed0 <configure_wifi_web_setup_pin+0x4c>)
  400ea8:	47a0      	blx	r4
			PUSH_BUTTON_ATTR, wifi_web_setup_handler);

	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type)PUSH_BUTTON_ID);
  400eaa:	200b      	movs	r0, #11
  400eac:	4b09      	ldr	r3, [pc, #36]	; (400ed4 <configure_wifi_web_setup_pin+0x50>)
  400eae:	4798      	blx	r3

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(PUSH_BUTTON_PIO, PUSH_BUTTON_PIN_MSK);
  400eb0:	2101      	movs	r1, #1
  400eb2:	4804      	ldr	r0, [pc, #16]	; (400ec4 <configure_wifi_web_setup_pin+0x40>)
  400eb4:	4b08      	ldr	r3, [pc, #32]	; (400ed8 <configure_wifi_web_setup_pin+0x54>)
  400eb6:	4798      	blx	r3
}
  400eb8:	bf00      	nop
  400eba:	3704      	adds	r7, #4
  400ebc:	46bd      	mov	sp, r7
  400ebe:	bd90      	pop	{r4, r7, pc}
  400ec0:	00401aa1 	.word	0x00401aa1
  400ec4:	400e0e00 	.word	0x400e0e00
  400ec8:	0040138b 	.word	0x0040138b
  400ecc:	00400d3d 	.word	0x00400d3d
  400ed0:	0040020d 	.word	0x0040020d
  400ed4:	004009e9 	.word	0x004009e9
  400ed8:	0040161f 	.word	0x0040161f

00400edc <resetWifi>:
		dv++;
	}
}

// Simple function to reset the wifi
void resetWifi(void){
  400edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400ee0:	b087      	sub	sp, #28
  400ee2:	af00      	add	r7, sp, #0
	// Reset the wifi by pulling the wifi reset pin low, then bringing it back high.
	ioport_set_pin_level(PIN_WIFI_RESET,LOW); //reset WIFI
  400ee4:	2100      	movs	r1, #0
  400ee6:	2021      	movs	r0, #33	; 0x21
  400ee8:	4b43      	ldr	r3, [pc, #268]	; (400ff8 <resetWifi+0x11c>)
  400eea:	4798      	blx	r3
	delay_ms(1000);
  400eec:	4b43      	ldr	r3, [pc, #268]	; (400ffc <resetWifi+0x120>)
  400eee:	4798      	blx	r3
  400ef0:	4603      	mov	r3, r0
  400ef2:	4619      	mov	r1, r3
  400ef4:	f04f 0200 	mov.w	r2, #0
  400ef8:	460b      	mov	r3, r1
  400efa:	4614      	mov	r4, r2
  400efc:	0166      	lsls	r6, r4, #5
  400efe:	ea46 66d3 	orr.w	r6, r6, r3, lsr #27
  400f02:	015d      	lsls	r5, r3, #5
  400f04:	462b      	mov	r3, r5
  400f06:	4634      	mov	r4, r6
  400f08:	1a5b      	subs	r3, r3, r1
  400f0a:	eb64 0402 	sbc.w	r4, r4, r2
  400f0e:	00a0      	lsls	r0, r4, #2
  400f10:	6178      	str	r0, [r7, #20]
  400f12:	6978      	ldr	r0, [r7, #20]
  400f14:	ea40 7093 	orr.w	r0, r0, r3, lsr #30
  400f18:	6178      	str	r0, [r7, #20]
  400f1a:	009b      	lsls	r3, r3, #2
  400f1c:	613b      	str	r3, [r7, #16]
  400f1e:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
  400f22:	185b      	adds	r3, r3, r1
  400f24:	eb44 0402 	adc.w	r4, r4, r2
  400f28:	00e2      	lsls	r2, r4, #3
  400f2a:	60fa      	str	r2, [r7, #12]
  400f2c:	68fa      	ldr	r2, [r7, #12]
  400f2e:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
  400f32:	60fa      	str	r2, [r7, #12]
  400f34:	00db      	lsls	r3, r3, #3
  400f36:	60bb      	str	r3, [r7, #8]
  400f38:	e9d7 3402 	ldrd	r3, r4, [r7, #8]
  400f3c:	4619      	mov	r1, r3
  400f3e:	4622      	mov	r2, r4
  400f40:	f243 63af 	movw	r3, #13999	; 0x36af
  400f44:	f04f 0400 	mov.w	r4, #0
  400f48:	18cd      	adds	r5, r1, r3
  400f4a:	eb42 0604 	adc.w	r6, r2, r4
  400f4e:	4628      	mov	r0, r5
  400f50:	4631      	mov	r1, r6
  400f52:	4c2b      	ldr	r4, [pc, #172]	; (401000 <resetWifi+0x124>)
  400f54:	f243 62b0 	movw	r2, #14000	; 0x36b0
  400f58:	f04f 0300 	mov.w	r3, #0
  400f5c:	47a0      	blx	r4
  400f5e:	4603      	mov	r3, r0
  400f60:	460c      	mov	r4, r1
  400f62:	4618      	mov	r0, r3
  400f64:	4b27      	ldr	r3, [pc, #156]	; (401004 <resetWifi+0x128>)
  400f66:	4798      	blx	r3
	ioport_set_pin_level(PIN_WIFI_RESET,HIGH); //turn Wifi Back on
  400f68:	2101      	movs	r1, #1
  400f6a:	2021      	movs	r0, #33	; 0x21
  400f6c:	4b22      	ldr	r3, [pc, #136]	; (400ff8 <resetWifi+0x11c>)
  400f6e:	4798      	blx	r3
	delay_ms(2000); // Account for ~0.7s high during reset
  400f70:	4b22      	ldr	r3, [pc, #136]	; (400ffc <resetWifi+0x120>)
  400f72:	4798      	blx	r3
  400f74:	4603      	mov	r3, r0
  400f76:	4619      	mov	r1, r3
  400f78:	f04f 0200 	mov.w	r2, #0
  400f7c:	460b      	mov	r3, r1
  400f7e:	4614      	mov	r4, r2
  400f80:	0160      	lsls	r0, r4, #5
  400f82:	6078      	str	r0, [r7, #4]
  400f84:	6878      	ldr	r0, [r7, #4]
  400f86:	ea40 60d3 	orr.w	r0, r0, r3, lsr #27
  400f8a:	6078      	str	r0, [r7, #4]
  400f8c:	015b      	lsls	r3, r3, #5
  400f8e:	603b      	str	r3, [r7, #0]
  400f90:	e9d7 3400 	ldrd	r3, r4, [r7]
  400f94:	1a5b      	subs	r3, r3, r1
  400f96:	eb64 0402 	sbc.w	r4, r4, r2
  400f9a:	ea4f 0b84 	mov.w	fp, r4, lsl #2
  400f9e:	ea4b 7b93 	orr.w	fp, fp, r3, lsr #30
  400fa2:	ea4f 0a83 	mov.w	sl, r3, lsl #2
  400fa6:	4653      	mov	r3, sl
  400fa8:	465c      	mov	r4, fp
  400faa:	185b      	adds	r3, r3, r1
  400fac:	eb44 0402 	adc.w	r4, r4, r2
  400fb0:	ea4f 1904 	mov.w	r9, r4, lsl #4
  400fb4:	ea49 7913 	orr.w	r9, r9, r3, lsr #28
  400fb8:	ea4f 1803 	mov.w	r8, r3, lsl #4
  400fbc:	4643      	mov	r3, r8
  400fbe:	464c      	mov	r4, r9
  400fc0:	4619      	mov	r1, r3
  400fc2:	4622      	mov	r2, r4
  400fc4:	f243 63af 	movw	r3, #13999	; 0x36af
  400fc8:	f04f 0400 	mov.w	r4, #0
  400fcc:	18cd      	adds	r5, r1, r3
  400fce:	eb42 0604 	adc.w	r6, r2, r4
  400fd2:	4628      	mov	r0, r5
  400fd4:	4631      	mov	r1, r6
  400fd6:	4c0a      	ldr	r4, [pc, #40]	; (401000 <resetWifi+0x124>)
  400fd8:	f243 62b0 	movw	r2, #14000	; 0x36b0
  400fdc:	f04f 0300 	mov.w	r3, #0
  400fe0:	47a0      	blx	r4
  400fe2:	4603      	mov	r3, r0
  400fe4:	460c      	mov	r4, r1
  400fe6:	4618      	mov	r0, r3
  400fe8:	4b06      	ldr	r3, [pc, #24]	; (401004 <resetWifi+0x128>)
  400fea:	4798      	blx	r3
}
  400fec:	bf00      	nop
  400fee:	371c      	adds	r7, #28
  400ff0:	46bd      	mov	sp, r7
  400ff2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400ff6:	bf00      	nop
  400ff8:	00400b73 	.word	0x00400b73
  400ffc:	00400aa9 	.word	0x00400aa9
  401000:	0040236d 	.word	0x0040236d
  401004:	20000001 	.word	0x20000001

00401008 <osc_enable>:
{
  401008:	b580      	push	{r7, lr}
  40100a:	b082      	sub	sp, #8
  40100c:	af00      	add	r7, sp, #0
  40100e:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  401010:	687b      	ldr	r3, [r7, #4]
  401012:	2b07      	cmp	r3, #7
  401014:	d831      	bhi.n	40107a <osc_enable+0x72>
  401016:	a201      	add	r2, pc, #4	; (adr r2, 40101c <osc_enable+0x14>)
  401018:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  40101c:	00401079 	.word	0x00401079
  401020:	0040103d 	.word	0x0040103d
  401024:	00401045 	.word	0x00401045
  401028:	0040104d 	.word	0x0040104d
  40102c:	00401055 	.word	0x00401055
  401030:	0040105d 	.word	0x0040105d
  401034:	00401065 	.word	0x00401065
  401038:	0040106f 	.word	0x0040106f
		pmc_switch_sclk_to_32kxtal(PMC_OSC_XTAL);
  40103c:	2000      	movs	r0, #0
  40103e:	4b11      	ldr	r3, [pc, #68]	; (401084 <osc_enable+0x7c>)
  401040:	4798      	blx	r3
		break;
  401042:	e01a      	b.n	40107a <osc_enable+0x72>
		pmc_switch_sclk_to_32kxtal(PMC_OSC_BYPASS);
  401044:	2001      	movs	r0, #1
  401046:	4b0f      	ldr	r3, [pc, #60]	; (401084 <osc_enable+0x7c>)
  401048:	4798      	blx	r3
		break;
  40104a:	e016      	b.n	40107a <osc_enable+0x72>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_4_MHz);
  40104c:	2000      	movs	r0, #0
  40104e:	4b0e      	ldr	r3, [pc, #56]	; (401088 <osc_enable+0x80>)
  401050:	4798      	blx	r3
		break;
  401052:	e012      	b.n	40107a <osc_enable+0x72>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_8_MHz);
  401054:	2010      	movs	r0, #16
  401056:	4b0c      	ldr	r3, [pc, #48]	; (401088 <osc_enable+0x80>)
  401058:	4798      	blx	r3
		break;
  40105a:	e00e      	b.n	40107a <osc_enable+0x72>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
  40105c:	2020      	movs	r0, #32
  40105e:	4b0a      	ldr	r3, [pc, #40]	; (401088 <osc_enable+0x80>)
  401060:	4798      	blx	r3
		break;
  401062:	e00a      	b.n	40107a <osc_enable+0x72>
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  401064:	213e      	movs	r1, #62	; 0x3e
  401066:	2000      	movs	r0, #0
  401068:	4b08      	ldr	r3, [pc, #32]	; (40108c <osc_enable+0x84>)
  40106a:	4798      	blx	r3
		break;
  40106c:	e005      	b.n	40107a <osc_enable+0x72>
		pmc_switch_mainck_to_xtal(PMC_OSC_BYPASS,
  40106e:	213e      	movs	r1, #62	; 0x3e
  401070:	2001      	movs	r0, #1
  401072:	4b06      	ldr	r3, [pc, #24]	; (40108c <osc_enable+0x84>)
  401074:	4798      	blx	r3
		break;
  401076:	e000      	b.n	40107a <osc_enable+0x72>
		break;
  401078:	bf00      	nop
}
  40107a:	bf00      	nop
  40107c:	3708      	adds	r7, #8
  40107e:	46bd      	mov	sp, r7
  401080:	bd80      	pop	{r7, pc}
  401082:	bf00      	nop
  401084:	004018d5 	.word	0x004018d5
  401088:	00401941 	.word	0x00401941
  40108c:	004019b1 	.word	0x004019b1

00401090 <osc_is_ready>:
{
  401090:	b580      	push	{r7, lr}
  401092:	b082      	sub	sp, #8
  401094:	af00      	add	r7, sp, #0
  401096:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  401098:	687b      	ldr	r3, [r7, #4]
  40109a:	2b07      	cmp	r3, #7
  40109c:	d826      	bhi.n	4010ec <osc_is_ready+0x5c>
  40109e:	a201      	add	r2, pc, #4	; (adr r2, 4010a4 <osc_is_ready+0x14>)
  4010a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  4010a4:	004010c5 	.word	0x004010c5
  4010a8:	004010c9 	.word	0x004010c9
  4010ac:	004010c9 	.word	0x004010c9
  4010b0:	004010db 	.word	0x004010db
  4010b4:	004010db 	.word	0x004010db
  4010b8:	004010db 	.word	0x004010db
  4010bc:	004010db 	.word	0x004010db
  4010c0:	004010db 	.word	0x004010db
		return 1;
  4010c4:	2301      	movs	r3, #1
  4010c6:	e012      	b.n	4010ee <osc_is_ready+0x5e>
		return pmc_osc_is_ready_32kxtal();
  4010c8:	4b0b      	ldr	r3, [pc, #44]	; (4010f8 <osc_is_ready+0x68>)
  4010ca:	4798      	blx	r3
  4010cc:	4603      	mov	r3, r0
  4010ce:	2b00      	cmp	r3, #0
  4010d0:	bf14      	ite	ne
  4010d2:	2301      	movne	r3, #1
  4010d4:	2300      	moveq	r3, #0
  4010d6:	b2db      	uxtb	r3, r3
  4010d8:	e009      	b.n	4010ee <osc_is_ready+0x5e>
		return pmc_osc_is_ready_mainck();
  4010da:	4b08      	ldr	r3, [pc, #32]	; (4010fc <osc_is_ready+0x6c>)
  4010dc:	4798      	blx	r3
  4010de:	4603      	mov	r3, r0
  4010e0:	2b00      	cmp	r3, #0
  4010e2:	bf14      	ite	ne
  4010e4:	2301      	movne	r3, #1
  4010e6:	2300      	moveq	r3, #0
  4010e8:	b2db      	uxtb	r3, r3
  4010ea:	e000      	b.n	4010ee <osc_is_ready+0x5e>
	return 0;
  4010ec:	2300      	movs	r3, #0
}
  4010ee:	4618      	mov	r0, r3
  4010f0:	3708      	adds	r7, #8
  4010f2:	46bd      	mov	sp, r7
  4010f4:	bd80      	pop	{r7, pc}
  4010f6:	bf00      	nop
  4010f8:	0040190d 	.word	0x0040190d
  4010fc:	00401a29 	.word	0x00401a29

00401100 <osc_get_rate>:
{
  401100:	b480      	push	{r7}
  401102:	b083      	sub	sp, #12
  401104:	af00      	add	r7, sp, #0
  401106:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  401108:	687b      	ldr	r3, [r7, #4]
  40110a:	2b07      	cmp	r3, #7
  40110c:	d825      	bhi.n	40115a <osc_get_rate+0x5a>
  40110e:	a201      	add	r2, pc, #4	; (adr r2, 401114 <osc_get_rate+0x14>)
  401110:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  401114:	00401135 	.word	0x00401135
  401118:	0040113b 	.word	0x0040113b
  40111c:	00401141 	.word	0x00401141
  401120:	00401147 	.word	0x00401147
  401124:	0040114b 	.word	0x0040114b
  401128:	0040114f 	.word	0x0040114f
  40112c:	00401153 	.word	0x00401153
  401130:	00401157 	.word	0x00401157
		return OSC_SLCK_32K_RC_HZ;
  401134:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  401138:	e010      	b.n	40115c <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
  40113a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  40113e:	e00d      	b.n	40115c <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
  401140:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  401144:	e00a      	b.n	40115c <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
  401146:	4b08      	ldr	r3, [pc, #32]	; (401168 <osc_get_rate+0x68>)
  401148:	e008      	b.n	40115c <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
  40114a:	4b08      	ldr	r3, [pc, #32]	; (40116c <osc_get_rate+0x6c>)
  40114c:	e006      	b.n	40115c <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
  40114e:	4b08      	ldr	r3, [pc, #32]	; (401170 <osc_get_rate+0x70>)
  401150:	e004      	b.n	40115c <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
  401152:	4b07      	ldr	r3, [pc, #28]	; (401170 <osc_get_rate+0x70>)
  401154:	e002      	b.n	40115c <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
  401156:	4b06      	ldr	r3, [pc, #24]	; (401170 <osc_get_rate+0x70>)
  401158:	e000      	b.n	40115c <osc_get_rate+0x5c>
	return 0;
  40115a:	2300      	movs	r3, #0
}
  40115c:	4618      	mov	r0, r3
  40115e:	370c      	adds	r7, #12
  401160:	46bd      	mov	sp, r7
  401162:	bc80      	pop	{r7}
  401164:	4770      	bx	lr
  401166:	bf00      	nop
  401168:	003d0900 	.word	0x003d0900
  40116c:	007a1200 	.word	0x007a1200
  401170:	00b71b00 	.word	0x00b71b00

00401174 <osc_wait_ready>:
 * to become stable and ready to use as a clock source.
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
  401174:	b580      	push	{r7, lr}
  401176:	b082      	sub	sp, #8
  401178:	af00      	add	r7, sp, #0
  40117a:	4603      	mov	r3, r0
  40117c:	71fb      	strb	r3, [r7, #7]
	while (!osc_is_ready(id)) {
  40117e:	bf00      	nop
  401180:	79fb      	ldrb	r3, [r7, #7]
  401182:	4618      	mov	r0, r3
  401184:	4b05      	ldr	r3, [pc, #20]	; (40119c <osc_wait_ready+0x28>)
  401186:	4798      	blx	r3
  401188:	4603      	mov	r3, r0
  40118a:	f083 0301 	eor.w	r3, r3, #1
  40118e:	b2db      	uxtb	r3, r3
  401190:	2b00      	cmp	r3, #0
  401192:	d1f5      	bne.n	401180 <osc_wait_ready+0xc>
		/* Do nothing */
	}
}
  401194:	bf00      	nop
  401196:	3708      	adds	r7, #8
  401198:	46bd      	mov	sp, r7
  40119a:	bd80      	pop	{r7, pc}
  40119c:	00401091 	.word	0x00401091

004011a0 <pll_config_init>:
 * \note The SAM3S PLL hardware interprets mul as mul+1. For readability the hardware mul+1
 * is hidden in this implementation. Use mul as mul effective value.
 */
static inline void pll_config_init(struct pll_config *p_cfg,
		enum pll_source e_src, uint32_t ul_div, uint32_t ul_mul)
{
  4011a0:	b580      	push	{r7, lr}
  4011a2:	b086      	sub	sp, #24
  4011a4:	af00      	add	r7, sp, #0
  4011a6:	60f8      	str	r0, [r7, #12]
  4011a8:	607a      	str	r2, [r7, #4]
  4011aa:	603b      	str	r3, [r7, #0]
  4011ac:	460b      	mov	r3, r1
  4011ae:	72fb      	strb	r3, [r7, #11]
	uint32_t vco_hz;

	Assert(e_src < PLL_NR_SOURCES);

	/* Calculate internal VCO frequency */
	vco_hz = osc_get_rate(e_src) / ul_div;
  4011b0:	7afb      	ldrb	r3, [r7, #11]
  4011b2:	4618      	mov	r0, r3
  4011b4:	4b0d      	ldr	r3, [pc, #52]	; (4011ec <pll_config_init+0x4c>)
  4011b6:	4798      	blx	r3
  4011b8:	4602      	mov	r2, r0
  4011ba:	687b      	ldr	r3, [r7, #4]
  4011bc:	fbb2 f3f3 	udiv	r3, r2, r3
  4011c0:	617b      	str	r3, [r7, #20]
	Assert(vco_hz >= PLL_INPUT_MIN_HZ);
	Assert(vco_hz <= PLL_INPUT_MAX_HZ);

	vco_hz *= ul_mul;
  4011c2:	697b      	ldr	r3, [r7, #20]
  4011c4:	683a      	ldr	r2, [r7, #0]
  4011c6:	fb02 f303 	mul.w	r3, r2, r3
  4011ca:	617b      	str	r3, [r7, #20]
	Assert(vco_hz >= PLL_OUTPUT_MIN_HZ);
	Assert(vco_hz <= PLL_OUTPUT_MAX_HZ);

	/* PMC hardware will automatically make it mul+1 */
	p_cfg->ctrl = CKGR_PLLAR_MULA(ul_mul - 1) | CKGR_PLLAR_DIVA(ul_div) | CKGR_PLLAR_PLLACOUNT(PLL_COUNT);
  4011cc:	683b      	ldr	r3, [r7, #0]
  4011ce:	3b01      	subs	r3, #1
  4011d0:	041a      	lsls	r2, r3, #16
  4011d2:	4b07      	ldr	r3, [pc, #28]	; (4011f0 <pll_config_init+0x50>)
  4011d4:	4013      	ands	r3, r2
  4011d6:	687a      	ldr	r2, [r7, #4]
  4011d8:	b2d2      	uxtb	r2, r2
  4011da:	4313      	orrs	r3, r2
  4011dc:	f443 527c 	orr.w	r2, r3, #16128	; 0x3f00
  4011e0:	68fb      	ldr	r3, [r7, #12]
  4011e2:	601a      	str	r2, [r3, #0]
}
  4011e4:	bf00      	nop
  4011e6:	3718      	adds	r7, #24
  4011e8:	46bd      	mov	sp, r7
  4011ea:	bd80      	pop	{r7, pc}
  4011ec:	00401101 	.word	0x00401101
  4011f0:	07ff0000 	.word	0x07ff0000

004011f4 <pll_enable>:
		PMC->CKGR_PLLBR = p_cfg->ctrl;
	}
}

static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
  4011f4:	b580      	push	{r7, lr}
  4011f6:	b082      	sub	sp, #8
  4011f8:	af00      	add	r7, sp, #0
  4011fa:	6078      	str	r0, [r7, #4]
  4011fc:	6039      	str	r1, [r7, #0]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
  4011fe:	683b      	ldr	r3, [r7, #0]
  401200:	2b00      	cmp	r3, #0
  401202:	d108      	bne.n	401216 <pll_enable+0x22>
		pmc_disable_pllack(); // Always stop PLL first!
  401204:	4b09      	ldr	r3, [pc, #36]	; (40122c <pll_enable+0x38>)
  401206:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  401208:	4a09      	ldr	r2, [pc, #36]	; (401230 <pll_enable+0x3c>)
  40120a:	687b      	ldr	r3, [r7, #4]
  40120c:	681b      	ldr	r3, [r3, #0]
  40120e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
  401212:	6293      	str	r3, [r2, #40]	; 0x28
	} else {
		pmc_disable_pllbck();
		PMC->CKGR_PLLBR = p_cfg->ctrl;
	}
}
  401214:	e005      	b.n	401222 <pll_enable+0x2e>
		pmc_disable_pllbck();
  401216:	4b07      	ldr	r3, [pc, #28]	; (401234 <pll_enable+0x40>)
  401218:	4798      	blx	r3
		PMC->CKGR_PLLBR = p_cfg->ctrl;
  40121a:	4a05      	ldr	r2, [pc, #20]	; (401230 <pll_enable+0x3c>)
  40121c:	687b      	ldr	r3, [r7, #4]
  40121e:	681b      	ldr	r3, [r3, #0]
  401220:	62d3      	str	r3, [r2, #44]	; 0x2c
}
  401222:	bf00      	nop
  401224:	3708      	adds	r7, #8
  401226:	46bd      	mov	sp, r7
  401228:	bd80      	pop	{r7, pc}
  40122a:	bf00      	nop
  40122c:	00401a41 	.word	0x00401a41
  401230:	400e0400 	.word	0x400e0400
  401234:	00401a71 	.word	0x00401a71

00401238 <pll_is_locked>:
		pmc_disable_pllbck();
	}
}

static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
  401238:	b580      	push	{r7, lr}
  40123a:	b082      	sub	sp, #8
  40123c:	af00      	add	r7, sp, #0
  40123e:	6078      	str	r0, [r7, #4]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
  401240:	687b      	ldr	r3, [r7, #4]
  401242:	2b00      	cmp	r3, #0
  401244:	d103      	bne.n	40124e <pll_is_locked+0x16>
		return pmc_is_locked_pllack();
  401246:	4b05      	ldr	r3, [pc, #20]	; (40125c <pll_is_locked+0x24>)
  401248:	4798      	blx	r3
  40124a:	4603      	mov	r3, r0
  40124c:	e002      	b.n	401254 <pll_is_locked+0x1c>
	} else {
		return pmc_is_locked_pllbck();
  40124e:	4b04      	ldr	r3, [pc, #16]	; (401260 <pll_is_locked+0x28>)
  401250:	4798      	blx	r3
  401252:	4603      	mov	r3, r0
	}
}
  401254:	4618      	mov	r0, r3
  401256:	3708      	adds	r7, #8
  401258:	46bd      	mov	sp, r7
  40125a:	bd80      	pop	{r7, pc}
  40125c:	00401a59 	.word	0x00401a59
  401260:	00401a89 	.word	0x00401a89

00401264 <pll_enable_source>:

static inline void pll_enable_source(enum pll_source e_src)
{
  401264:	b580      	push	{r7, lr}
  401266:	b082      	sub	sp, #8
  401268:	af00      	add	r7, sp, #0
  40126a:	4603      	mov	r3, r0
  40126c:	71fb      	strb	r3, [r7, #7]
	switch (e_src) {
  40126e:	79fb      	ldrb	r3, [r7, #7]
  401270:	3b03      	subs	r3, #3
  401272:	2b04      	cmp	r3, #4
  401274:	d808      	bhi.n	401288 <pll_enable_source+0x24>
	case PLL_SRC_MAINCK_4M_RC:
	case PLL_SRC_MAINCK_8M_RC:
	case PLL_SRC_MAINCK_12M_RC:
	case PLL_SRC_MAINCK_XTAL:
	case PLL_SRC_MAINCK_BYPASS:
		osc_enable(e_src);
  401276:	79fb      	ldrb	r3, [r7, #7]
  401278:	4618      	mov	r0, r3
  40127a:	4b06      	ldr	r3, [pc, #24]	; (401294 <pll_enable_source+0x30>)
  40127c:	4798      	blx	r3
		osc_wait_ready(e_src);
  40127e:	79fb      	ldrb	r3, [r7, #7]
  401280:	4618      	mov	r0, r3
  401282:	4b05      	ldr	r3, [pc, #20]	; (401298 <pll_enable_source+0x34>)
  401284:	4798      	blx	r3
		break;
  401286:	e000      	b.n	40128a <pll_enable_source+0x26>

	default:
		Assert(false);
		break;
  401288:	bf00      	nop
	}
}
  40128a:	bf00      	nop
  40128c:	3708      	adds	r7, #8
  40128e:	46bd      	mov	sp, r7
  401290:	bd80      	pop	{r7, pc}
  401292:	bf00      	nop
  401294:	00401009 	.word	0x00401009
  401298:	00401175 	.word	0x00401175

0040129c <pll_wait_for_lock>:
 *
 * \retval STATUS_OK The PLL is now locked.
 * \retval ERR_TIMEOUT Timed out waiting for PLL to become locked.
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
  40129c:	b580      	push	{r7, lr}
  40129e:	b082      	sub	sp, #8
  4012a0:	af00      	add	r7, sp, #0
  4012a2:	6078      	str	r0, [r7, #4]
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  4012a4:	bf00      	nop
  4012a6:	6878      	ldr	r0, [r7, #4]
  4012a8:	4b04      	ldr	r3, [pc, #16]	; (4012bc <pll_wait_for_lock+0x20>)
  4012aa:	4798      	blx	r3
  4012ac:	4603      	mov	r3, r0
  4012ae:	2b00      	cmp	r3, #0
  4012b0:	d0f9      	beq.n	4012a6 <pll_wait_for_lock+0xa>
		/* Do nothing */
	}

	return 0;
  4012b2:	2300      	movs	r3, #0
}
  4012b4:	4618      	mov	r0, r3
  4012b6:	3708      	adds	r7, #8
  4012b8:	46bd      	mov	sp, r7
  4012ba:	bd80      	pop	{r7, pc}
  4012bc:	00401239 	.word	0x00401239

004012c0 <sysclk_get_main_hz>:
{
  4012c0:	b580      	push	{r7, lr}
  4012c2:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
  4012c4:	2006      	movs	r0, #6
  4012c6:	4b04      	ldr	r3, [pc, #16]	; (4012d8 <sysclk_get_main_hz+0x18>)
  4012c8:	4798      	blx	r3
  4012ca:	4602      	mov	r2, r0
  4012cc:	4613      	mov	r3, r2
  4012ce:	009b      	lsls	r3, r3, #2
  4012d0:	4413      	add	r3, r2
  4012d2:	009b      	lsls	r3, r3, #2
}
  4012d4:	4618      	mov	r0, r3
  4012d6:	bd80      	pop	{r7, pc}
  4012d8:	00401101 	.word	0x00401101

004012dc <sysclk_get_cpu_hz>:
{
  4012dc:	b580      	push	{r7, lr}
  4012de:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
  4012e0:	4b02      	ldr	r3, [pc, #8]	; (4012ec <sysclk_get_cpu_hz+0x10>)
  4012e2:	4798      	blx	r3
  4012e4:	4603      	mov	r3, r0
  4012e6:	085b      	lsrs	r3, r3, #1
}
  4012e8:	4618      	mov	r0, r3
  4012ea:	bd80      	pop	{r7, pc}
  4012ec:	004012c1 	.word	0x004012c1

004012f0 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  4012f0:	b590      	push	{r4, r7, lr}
  4012f2:	b083      	sub	sp, #12
  4012f4:	af00      	add	r7, sp, #0
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  4012f6:	4811      	ldr	r0, [pc, #68]	; (40133c <sysclk_init+0x4c>)
  4012f8:	4b11      	ldr	r3, [pc, #68]	; (401340 <sysclk_init+0x50>)
  4012fa:	4798      	blx	r3

#ifdef CONFIG_PLL0_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		struct pll_config pllcfg;

		pll_enable_source(CONFIG_PLL0_SOURCE);
  4012fc:	2006      	movs	r0, #6
  4012fe:	4b11      	ldr	r3, [pc, #68]	; (401344 <sysclk_init+0x54>)
  401300:	4798      	blx	r3
		pll_config_defaults(&pllcfg, 0);
  401302:	1d38      	adds	r0, r7, #4
  401304:	2314      	movs	r3, #20
  401306:	2201      	movs	r2, #1
  401308:	2106      	movs	r1, #6
  40130a:	4c0f      	ldr	r4, [pc, #60]	; (401348 <sysclk_init+0x58>)
  40130c:	47a0      	blx	r4
		pll_enable(&pllcfg, 0);
  40130e:	1d3b      	adds	r3, r7, #4
  401310:	2100      	movs	r1, #0
  401312:	4618      	mov	r0, r3
  401314:	4b0d      	ldr	r3, [pc, #52]	; (40134c <sysclk_init+0x5c>)
  401316:	4798      	blx	r3
		pll_wait_for_lock(0);
  401318:	2000      	movs	r0, #0
  40131a:	4b0d      	ldr	r3, [pc, #52]	; (401350 <sysclk_init+0x60>)
  40131c:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  40131e:	2010      	movs	r0, #16
  401320:	4b0c      	ldr	r3, [pc, #48]	; (401354 <sysclk_init+0x64>)
  401322:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  401324:	4b0c      	ldr	r3, [pc, #48]	; (401358 <sysclk_init+0x68>)
  401326:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  401328:	4b0c      	ldr	r3, [pc, #48]	; (40135c <sysclk_init+0x6c>)
  40132a:	4798      	blx	r3
  40132c:	4603      	mov	r3, r0
  40132e:	4618      	mov	r0, r3
  401330:	4b03      	ldr	r3, [pc, #12]	; (401340 <sysclk_init+0x50>)
  401332:	4798      	blx	r3

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
  401334:	bf00      	nop
  401336:	370c      	adds	r7, #12
  401338:	46bd      	mov	sp, r7
  40133a:	bd90      	pop	{r4, r7, pc}
  40133c:	07270e00 	.word	0x07270e00
  401340:	00402055 	.word	0x00402055
  401344:	00401265 	.word	0x00401265
  401348:	004011a1 	.word	0x004011a1
  40134c:	004011f5 	.word	0x004011f5
  401350:	0040129d 	.word	0x0040129d
  401354:	00401855 	.word	0x00401855
  401358:	00401ebd 	.word	0x00401ebd
  40135c:	004012dd 	.word	0x004012dd

00401360 <pio_pull_up>:
 * \param ul_pull_up_enable Indicates if the pin(s) internal pull-up shall be
 * configured.
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
  401360:	b480      	push	{r7}
  401362:	b085      	sub	sp, #20
  401364:	af00      	add	r7, sp, #0
  401366:	60f8      	str	r0, [r7, #12]
  401368:	60b9      	str	r1, [r7, #8]
  40136a:	607a      	str	r2, [r7, #4]
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  40136c:	687b      	ldr	r3, [r7, #4]
  40136e:	2b00      	cmp	r3, #0
  401370:	d003      	beq.n	40137a <pio_pull_up+0x1a>
		p_pio->PIO_PUER = ul_mask;
  401372:	68fb      	ldr	r3, [r7, #12]
  401374:	68ba      	ldr	r2, [r7, #8]
  401376:	665a      	str	r2, [r3, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
	}
}
  401378:	e002      	b.n	401380 <pio_pull_up+0x20>
		p_pio->PIO_PUDR = ul_mask;
  40137a:	68fb      	ldr	r3, [r7, #12]
  40137c:	68ba      	ldr	r2, [r7, #8]
  40137e:	661a      	str	r2, [r3, #96]	; 0x60
}
  401380:	bf00      	nop
  401382:	3714      	adds	r7, #20
  401384:	46bd      	mov	sp, r7
  401386:	bc80      	pop	{r7}
  401388:	4770      	bx	lr

0040138a <pio_set_debounce_filter>:
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 * \param ul_cut_off Cuts off frequency for debouncing filter.
 */
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
  40138a:	b480      	push	{r7}
  40138c:	b085      	sub	sp, #20
  40138e:	af00      	add	r7, sp, #0
  401390:	60f8      	str	r0, [r7, #12]
  401392:	60b9      	str	r1, [r7, #8]
  401394:	607a      	str	r2, [r7, #4]
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  401396:	68fb      	ldr	r3, [r7, #12]
  401398:	68ba      	ldr	r2, [r7, #8]
  40139a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  40139e:	687b      	ldr	r3, [r7, #4]
  4013a0:	005b      	lsls	r3, r3, #1
  4013a2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4013a6:	fbb2 f3f3 	udiv	r3, r2, r3
  4013aa:	3b01      	subs	r3, #1
  4013ac:	f3c3 020d 	ubfx	r2, r3, #0, #14
  4013b0:	68fb      	ldr	r3, [r7, #12]
  4013b2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
			(2 * (ul_cut_off))) - 1);
}
  4013b6:	bf00      	nop
  4013b8:	3714      	adds	r7, #20
  4013ba:	46bd      	mov	sp, r7
  4013bc:	bc80      	pop	{r7}
  4013be:	4770      	bx	lr

004013c0 <pio_set_peripheral>:
 * \param ul_type PIO type.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set_peripheral(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
  4013c0:	b480      	push	{r7}
  4013c2:	b087      	sub	sp, #28
  4013c4:	af00      	add	r7, sp, #0
  4013c6:	60f8      	str	r0, [r7, #12]
  4013c8:	60b9      	str	r1, [r7, #8]
  4013ca:	607a      	str	r2, [r7, #4]
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4013cc:	68fb      	ldr	r3, [r7, #12]
  4013ce:	687a      	ldr	r2, [r7, #4]
  4013d0:	645a      	str	r2, [r3, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4013d2:	68bb      	ldr	r3, [r7, #8]
  4013d4:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4013d8:	d04a      	beq.n	401470 <pio_set_peripheral+0xb0>
  4013da:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4013de:	d808      	bhi.n	4013f2 <pio_set_peripheral+0x32>
  4013e0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4013e4:	d016      	beq.n	401414 <pio_set_peripheral+0x54>
  4013e6:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4013ea:	d02c      	beq.n	401446 <pio_set_peripheral+0x86>
  4013ec:	2b00      	cmp	r3, #0
  4013ee:	d069      	beq.n	4014c4 <pio_set_peripheral+0x104>
  4013f0:	e064      	b.n	4014bc <pio_set_peripheral+0xfc>
  4013f2:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4013f6:	d065      	beq.n	4014c4 <pio_set_peripheral+0x104>
  4013f8:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4013fc:	d803      	bhi.n	401406 <pio_set_peripheral+0x46>
  4013fe:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  401402:	d04a      	beq.n	40149a <pio_set_peripheral+0xda>
  401404:	e05a      	b.n	4014bc <pio_set_peripheral+0xfc>
  401406:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  40140a:	d05b      	beq.n	4014c4 <pio_set_peripheral+0x104>
  40140c:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  401410:	d058      	beq.n	4014c4 <pio_set_peripheral+0x104>
  401412:	e053      	b.n	4014bc <pio_set_peripheral+0xfc>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABCDSR[0];
  401414:	68fb      	ldr	r3, [r7, #12]
  401416:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  401418:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40141a:	68fb      	ldr	r3, [r7, #12]
  40141c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  40141e:	687b      	ldr	r3, [r7, #4]
  401420:	43d9      	mvns	r1, r3
  401422:	697b      	ldr	r3, [r7, #20]
  401424:	400b      	ands	r3, r1
  401426:	401a      	ands	r2, r3
  401428:	68fb      	ldr	r3, [r7, #12]
  40142a:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  40142c:	68fb      	ldr	r3, [r7, #12]
  40142e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  401430:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  401432:	68fb      	ldr	r3, [r7, #12]
  401434:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  401436:	687b      	ldr	r3, [r7, #4]
  401438:	43d9      	mvns	r1, r3
  40143a:	697b      	ldr	r3, [r7, #20]
  40143c:	400b      	ands	r3, r1
  40143e:	401a      	ands	r2, r3
  401440:	68fb      	ldr	r3, [r7, #12]
  401442:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  401444:	e03a      	b.n	4014bc <pio_set_peripheral+0xfc>
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  401446:	68fb      	ldr	r3, [r7, #12]
  401448:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  40144a:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  40144c:	687a      	ldr	r2, [r7, #4]
  40144e:	697b      	ldr	r3, [r7, #20]
  401450:	431a      	orrs	r2, r3
  401452:	68fb      	ldr	r3, [r7, #12]
  401454:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  401456:	68fb      	ldr	r3, [r7, #12]
  401458:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  40145a:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40145c:	68fb      	ldr	r3, [r7, #12]
  40145e:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  401460:	687b      	ldr	r3, [r7, #4]
  401462:	43d9      	mvns	r1, r3
  401464:	697b      	ldr	r3, [r7, #20]
  401466:	400b      	ands	r3, r1
  401468:	401a      	ands	r2, r3
  40146a:	68fb      	ldr	r3, [r7, #12]
  40146c:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  40146e:	e025      	b.n	4014bc <pio_set_peripheral+0xfc>
#if (!SAMG)
	case PIO_PERIPH_C:
		ul_sr = p_pio->PIO_ABCDSR[0];
  401470:	68fb      	ldr	r3, [r7, #12]
  401472:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  401474:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  401476:	68fb      	ldr	r3, [r7, #12]
  401478:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  40147a:	687b      	ldr	r3, [r7, #4]
  40147c:	43d9      	mvns	r1, r3
  40147e:	697b      	ldr	r3, [r7, #20]
  401480:	400b      	ands	r3, r1
  401482:	401a      	ands	r2, r3
  401484:	68fb      	ldr	r3, [r7, #12]
  401486:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  401488:	68fb      	ldr	r3, [r7, #12]
  40148a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  40148c:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  40148e:	687a      	ldr	r2, [r7, #4]
  401490:	697b      	ldr	r3, [r7, #20]
  401492:	431a      	orrs	r2, r3
  401494:	68fb      	ldr	r3, [r7, #12]
  401496:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  401498:	e010      	b.n	4014bc <pio_set_peripheral+0xfc>
	case PIO_PERIPH_D:
		ul_sr = p_pio->PIO_ABCDSR[0];
  40149a:	68fb      	ldr	r3, [r7, #12]
  40149c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  40149e:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4014a0:	687a      	ldr	r2, [r7, #4]
  4014a2:	697b      	ldr	r3, [r7, #20]
  4014a4:	431a      	orrs	r2, r3
  4014a6:	68fb      	ldr	r3, [r7, #12]
  4014a8:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4014aa:	68fb      	ldr	r3, [r7, #12]
  4014ac:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  4014ae:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  4014b0:	687a      	ldr	r2, [r7, #4]
  4014b2:	697b      	ldr	r3, [r7, #20]
  4014b4:	431a      	orrs	r2, r3
  4014b6:	68fb      	ldr	r3, [r7, #12]
  4014b8:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  4014ba:	bf00      	nop
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4014bc:	68fb      	ldr	r3, [r7, #12]
  4014be:	687a      	ldr	r2, [r7, #4]
  4014c0:	605a      	str	r2, [r3, #4]
  4014c2:	e000      	b.n	4014c6 <pio_set_peripheral+0x106>
		return;
  4014c4:	bf00      	nop
}
  4014c6:	371c      	adds	r7, #28
  4014c8:	46bd      	mov	sp, r7
  4014ca:	bc80      	pop	{r7}
  4014cc:	4770      	bx	lr
	...

004014d0 <pio_set_input>:
 * \param ul_mask Bitmask indicating which pin(s) to configure as input(s).
 * \param ul_attribute PIO attribute(s).
 */
void pio_set_input(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_attribute)
{
  4014d0:	b580      	push	{r7, lr}
  4014d2:	b084      	sub	sp, #16
  4014d4:	af00      	add	r7, sp, #0
  4014d6:	60f8      	str	r0, [r7, #12]
  4014d8:	60b9      	str	r1, [r7, #8]
  4014da:	607a      	str	r2, [r7, #4]
	pio_disable_interrupt(p_pio, ul_mask);
  4014dc:	68b9      	ldr	r1, [r7, #8]
  4014de:	68f8      	ldr	r0, [r7, #12]
  4014e0:	4b19      	ldr	r3, [pc, #100]	; (401548 <pio_set_input+0x78>)
  4014e2:	4798      	blx	r3
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);
  4014e4:	687b      	ldr	r3, [r7, #4]
  4014e6:	f003 0301 	and.w	r3, r3, #1
  4014ea:	461a      	mov	r2, r3
  4014ec:	68b9      	ldr	r1, [r7, #8]
  4014ee:	68f8      	ldr	r0, [r7, #12]
  4014f0:	4b16      	ldr	r3, [pc, #88]	; (40154c <pio_set_input+0x7c>)
  4014f2:	4798      	blx	r3

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  4014f4:	687b      	ldr	r3, [r7, #4]
  4014f6:	f003 030a 	and.w	r3, r3, #10
  4014fa:	2b00      	cmp	r3, #0
  4014fc:	d003      	beq.n	401506 <pio_set_input+0x36>
		p_pio->PIO_IFER = ul_mask;
  4014fe:	68fb      	ldr	r3, [r7, #12]
  401500:	68ba      	ldr	r2, [r7, #8]
  401502:	621a      	str	r2, [r3, #32]
  401504:	e002      	b.n	40150c <pio_set_input+0x3c>
	} else {
		p_pio->PIO_IFDR = ul_mask;
  401506:	68fb      	ldr	r3, [r7, #12]
  401508:	68ba      	ldr	r2, [r7, #8]
  40150a:	625a      	str	r2, [r3, #36]	; 0x24
	}

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
  40150c:	687b      	ldr	r3, [r7, #4]
  40150e:	f003 0302 	and.w	r3, r3, #2
  401512:	2b00      	cmp	r3, #0
  401514:	d004      	beq.n	401520 <pio_set_input+0x50>
		p_pio->PIO_IFSCDR = ul_mask;
  401516:	68fb      	ldr	r3, [r7, #12]
  401518:	68ba      	ldr	r2, [r7, #8]
  40151a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  40151e:	e008      	b.n	401532 <pio_set_input+0x62>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
  401520:	687b      	ldr	r3, [r7, #4]
  401522:	f003 0308 	and.w	r3, r3, #8
  401526:	2b00      	cmp	r3, #0
  401528:	d003      	beq.n	401532 <pio_set_input+0x62>
			p_pio->PIO_IFSCER = ul_mask;
  40152a:	68fb      	ldr	r3, [r7, #12]
  40152c:	68ba      	ldr	r2, [r7, #8]
  40152e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
  401532:	68fb      	ldr	r3, [r7, #12]
  401534:	68ba      	ldr	r2, [r7, #8]
  401536:	615a      	str	r2, [r3, #20]
	p_pio->PIO_PER = ul_mask;
  401538:	68fb      	ldr	r3, [r7, #12]
  40153a:	68ba      	ldr	r2, [r7, #8]
  40153c:	601a      	str	r2, [r3, #0]
}
  40153e:	bf00      	nop
  401540:	3710      	adds	r7, #16
  401542:	46bd      	mov	sp, r7
  401544:	bd80      	pop	{r7, pc}
  401546:	bf00      	nop
  401548:	00401639 	.word	0x00401639
  40154c:	00401361 	.word	0x00401361

00401550 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
  401550:	b580      	push	{r7, lr}
  401552:	b084      	sub	sp, #16
  401554:	af00      	add	r7, sp, #0
  401556:	60f8      	str	r0, [r7, #12]
  401558:	60b9      	str	r1, [r7, #8]
  40155a:	607a      	str	r2, [r7, #4]
  40155c:	603b      	str	r3, [r7, #0]
	pio_disable_interrupt(p_pio, ul_mask);
  40155e:	68b9      	ldr	r1, [r7, #8]
  401560:	68f8      	ldr	r0, [r7, #12]
  401562:	4b12      	ldr	r3, [pc, #72]	; (4015ac <pio_set_output+0x5c>)
  401564:	4798      	blx	r3
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);
  401566:	69ba      	ldr	r2, [r7, #24]
  401568:	68b9      	ldr	r1, [r7, #8]
  40156a:	68f8      	ldr	r0, [r7, #12]
  40156c:	4b10      	ldr	r3, [pc, #64]	; (4015b0 <pio_set_output+0x60>)
  40156e:	4798      	blx	r3

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
  401570:	683b      	ldr	r3, [r7, #0]
  401572:	2b00      	cmp	r3, #0
  401574:	d003      	beq.n	40157e <pio_set_output+0x2e>
		p_pio->PIO_MDER = ul_mask;
  401576:	68fb      	ldr	r3, [r7, #12]
  401578:	68ba      	ldr	r2, [r7, #8]
  40157a:	651a      	str	r2, [r3, #80]	; 0x50
  40157c:	e002      	b.n	401584 <pio_set_output+0x34>
	} else {
		p_pio->PIO_MDDR = ul_mask;
  40157e:	68fb      	ldr	r3, [r7, #12]
  401580:	68ba      	ldr	r2, [r7, #8]
  401582:	655a      	str	r2, [r3, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
  401584:	687b      	ldr	r3, [r7, #4]
  401586:	2b00      	cmp	r3, #0
  401588:	d003      	beq.n	401592 <pio_set_output+0x42>
		p_pio->PIO_SODR = ul_mask;
  40158a:	68fb      	ldr	r3, [r7, #12]
  40158c:	68ba      	ldr	r2, [r7, #8]
  40158e:	631a      	str	r2, [r3, #48]	; 0x30
  401590:	e002      	b.n	401598 <pio_set_output+0x48>
	} else {
		p_pio->PIO_CODR = ul_mask;
  401592:	68fb      	ldr	r3, [r7, #12]
  401594:	68ba      	ldr	r2, [r7, #8]
  401596:	635a      	str	r2, [r3, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
  401598:	68fb      	ldr	r3, [r7, #12]
  40159a:	68ba      	ldr	r2, [r7, #8]
  40159c:	611a      	str	r2, [r3, #16]
	p_pio->PIO_PER = ul_mask;
  40159e:	68fb      	ldr	r3, [r7, #12]
  4015a0:	68ba      	ldr	r2, [r7, #8]
  4015a2:	601a      	str	r2, [r3, #0]
}
  4015a4:	bf00      	nop
  4015a6:	3710      	adds	r7, #16
  4015a8:	46bd      	mov	sp, r7
  4015aa:	bd80      	pop	{r7, pc}
  4015ac:	00401639 	.word	0x00401639
  4015b0:	00401361 	.word	0x00401361

004015b4 <pio_configure_interrupt>:
 * \param ul_mask Interrupt source bit map.
 * \param ul_attr Interrupt source attributes.
 */
void pio_configure_interrupt(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_attr)
{
  4015b4:	b480      	push	{r7}
  4015b6:	b085      	sub	sp, #20
  4015b8:	af00      	add	r7, sp, #0
  4015ba:	60f8      	str	r0, [r7, #12]
  4015bc:	60b9      	str	r1, [r7, #8]
  4015be:	607a      	str	r2, [r7, #4]
	/* Configure additional interrupt mode registers. */
	if (ul_attr & PIO_IT_AIME) {
  4015c0:	687b      	ldr	r3, [r7, #4]
  4015c2:	f003 0310 	and.w	r3, r3, #16
  4015c6:	2b00      	cmp	r3, #0
  4015c8:	d020      	beq.n	40160c <pio_configure_interrupt+0x58>
		/* Enable additional interrupt mode. */
		p_pio->PIO_AIMER = ul_mask;
  4015ca:	68fb      	ldr	r3, [r7, #12]
  4015cc:	68ba      	ldr	r2, [r7, #8]
  4015ce:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0

		/* If bit field of the selected pin is 1, set as
		   Rising Edge/High level detection event. */
		if (ul_attr & PIO_IT_RE_OR_HL) {
  4015d2:	687b      	ldr	r3, [r7, #4]
  4015d4:	f003 0320 	and.w	r3, r3, #32
  4015d8:	2b00      	cmp	r3, #0
  4015da:	d004      	beq.n	4015e6 <pio_configure_interrupt+0x32>
			/* Rising Edge or High Level */
			p_pio->PIO_REHLSR = ul_mask;
  4015dc:	68fb      	ldr	r3, [r7, #12]
  4015de:	68ba      	ldr	r2, [r7, #8]
  4015e0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
  4015e4:	e003      	b.n	4015ee <pio_configure_interrupt+0x3a>
		} else {
			/* Falling Edge or Low Level */
			p_pio->PIO_FELLSR = ul_mask;
  4015e6:	68fb      	ldr	r3, [r7, #12]
  4015e8:	68ba      	ldr	r2, [r7, #8]
  4015ea:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
		}

		/* If bit field of the selected pin is 1, set as
		   edge detection source. */
		if (ul_attr & PIO_IT_EDGE) {
  4015ee:	687b      	ldr	r3, [r7, #4]
  4015f0:	f003 0340 	and.w	r3, r3, #64	; 0x40
  4015f4:	2b00      	cmp	r3, #0
  4015f6:	d004      	beq.n	401602 <pio_configure_interrupt+0x4e>
			/* Edge select */
			p_pio->PIO_ESR = ul_mask;
  4015f8:	68fb      	ldr	r3, [r7, #12]
  4015fa:	68ba      	ldr	r2, [r7, #8]
  4015fc:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		}
	} else {
		/* Disable additional interrupt mode. */
		p_pio->PIO_AIMDR = ul_mask;
	}
}
  401600:	e008      	b.n	401614 <pio_configure_interrupt+0x60>
			p_pio->PIO_LSR = ul_mask;
  401602:	68fb      	ldr	r3, [r7, #12]
  401604:	68ba      	ldr	r2, [r7, #8]
  401606:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
}
  40160a:	e003      	b.n	401614 <pio_configure_interrupt+0x60>
		p_pio->PIO_AIMDR = ul_mask;
  40160c:	68fb      	ldr	r3, [r7, #12]
  40160e:	68ba      	ldr	r2, [r7, #8]
  401610:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
}
  401614:	bf00      	nop
  401616:	3714      	adds	r7, #20
  401618:	46bd      	mov	sp, r7
  40161a:	bc80      	pop	{r7}
  40161c:	4770      	bx	lr

0040161e <pio_enable_interrupt>:
 *
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_enable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
  40161e:	b480      	push	{r7}
  401620:	b083      	sub	sp, #12
  401622:	af00      	add	r7, sp, #0
  401624:	6078      	str	r0, [r7, #4]
  401626:	6039      	str	r1, [r7, #0]
	p_pio->PIO_IER = ul_mask;
  401628:	687b      	ldr	r3, [r7, #4]
  40162a:	683a      	ldr	r2, [r7, #0]
  40162c:	641a      	str	r2, [r3, #64]	; 0x40
}
  40162e:	bf00      	nop
  401630:	370c      	adds	r7, #12
  401632:	46bd      	mov	sp, r7
  401634:	bc80      	pop	{r7}
  401636:	4770      	bx	lr

00401638 <pio_disable_interrupt>:
 *
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
  401638:	b480      	push	{r7}
  40163a:	b083      	sub	sp, #12
  40163c:	af00      	add	r7, sp, #0
  40163e:	6078      	str	r0, [r7, #4]
  401640:	6039      	str	r1, [r7, #0]
	p_pio->PIO_IDR = ul_mask;
  401642:	687b      	ldr	r3, [r7, #4]
  401644:	683a      	ldr	r2, [r7, #0]
  401646:	645a      	str	r2, [r3, #68]	; 0x44
}
  401648:	bf00      	nop
  40164a:	370c      	adds	r7, #12
  40164c:	46bd      	mov	sp, r7
  40164e:	bc80      	pop	{r7}
  401650:	4770      	bx	lr

00401652 <pio_get_interrupt_status>:
 * \param p_pio Pointer to a PIO instance.
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
  401652:	b480      	push	{r7}
  401654:	b083      	sub	sp, #12
  401656:	af00      	add	r7, sp, #0
  401658:	6078      	str	r0, [r7, #4]
	return p_pio->PIO_ISR;
  40165a:	687b      	ldr	r3, [r7, #4]
  40165c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
  40165e:	4618      	mov	r0, r3
  401660:	370c      	adds	r7, #12
  401662:	46bd      	mov	sp, r7
  401664:	bc80      	pop	{r7}
  401666:	4770      	bx	lr

00401668 <pio_get_interrupt_mask>:
 * \param p_pio Pointer to a PIO instance.
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
  401668:	b480      	push	{r7}
  40166a:	b083      	sub	sp, #12
  40166c:	af00      	add	r7, sp, #0
  40166e:	6078      	str	r0, [r7, #4]
	return p_pio->PIO_IMR;
  401670:	687b      	ldr	r3, [r7, #4]
  401672:	6c9b      	ldr	r3, [r3, #72]	; 0x48
}
  401674:	4618      	mov	r0, r3
  401676:	370c      	adds	r7, #12
  401678:	46bd      	mov	sp, r7
  40167a:	bc80      	pop	{r7}
  40167c:	4770      	bx	lr
	...

00401680 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  401680:	b590      	push	{r4, r7, lr}
  401682:	b087      	sub	sp, #28
  401684:	af02      	add	r7, sp, #8
  401686:	6078      	str	r0, [r7, #4]
  401688:	6039      	str	r1, [r7, #0]
	Pio *p_pio = pio_get_pin_group(ul_pin);
  40168a:	6878      	ldr	r0, [r7, #4]
  40168c:	4b63      	ldr	r3, [pc, #396]	; (40181c <pio_configure_pin+0x19c>)
  40168e:	4798      	blx	r3
  401690:	60f8      	str	r0, [r7, #12]

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  401692:	683b      	ldr	r3, [r7, #0]
  401694:	f003 43f0 	and.w	r3, r3, #2013265920	; 0x78000000
  401698:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  40169c:	d067      	beq.n	40176e <pio_configure_pin+0xee>
  40169e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4016a2:	d809      	bhi.n	4016b8 <pio_configure_pin+0x38>
  4016a4:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4016a8:	d02b      	beq.n	401702 <pio_configure_pin+0x82>
  4016aa:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4016ae:	d043      	beq.n	401738 <pio_configure_pin+0xb8>
  4016b0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4016b4:	d00a      	beq.n	4016cc <pio_configure_pin+0x4c>
  4016b6:	e0a9      	b.n	40180c <pio_configure_pin+0x18c>
  4016b8:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4016bc:	d07e      	beq.n	4017bc <pio_configure_pin+0x13c>
  4016be:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4016c2:	d07b      	beq.n	4017bc <pio_configure_pin+0x13c>
  4016c4:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4016c8:	d06c      	beq.n	4017a4 <pio_configure_pin+0x124>
  4016ca:	e09f      	b.n	40180c <pio_configure_pin+0x18c>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  4016cc:	687b      	ldr	r3, [r7, #4]
  4016ce:	f003 031f 	and.w	r3, r3, #31
  4016d2:	2201      	movs	r2, #1
  4016d4:	fa02 f303 	lsl.w	r3, r2, r3
  4016d8:	461a      	mov	r2, r3
  4016da:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4016de:	68f8      	ldr	r0, [r7, #12]
  4016e0:	4b4f      	ldr	r3, [pc, #316]	; (401820 <pio_configure_pin+0x1a0>)
  4016e2:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  4016e4:	687b      	ldr	r3, [r7, #4]
  4016e6:	f003 031f 	and.w	r3, r3, #31
  4016ea:	2201      	movs	r2, #1
  4016ec:	fa02 f303 	lsl.w	r3, r2, r3
  4016f0:	4619      	mov	r1, r3
  4016f2:	683b      	ldr	r3, [r7, #0]
  4016f4:	f003 0301 	and.w	r3, r3, #1
  4016f8:	461a      	mov	r2, r3
  4016fa:	68f8      	ldr	r0, [r7, #12]
  4016fc:	4b49      	ldr	r3, [pc, #292]	; (401824 <pio_configure_pin+0x1a4>)
  4016fe:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  401700:	e086      	b.n	401810 <pio_configure_pin+0x190>
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  401702:	687b      	ldr	r3, [r7, #4]
  401704:	f003 031f 	and.w	r3, r3, #31
  401708:	2201      	movs	r2, #1
  40170a:	fa02 f303 	lsl.w	r3, r2, r3
  40170e:	461a      	mov	r2, r3
  401710:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401714:	68f8      	ldr	r0, [r7, #12]
  401716:	4b42      	ldr	r3, [pc, #264]	; (401820 <pio_configure_pin+0x1a0>)
  401718:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  40171a:	687b      	ldr	r3, [r7, #4]
  40171c:	f003 031f 	and.w	r3, r3, #31
  401720:	2201      	movs	r2, #1
  401722:	fa02 f303 	lsl.w	r3, r2, r3
  401726:	4619      	mov	r1, r3
  401728:	683b      	ldr	r3, [r7, #0]
  40172a:	f003 0301 	and.w	r3, r3, #1
  40172e:	461a      	mov	r2, r3
  401730:	68f8      	ldr	r0, [r7, #12]
  401732:	4b3c      	ldr	r3, [pc, #240]	; (401824 <pio_configure_pin+0x1a4>)
  401734:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  401736:	e06b      	b.n	401810 <pio_configure_pin+0x190>
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  401738:	687b      	ldr	r3, [r7, #4]
  40173a:	f003 031f 	and.w	r3, r3, #31
  40173e:	2201      	movs	r2, #1
  401740:	fa02 f303 	lsl.w	r3, r2, r3
  401744:	461a      	mov	r2, r3
  401746:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40174a:	68f8      	ldr	r0, [r7, #12]
  40174c:	4b34      	ldr	r3, [pc, #208]	; (401820 <pio_configure_pin+0x1a0>)
  40174e:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  401750:	687b      	ldr	r3, [r7, #4]
  401752:	f003 031f 	and.w	r3, r3, #31
  401756:	2201      	movs	r2, #1
  401758:	fa02 f303 	lsl.w	r3, r2, r3
  40175c:	4619      	mov	r1, r3
  40175e:	683b      	ldr	r3, [r7, #0]
  401760:	f003 0301 	and.w	r3, r3, #1
  401764:	461a      	mov	r2, r3
  401766:	68f8      	ldr	r0, [r7, #12]
  401768:	4b2e      	ldr	r3, [pc, #184]	; (401824 <pio_configure_pin+0x1a4>)
  40176a:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  40176c:	e050      	b.n	401810 <pio_configure_pin+0x190>
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  40176e:	687b      	ldr	r3, [r7, #4]
  401770:	f003 031f 	and.w	r3, r3, #31
  401774:	2201      	movs	r2, #1
  401776:	fa02 f303 	lsl.w	r3, r2, r3
  40177a:	461a      	mov	r2, r3
  40177c:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  401780:	68f8      	ldr	r0, [r7, #12]
  401782:	4b27      	ldr	r3, [pc, #156]	; (401820 <pio_configure_pin+0x1a0>)
  401784:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  401786:	687b      	ldr	r3, [r7, #4]
  401788:	f003 031f 	and.w	r3, r3, #31
  40178c:	2201      	movs	r2, #1
  40178e:	fa02 f303 	lsl.w	r3, r2, r3
  401792:	4619      	mov	r1, r3
  401794:	683b      	ldr	r3, [r7, #0]
  401796:	f003 0301 	and.w	r3, r3, #1
  40179a:	461a      	mov	r2, r3
  40179c:	68f8      	ldr	r0, [r7, #12]
  40179e:	4b21      	ldr	r3, [pc, #132]	; (401824 <pio_configure_pin+0x1a4>)
  4017a0:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  4017a2:	e035      	b.n	401810 <pio_configure_pin+0x190>
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  4017a4:	687b      	ldr	r3, [r7, #4]
  4017a6:	f003 031f 	and.w	r3, r3, #31
  4017aa:	2201      	movs	r2, #1
  4017ac:	fa02 f303 	lsl.w	r3, r2, r3
  4017b0:	683a      	ldr	r2, [r7, #0]
  4017b2:	4619      	mov	r1, r3
  4017b4:	68f8      	ldr	r0, [r7, #12]
  4017b6:	4b1c      	ldr	r3, [pc, #112]	; (401828 <pio_configure_pin+0x1a8>)
  4017b8:	4798      	blx	r3
		break;
  4017ba:	e029      	b.n	401810 <pio_configure_pin+0x190>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4017bc:	687b      	ldr	r3, [r7, #4]
  4017be:	f003 031f 	and.w	r3, r3, #31
  4017c2:	2201      	movs	r2, #1
  4017c4:	fa02 f303 	lsl.w	r3, r2, r3
  4017c8:	4619      	mov	r1, r3
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4017ca:	683b      	ldr	r3, [r7, #0]
  4017cc:	f003 5360 	and.w	r3, r3, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4017d0:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4017d4:	bf0c      	ite	eq
  4017d6:	2301      	moveq	r3, #1
  4017d8:	2300      	movne	r3, #0
  4017da:	b2db      	uxtb	r3, r3
  4017dc:	461a      	mov	r2, r3
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
  4017de:	683b      	ldr	r3, [r7, #0]
  4017e0:	f003 0304 	and.w	r3, r3, #4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4017e4:	2b00      	cmp	r3, #0
  4017e6:	bf14      	ite	ne
  4017e8:	2301      	movne	r3, #1
  4017ea:	2300      	moveq	r3, #0
  4017ec:	b2db      	uxtb	r3, r3
  4017ee:	4618      	mov	r0, r3
				(ul_flags & PIO_PULLUP) ? 1 : 0);
  4017f0:	683b      	ldr	r3, [r7, #0]
  4017f2:	f003 0301 	and.w	r3, r3, #1
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4017f6:	2b00      	cmp	r3, #0
  4017f8:	bf14      	ite	ne
  4017fa:	2301      	movne	r3, #1
  4017fc:	2300      	moveq	r3, #0
  4017fe:	b2db      	uxtb	r3, r3
  401800:	9300      	str	r3, [sp, #0]
  401802:	4603      	mov	r3, r0
  401804:	68f8      	ldr	r0, [r7, #12]
  401806:	4c09      	ldr	r4, [pc, #36]	; (40182c <pio_configure_pin+0x1ac>)
  401808:	47a0      	blx	r4
		break;
  40180a:	e001      	b.n	401810 <pio_configure_pin+0x190>

	default:
		return 0;
  40180c:	2300      	movs	r3, #0
  40180e:	e000      	b.n	401812 <pio_configure_pin+0x192>
	}

	return 1;
  401810:	2301      	movs	r3, #1
}
  401812:	4618      	mov	r0, r3
  401814:	3714      	adds	r7, #20
  401816:	46bd      	mov	sp, r7
  401818:	bd90      	pop	{r4, r7, pc}
  40181a:	bf00      	nop
  40181c:	00401831 	.word	0x00401831
  401820:	004013c1 	.word	0x004013c1
  401824:	00401361 	.word	0x00401361
  401828:	004014d1 	.word	0x004014d1
  40182c:	00401551 	.word	0x00401551

00401830 <pio_get_pin_group>:
 * \param ul_pin The pin index.
 *
 * \return Pointer to \ref Pio struct for GPIO port.
 */
Pio *pio_get_pin_group(uint32_t ul_pin)
{
  401830:	b480      	push	{r7}
  401832:	b085      	sub	sp, #20
  401834:	af00      	add	r7, sp, #0
  401836:	6078      	str	r0, [r7, #4]
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  401838:	687b      	ldr	r3, [r7, #4]
  40183a:	095b      	lsrs	r3, r3, #5
  40183c:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  401840:	f203 7307 	addw	r3, r3, #1799	; 0x707
  401844:	025b      	lsls	r3, r3, #9
  401846:	60fb      	str	r3, [r7, #12]
#endif
	return p_pio;
  401848:	68fb      	ldr	r3, [r7, #12]
}
  40184a:	4618      	mov	r0, r3
  40184c:	3714      	adds	r7, #20
  40184e:	46bd      	mov	sp, r7
  401850:	bc80      	pop	{r7}
  401852:	4770      	bx	lr

00401854 <pmc_switch_mck_to_pllack>:
 *
 * \retval 0 Success.
 * \retval 1 Timeout error.
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
  401854:	b480      	push	{r7}
  401856:	b085      	sub	sp, #20
  401858:	af00      	add	r7, sp, #0
  40185a:	6078      	str	r0, [r7, #4]
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  40185c:	491c      	ldr	r1, [pc, #112]	; (4018d0 <pmc_switch_mck_to_pllack+0x7c>)
  40185e:	4b1c      	ldr	r3, [pc, #112]	; (4018d0 <pmc_switch_mck_to_pllack+0x7c>)
  401860:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401862:	f023 0270 	bic.w	r2, r3, #112	; 0x70
  401866:	687b      	ldr	r3, [r7, #4]
  401868:	4313      	orrs	r3, r2
  40186a:	630b      	str	r3, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40186c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  401870:	60fb      	str	r3, [r7, #12]
  401872:	e007      	b.n	401884 <pmc_switch_mck_to_pllack+0x30>
			--ul_timeout) {
		if (ul_timeout == 0) {
  401874:	68fb      	ldr	r3, [r7, #12]
  401876:	2b00      	cmp	r3, #0
  401878:	d101      	bne.n	40187e <pmc_switch_mck_to_pllack+0x2a>
			return 1;
  40187a:	2301      	movs	r3, #1
  40187c:	e023      	b.n	4018c6 <pmc_switch_mck_to_pllack+0x72>
			--ul_timeout) {
  40187e:	68fb      	ldr	r3, [r7, #12]
  401880:	3b01      	subs	r3, #1
  401882:	60fb      	str	r3, [r7, #12]
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401884:	4b12      	ldr	r3, [pc, #72]	; (4018d0 <pmc_switch_mck_to_pllack+0x7c>)
  401886:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  401888:	f003 0308 	and.w	r3, r3, #8
  40188c:	2b00      	cmp	r3, #0
  40188e:	d0f1      	beq.n	401874 <pmc_switch_mck_to_pllack+0x20>
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  401890:	4a0f      	ldr	r2, [pc, #60]	; (4018d0 <pmc_switch_mck_to_pllack+0x7c>)
  401892:	4b0f      	ldr	r3, [pc, #60]	; (4018d0 <pmc_switch_mck_to_pllack+0x7c>)
  401894:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401896:	f023 0303 	bic.w	r3, r3, #3
  40189a:	f043 0302 	orr.w	r3, r3, #2
  40189e:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4018a0:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4018a4:	60fb      	str	r3, [r7, #12]
  4018a6:	e007      	b.n	4018b8 <pmc_switch_mck_to_pllack+0x64>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4018a8:	68fb      	ldr	r3, [r7, #12]
  4018aa:	2b00      	cmp	r3, #0
  4018ac:	d101      	bne.n	4018b2 <pmc_switch_mck_to_pllack+0x5e>
			return 1;
  4018ae:	2301      	movs	r3, #1
  4018b0:	e009      	b.n	4018c6 <pmc_switch_mck_to_pllack+0x72>
			--ul_timeout) {
  4018b2:	68fb      	ldr	r3, [r7, #12]
  4018b4:	3b01      	subs	r3, #1
  4018b6:	60fb      	str	r3, [r7, #12]
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4018b8:	4b05      	ldr	r3, [pc, #20]	; (4018d0 <pmc_switch_mck_to_pllack+0x7c>)
  4018ba:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  4018bc:	f003 0308 	and.w	r3, r3, #8
  4018c0:	2b00      	cmp	r3, #0
  4018c2:	d0f1      	beq.n	4018a8 <pmc_switch_mck_to_pllack+0x54>
		}
	}

	return 0;
  4018c4:	2300      	movs	r3, #0
}
  4018c6:	4618      	mov	r0, r3
  4018c8:	3714      	adds	r7, #20
  4018ca:	46bd      	mov	sp, r7
  4018cc:	bc80      	pop	{r7}
  4018ce:	4770      	bx	lr
  4018d0:	400e0400 	.word	0x400e0400

004018d4 <pmc_switch_sclk_to_32kxtal>:
 *       VDDIO power supply.
 *
 * \param ul_bypass 0 for Xtal, 1 for bypass.
 */
void pmc_switch_sclk_to_32kxtal(uint32_t ul_bypass)
{
  4018d4:	b480      	push	{r7}
  4018d6:	b083      	sub	sp, #12
  4018d8:	af00      	add	r7, sp, #0
  4018da:	6078      	str	r0, [r7, #4]
	/* Set Bypass mode if required */
	if (ul_bypass == 1) {
  4018dc:	687b      	ldr	r3, [r7, #4]
  4018de:	2b01      	cmp	r3, #1
  4018e0:	d107      	bne.n	4018f2 <pmc_switch_sclk_to_32kxtal+0x1e>
		SUPC->SUPC_MR |= SUPC_MR_KEY_PASSWD |
  4018e2:	4a08      	ldr	r2, [pc, #32]	; (401904 <pmc_switch_sclk_to_32kxtal+0x30>)
  4018e4:	4b07      	ldr	r3, [pc, #28]	; (401904 <pmc_switch_sclk_to_32kxtal+0x30>)
  4018e6:	689b      	ldr	r3, [r3, #8]
  4018e8:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
  4018ec:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  4018f0:	6093      	str	r3, [r2, #8]
			SUPC_MR_OSCBYPASS;
	}

	SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_XTALSEL;
  4018f2:	4b04      	ldr	r3, [pc, #16]	; (401904 <pmc_switch_sclk_to_32kxtal+0x30>)
  4018f4:	4a04      	ldr	r2, [pc, #16]	; (401908 <pmc_switch_sclk_to_32kxtal+0x34>)
  4018f6:	601a      	str	r2, [r3, #0]
}
  4018f8:	bf00      	nop
  4018fa:	370c      	adds	r7, #12
  4018fc:	46bd      	mov	sp, r7
  4018fe:	bc80      	pop	{r7}
  401900:	4770      	bx	lr
  401902:	bf00      	nop
  401904:	400e1410 	.word	0x400e1410
  401908:	a5000008 	.word	0xa5000008

0040190c <pmc_osc_is_ready_32kxtal>:
 *
 * \retval 1 External 32k Xtal is ready.
 * \retval 0 External 32k Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_32kxtal(void)
{
  40190c:	b480      	push	{r7}
  40190e:	af00      	add	r7, sp, #0
	return ((SUPC->SUPC_SR & SUPC_SR_OSCSEL)
  401910:	4b09      	ldr	r3, [pc, #36]	; (401938 <pmc_osc_is_ready_32kxtal+0x2c>)
  401912:	695b      	ldr	r3, [r3, #20]
  401914:	f003 0380 	and.w	r3, r3, #128	; 0x80
			&& (PMC->PMC_SR & PMC_SR_OSCSELS));
  401918:	2b00      	cmp	r3, #0
  40191a:	d007      	beq.n	40192c <pmc_osc_is_ready_32kxtal+0x20>
  40191c:	4b07      	ldr	r3, [pc, #28]	; (40193c <pmc_osc_is_ready_32kxtal+0x30>)
  40191e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  401920:	f003 0380 	and.w	r3, r3, #128	; 0x80
  401924:	2b00      	cmp	r3, #0
  401926:	d001      	beq.n	40192c <pmc_osc_is_ready_32kxtal+0x20>
  401928:	2301      	movs	r3, #1
  40192a:	e000      	b.n	40192e <pmc_osc_is_ready_32kxtal+0x22>
  40192c:	2300      	movs	r3, #0
}
  40192e:	4618      	mov	r0, r3
  401930:	46bd      	mov	sp, r7
  401932:	bc80      	pop	{r7}
  401934:	4770      	bx	lr
  401936:	bf00      	nop
  401938:	400e1410 	.word	0x400e1410
  40193c:	400e0400 	.word	0x400e0400

00401940 <pmc_switch_mainck_to_fastrc>:
 * \retval 0 Success.
 * \retval 1 Timeout error.
 * \retval 2 Invalid frequency.
 */
void pmc_switch_mainck_to_fastrc(uint32_t ul_moscrcf)
{
  401940:	b480      	push	{r7}
  401942:	b083      	sub	sp, #12
  401944:	af00      	add	r7, sp, #0
  401946:	6078      	str	r0, [r7, #4]
	/* Enable Fast RC oscillator but DO NOT switch to RC now */
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
  401948:	4a18      	ldr	r2, [pc, #96]	; (4019ac <pmc_switch_mainck_to_fastrc+0x6c>)
  40194a:	4b18      	ldr	r3, [pc, #96]	; (4019ac <pmc_switch_mainck_to_fastrc+0x6c>)
  40194c:	6a1b      	ldr	r3, [r3, #32]
  40194e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401952:	f043 0308 	orr.w	r3, r3, #8
  401956:	6213      	str	r3, [r2, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  401958:	bf00      	nop
  40195a:	4b14      	ldr	r3, [pc, #80]	; (4019ac <pmc_switch_mainck_to_fastrc+0x6c>)
  40195c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  40195e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
  401962:	2b00      	cmp	r3, #0
  401964:	d0f9      	beq.n	40195a <pmc_switch_mainck_to_fastrc+0x1a>

	/* Change Fast RC oscillator frequency */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  401966:	4911      	ldr	r1, [pc, #68]	; (4019ac <pmc_switch_mainck_to_fastrc+0x6c>)
  401968:	4b10      	ldr	r3, [pc, #64]	; (4019ac <pmc_switch_mainck_to_fastrc+0x6c>)
  40196a:	6a1b      	ldr	r3, [r3, #32]
  40196c:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  401970:	f023 0370 	bic.w	r3, r3, #112	; 0x70
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;
  401974:	687a      	ldr	r2, [r7, #4]
  401976:	4313      	orrs	r3, r2
  401978:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  40197c:	620b      	str	r3, [r1, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  40197e:	bf00      	nop
  401980:	4b0a      	ldr	r3, [pc, #40]	; (4019ac <pmc_switch_mainck_to_fastrc+0x6c>)
  401982:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  401984:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
  401988:	2b00      	cmp	r3, #0
  40198a:	d0f9      	beq.n	401980 <pmc_switch_mainck_to_fastrc+0x40>

	/* Switch to Fast RC */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  40198c:	4a07      	ldr	r2, [pc, #28]	; (4019ac <pmc_switch_mainck_to_fastrc+0x6c>)
  40198e:	4b07      	ldr	r3, [pc, #28]	; (4019ac <pmc_switch_mainck_to_fastrc+0x6c>)
  401990:	6a1b      	ldr	r3, [r3, #32]
  401992:	f023 739b 	bic.w	r3, r3, #20316160	; 0x1360000
  401996:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
  40199a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40199e:	6213      	str	r3, [r2, #32]
			CKGR_MOR_KEY_PASSWD;
}
  4019a0:	bf00      	nop
  4019a2:	370c      	adds	r7, #12
  4019a4:	46bd      	mov	sp, r7
  4019a6:	bc80      	pop	{r7}
  4019a8:	4770      	bx	lr
  4019aa:	bf00      	nop
  4019ac:	400e0400 	.word	0x400e0400

004019b0 <pmc_switch_mainck_to_xtal>:
 * \retval 0 Success.
 * \retval 1 Timeout error.
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
  4019b0:	b480      	push	{r7}
  4019b2:	b083      	sub	sp, #12
  4019b4:	af00      	add	r7, sp, #0
  4019b6:	6078      	str	r0, [r7, #4]
  4019b8:	6039      	str	r1, [r7, #0]
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  4019ba:	687b      	ldr	r3, [r7, #4]
  4019bc:	2b00      	cmp	r3, #0
  4019be:	d008      	beq.n	4019d2 <pmc_switch_mainck_to_xtal+0x22>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4019c0:	4916      	ldr	r1, [pc, #88]	; (401a1c <pmc_switch_mainck_to_xtal+0x6c>)
  4019c2:	4b16      	ldr	r3, [pc, #88]	; (401a1c <pmc_switch_mainck_to_xtal+0x6c>)
  4019c4:	6a1b      	ldr	r3, [r3, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4019c6:	4a16      	ldr	r2, [pc, #88]	; (401a20 <pmc_switch_mainck_to_xtal+0x70>)
  4019c8:	401a      	ands	r2, r3
  4019ca:	4b16      	ldr	r3, [pc, #88]	; (401a24 <pmc_switch_mainck_to_xtal+0x74>)
  4019cc:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4019ce:	620b      	str	r3, [r1, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
	}
}
  4019d0:	e01e      	b.n	401a10 <pmc_switch_mainck_to_xtal+0x60>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4019d2:	4912      	ldr	r1, [pc, #72]	; (401a1c <pmc_switch_mainck_to_xtal+0x6c>)
  4019d4:	4b11      	ldr	r3, [pc, #68]	; (401a1c <pmc_switch_mainck_to_xtal+0x6c>)
  4019d6:	6a1b      	ldr	r3, [r3, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4019d8:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4019dc:	f023 0303 	bic.w	r3, r3, #3
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4019e0:	683a      	ldr	r2, [r7, #0]
  4019e2:	0212      	lsls	r2, r2, #8
  4019e4:	b292      	uxth	r2, r2
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4019e6:	4313      	orrs	r3, r2
  4019e8:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4019ec:	f043 0301 	orr.w	r3, r3, #1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4019f0:	620b      	str	r3, [r1, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4019f2:	bf00      	nop
  4019f4:	4b09      	ldr	r3, [pc, #36]	; (401a1c <pmc_switch_mainck_to_xtal+0x6c>)
  4019f6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  4019f8:	f003 0301 	and.w	r3, r3, #1
  4019fc:	2b00      	cmp	r3, #0
  4019fe:	d0f9      	beq.n	4019f4 <pmc_switch_mainck_to_xtal+0x44>
		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401a00:	4a06      	ldr	r2, [pc, #24]	; (401a1c <pmc_switch_mainck_to_xtal+0x6c>)
  401a02:	4b06      	ldr	r3, [pc, #24]	; (401a1c <pmc_switch_mainck_to_xtal+0x6c>)
  401a04:	6a1b      	ldr	r3, [r3, #32]
  401a06:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  401a0a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  401a0e:	6213      	str	r3, [r2, #32]
}
  401a10:	bf00      	nop
  401a12:	370c      	adds	r7, #12
  401a14:	46bd      	mov	sp, r7
  401a16:	bc80      	pop	{r7}
  401a18:	4770      	bx	lr
  401a1a:	bf00      	nop
  401a1c:	400e0400 	.word	0x400e0400
  401a20:	fec8fffc 	.word	0xfec8fffc
  401a24:	01370002 	.word	0x01370002

00401a28 <pmc_osc_is_ready_mainck>:
 *
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
  401a28:	b480      	push	{r7}
  401a2a:	af00      	add	r7, sp, #0
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  401a2c:	4b03      	ldr	r3, [pc, #12]	; (401a3c <pmc_osc_is_ready_mainck+0x14>)
  401a2e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  401a30:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
}
  401a34:	4618      	mov	r0, r3
  401a36:	46bd      	mov	sp, r7
  401a38:	bc80      	pop	{r7}
  401a3a:	4770      	bx	lr
  401a3c:	400e0400 	.word	0x400e0400

00401a40 <pmc_disable_pllack>:

/**
 * \brief Disable PLLA clock.
 */
void pmc_disable_pllack(void)
{
  401a40:	b480      	push	{r7}
  401a42:	af00      	add	r7, sp, #0
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  401a44:	4b03      	ldr	r3, [pc, #12]	; (401a54 <pmc_disable_pllack+0x14>)
  401a46:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  401a4a:	629a      	str	r2, [r3, #40]	; 0x28
#endif
}
  401a4c:	bf00      	nop
  401a4e:	46bd      	mov	sp, r7
  401a50:	bc80      	pop	{r7}
  401a52:	4770      	bx	lr
  401a54:	400e0400 	.word	0x400e0400

00401a58 <pmc_is_locked_pllack>:
 *
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
  401a58:	b480      	push	{r7}
  401a5a:	af00      	add	r7, sp, #0
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  401a5c:	4b03      	ldr	r3, [pc, #12]	; (401a6c <pmc_is_locked_pllack+0x14>)
  401a5e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  401a60:	f003 0302 	and.w	r3, r3, #2
}
  401a64:	4618      	mov	r0, r3
  401a66:	46bd      	mov	sp, r7
  401a68:	bc80      	pop	{r7}
  401a6a:	4770      	bx	lr
  401a6c:	400e0400 	.word	0x400e0400

00401a70 <pmc_disable_pllbck>:

/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
  401a70:	b480      	push	{r7}
  401a72:	af00      	add	r7, sp, #0
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  401a74:	4b03      	ldr	r3, [pc, #12]	; (401a84 <pmc_disable_pllbck+0x14>)
  401a76:	2200      	movs	r2, #0
  401a78:	62da      	str	r2, [r3, #44]	; 0x2c
}
  401a7a:	bf00      	nop
  401a7c:	46bd      	mov	sp, r7
  401a7e:	bc80      	pop	{r7}
  401a80:	4770      	bx	lr
  401a82:	bf00      	nop
  401a84:	400e0400 	.word	0x400e0400

00401a88 <pmc_is_locked_pllbck>:
 *
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllbck(void)
{
  401a88:	b480      	push	{r7}
  401a8a:	af00      	add	r7, sp, #0
	return (PMC->PMC_SR & PMC_SR_LOCKB);
  401a8c:	4b03      	ldr	r3, [pc, #12]	; (401a9c <pmc_is_locked_pllbck+0x14>)
  401a8e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  401a90:	f003 0304 	and.w	r3, r3, #4
}
  401a94:	4618      	mov	r0, r3
  401a96:	46bd      	mov	sp, r7
  401a98:	bc80      	pop	{r7}
  401a9a:	4770      	bx	lr
  401a9c:	400e0400 	.word	0x400e0400

00401aa0 <pmc_enable_periph_clk>:
 *
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
  401aa0:	b480      	push	{r7}
  401aa2:	b083      	sub	sp, #12
  401aa4:	af00      	add	r7, sp, #0
  401aa6:	6078      	str	r0, [r7, #4]
	if (ul_id > MAX_PERIPH_ID) {
  401aa8:	687b      	ldr	r3, [r7, #4]
  401aaa:	2b22      	cmp	r3, #34	; 0x22
  401aac:	d901      	bls.n	401ab2 <pmc_enable_periph_clk+0x12>
		return 1;
  401aae:	2301      	movs	r3, #1
  401ab0:	e02f      	b.n	401b12 <pmc_enable_periph_clk+0x72>
	}

	if (ul_id < 32) {
  401ab2:	687b      	ldr	r3, [r7, #4]
  401ab4:	2b1f      	cmp	r3, #31
  401ab6:	d813      	bhi.n	401ae0 <pmc_enable_periph_clk+0x40>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  401ab8:	4b18      	ldr	r3, [pc, #96]	; (401b1c <pmc_enable_periph_clk+0x7c>)
  401aba:	699a      	ldr	r2, [r3, #24]
  401abc:	2101      	movs	r1, #1
  401abe:	687b      	ldr	r3, [r7, #4]
  401ac0:	fa01 f303 	lsl.w	r3, r1, r3
  401ac4:	401a      	ands	r2, r3
  401ac6:	2101      	movs	r1, #1
  401ac8:	687b      	ldr	r3, [r7, #4]
  401aca:	fa01 f303 	lsl.w	r3, r1, r3
  401ace:	429a      	cmp	r2, r3
  401ad0:	d01e      	beq.n	401b10 <pmc_enable_periph_clk+0x70>
			PMC->PMC_PCER0 = 1 << ul_id;
  401ad2:	4a12      	ldr	r2, [pc, #72]	; (401b1c <pmc_enable_periph_clk+0x7c>)
  401ad4:	2101      	movs	r1, #1
  401ad6:	687b      	ldr	r3, [r7, #4]
  401ad8:	fa01 f303 	lsl.w	r3, r1, r3
  401adc:	6113      	str	r3, [r2, #16]
  401ade:	e017      	b.n	401b10 <pmc_enable_periph_clk+0x70>
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
  401ae0:	687b      	ldr	r3, [r7, #4]
  401ae2:	3b20      	subs	r3, #32
  401ae4:	607b      	str	r3, [r7, #4]
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  401ae6:	4b0d      	ldr	r3, [pc, #52]	; (401b1c <pmc_enable_periph_clk+0x7c>)
  401ae8:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  401aec:	2101      	movs	r1, #1
  401aee:	687b      	ldr	r3, [r7, #4]
  401af0:	fa01 f303 	lsl.w	r3, r1, r3
  401af4:	401a      	ands	r2, r3
  401af6:	2101      	movs	r1, #1
  401af8:	687b      	ldr	r3, [r7, #4]
  401afa:	fa01 f303 	lsl.w	r3, r1, r3
  401afe:	429a      	cmp	r2, r3
  401b00:	d006      	beq.n	401b10 <pmc_enable_periph_clk+0x70>
			PMC->PMC_PCER1 = 1 << ul_id;
  401b02:	4a06      	ldr	r2, [pc, #24]	; (401b1c <pmc_enable_periph_clk+0x7c>)
  401b04:	2101      	movs	r1, #1
  401b06:	687b      	ldr	r3, [r7, #4]
  401b08:	fa01 f303 	lsl.w	r3, r1, r3
  401b0c:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
		}
#endif
	}

	return 0;
  401b10:	2300      	movs	r3, #0
}
  401b12:	4618      	mov	r0, r3
  401b14:	370c      	adds	r7, #12
  401b16:	46bd      	mov	sp, r7
  401b18:	bc80      	pop	{r7}
  401b1a:	4770      	bx	lr
  401b1c:	400e0400 	.word	0x400e0400

00401b20 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  401b20:	b480      	push	{r7}
  401b22:	b087      	sub	sp, #28
  401b24:	af00      	add	r7, sp, #0
  401b26:	60f8      	str	r0, [r7, #12]
  401b28:	60b9      	str	r1, [r7, #8]
  401b2a:	607a      	str	r2, [r7, #4]

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  401b2c:	68fa      	ldr	r2, [r7, #12]
  401b2e:	68bb      	ldr	r3, [r7, #8]
  401b30:	019b      	lsls	r3, r3, #6
  401b32:	4413      	add	r3, r2
  401b34:	617b      	str	r3, [r7, #20]

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  401b36:	697b      	ldr	r3, [r7, #20]
  401b38:	2202      	movs	r2, #2
  401b3a:	601a      	str	r2, [r3, #0]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  401b3c:	697b      	ldr	r3, [r7, #20]
  401b3e:	f04f 32ff 	mov.w	r2, #4294967295
  401b42:	629a      	str	r2, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  401b44:	697b      	ldr	r3, [r7, #20]
  401b46:	6a1b      	ldr	r3, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  401b48:	697b      	ldr	r3, [r7, #20]
  401b4a:	687a      	ldr	r2, [r7, #4]
  401b4c:	605a      	str	r2, [r3, #4]
}
  401b4e:	bf00      	nop
  401b50:	371c      	adds	r7, #28
  401b52:	46bd      	mov	sp, r7
  401b54:	bc80      	pop	{r7}
  401b56:	4770      	bx	lr

00401b58 <tc_start>:
 * \param[in] ul_channel Channel to configure
 */
void tc_start(
		Tc *p_tc,
		uint32_t ul_channel)
{
  401b58:	b480      	push	{r7}
  401b5a:	b083      	sub	sp, #12
  401b5c:	af00      	add	r7, sp, #0
  401b5e:	6078      	str	r0, [r7, #4]
  401b60:	6039      	str	r1, [r7, #0]
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  401b62:	687a      	ldr	r2, [r7, #4]
  401b64:	683b      	ldr	r3, [r7, #0]
  401b66:	019b      	lsls	r3, r3, #6
  401b68:	4413      	add	r3, r2
  401b6a:	2205      	movs	r2, #5
  401b6c:	601a      	str	r2, [r3, #0]
}
  401b6e:	bf00      	nop
  401b70:	370c      	adds	r7, #12
  401b72:	46bd      	mov	sp, r7
  401b74:	bc80      	pop	{r7}
  401b76:	4770      	bx	lr

00401b78 <tc_write_rc>:
 */
void tc_write_rc(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_value)
{
  401b78:	b480      	push	{r7}
  401b7a:	b085      	sub	sp, #20
  401b7c:	af00      	add	r7, sp, #0
  401b7e:	60f8      	str	r0, [r7, #12]
  401b80:	60b9      	str	r1, [r7, #8]
  401b82:	607a      	str	r2, [r7, #4]
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  401b84:	68fa      	ldr	r2, [r7, #12]
  401b86:	68bb      	ldr	r3, [r7, #8]
  401b88:	019b      	lsls	r3, r3, #6
  401b8a:	4413      	add	r3, r2
  401b8c:	331c      	adds	r3, #28
  401b8e:	687a      	ldr	r2, [r7, #4]
  401b90:	601a      	str	r2, [r3, #0]
}
  401b92:	bf00      	nop
  401b94:	3714      	adds	r7, #20
  401b96:	46bd      	mov	sp, r7
  401b98:	bc80      	pop	{r7}
  401b9a:	4770      	bx	lr

00401b9c <tc_enable_interrupt>:
 */
void tc_enable_interrupt(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_sources)
{
  401b9c:	b480      	push	{r7}
  401b9e:	b087      	sub	sp, #28
  401ba0:	af00      	add	r7, sp, #0
  401ba2:	60f8      	str	r0, [r7, #12]
  401ba4:	60b9      	str	r1, [r7, #8]
  401ba6:	607a      	str	r2, [r7, #4]

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  401ba8:	68fa      	ldr	r2, [r7, #12]
  401baa:	68bb      	ldr	r3, [r7, #8]
  401bac:	019b      	lsls	r3, r3, #6
  401bae:	4413      	add	r3, r2
  401bb0:	617b      	str	r3, [r7, #20]
	tc_channel->TC_IER = ul_sources;
  401bb2:	697b      	ldr	r3, [r7, #20]
  401bb4:	687a      	ldr	r2, [r7, #4]
  401bb6:	625a      	str	r2, [r3, #36]	; 0x24
}
  401bb8:	bf00      	nop
  401bba:	371c      	adds	r7, #28
  401bbc:	46bd      	mov	sp, r7
  401bbe:	bc80      	pop	{r7}
  401bc0:	4770      	bx	lr

00401bc2 <tc_get_status>:
 * \return The current TC status.
 */
uint32_t tc_get_status(
		Tc *p_tc,
		uint32_t ul_channel)
{
  401bc2:	b480      	push	{r7}
  401bc4:	b085      	sub	sp, #20
  401bc6:	af00      	add	r7, sp, #0
  401bc8:	6078      	str	r0, [r7, #4]
  401bca:	6039      	str	r1, [r7, #0]
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  401bcc:	687a      	ldr	r2, [r7, #4]
  401bce:	683b      	ldr	r3, [r7, #0]
  401bd0:	019b      	lsls	r3, r3, #6
  401bd2:	4413      	add	r3, r2
  401bd4:	60fb      	str	r3, [r7, #12]
	return tc_channel->TC_SR;
  401bd6:	68fb      	ldr	r3, [r7, #12]
  401bd8:	6a1b      	ldr	r3, [r3, #32]
}
  401bda:	4618      	mov	r0, r3
  401bdc:	3714      	adds	r7, #20
  401bde:	46bd      	mov	sp, r7
  401be0:	bc80      	pop	{r7}
  401be2:	4770      	bx	lr

00401be4 <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  401be4:	b480      	push	{r7}
  401be6:	b08d      	sub	sp, #52	; 0x34
  401be8:	af00      	add	r7, sp, #0
  401bea:	60f8      	str	r0, [r7, #12]
  401bec:	60b9      	str	r1, [r7, #8]
  401bee:	607a      	str	r2, [r7, #4]
  401bf0:	603b      	str	r3, [r7, #0]
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  401bf2:	2302      	movs	r3, #2
  401bf4:	613b      	str	r3, [r7, #16]
  401bf6:	2308      	movs	r3, #8
  401bf8:	617b      	str	r3, [r7, #20]
  401bfa:	2320      	movs	r3, #32
  401bfc:	61bb      	str	r3, [r7, #24]
  401bfe:	2380      	movs	r3, #128	; 0x80
  401c00:	61fb      	str	r3, [r7, #28]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  401c02:	6bbb      	ldr	r3, [r7, #56]	; 0x38
  401c04:	0bdb      	lsrs	r3, r3, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  401c06:	623b      	str	r3, [r7, #32]
	uint32_t ul_index;
	uint32_t ul_high, ul_low;

	/*  Satisfy frequency bound. */
	for (ul_index = 0;
  401c08:	2300      	movs	r3, #0
  401c0a:	62fb      	str	r3, [r7, #44]	; 0x2c
  401c0c:	e01a      	b.n	401c44 <tc_find_mck_divisor+0x60>
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
  401c0e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  401c10:	009b      	lsls	r3, r3, #2
  401c12:	f107 0230 	add.w	r2, r7, #48	; 0x30
  401c16:	4413      	add	r3, r2
  401c18:	f853 3c20 	ldr.w	r3, [r3, #-32]
  401c1c:	68ba      	ldr	r2, [r7, #8]
  401c1e:	fbb2 f3f3 	udiv	r3, r2, r3
  401c22:	62bb      	str	r3, [r7, #40]	; 0x28
		ul_low  = ul_high / TC_DIV_FACTOR;
  401c24:	6abb      	ldr	r3, [r7, #40]	; 0x28
  401c26:	0c1b      	lsrs	r3, r3, #16
  401c28:	627b      	str	r3, [r7, #36]	; 0x24
		if (ul_freq > ul_high) {
  401c2a:	68fa      	ldr	r2, [r7, #12]
  401c2c:	6abb      	ldr	r3, [r7, #40]	; 0x28
  401c2e:	429a      	cmp	r2, r3
  401c30:	d901      	bls.n	401c36 <tc_find_mck_divisor+0x52>
			return 0;
  401c32:	2300      	movs	r3, #0
  401c34:	e023      	b.n	401c7e <tc_find_mck_divisor+0x9a>
		} else if (ul_freq >= ul_low) {
  401c36:	68fa      	ldr	r2, [r7, #12]
  401c38:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401c3a:	429a      	cmp	r2, r3
  401c3c:	d206      	bcs.n	401c4c <tc_find_mck_divisor+0x68>
			ul_index++) {
  401c3e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  401c40:	3301      	adds	r3, #1
  401c42:	62fb      	str	r3, [r7, #44]	; 0x2c
	for (ul_index = 0;
  401c44:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  401c46:	2b04      	cmp	r3, #4
  401c48:	d9e1      	bls.n	401c0e <tc_find_mck_divisor+0x2a>
  401c4a:	e000      	b.n	401c4e <tc_find_mck_divisor+0x6a>
			break;
  401c4c:	bf00      	nop
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
  401c4e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  401c50:	2b04      	cmp	r3, #4
  401c52:	d901      	bls.n	401c58 <tc_find_mck_divisor+0x74>
		return 0;
  401c54:	2300      	movs	r3, #0
  401c56:	e012      	b.n	401c7e <tc_find_mck_divisor+0x9a>
	}

	/*  Store results. */
	if (p_uldiv) {
  401c58:	687b      	ldr	r3, [r7, #4]
  401c5a:	2b00      	cmp	r3, #0
  401c5c:	d008      	beq.n	401c70 <tc_find_mck_divisor+0x8c>
		*p_uldiv = divisors[ul_index];
  401c5e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  401c60:	009b      	lsls	r3, r3, #2
  401c62:	f107 0230 	add.w	r2, r7, #48	; 0x30
  401c66:	4413      	add	r3, r2
  401c68:	f853 2c20 	ldr.w	r2, [r3, #-32]
  401c6c:	687b      	ldr	r3, [r7, #4]
  401c6e:	601a      	str	r2, [r3, #0]
	}

	if (p_ultcclks) {
  401c70:	683b      	ldr	r3, [r7, #0]
  401c72:	2b00      	cmp	r3, #0
  401c74:	d002      	beq.n	401c7c <tc_find_mck_divisor+0x98>
		*p_ultcclks = ul_index;
  401c76:	683b      	ldr	r3, [r7, #0]
  401c78:	6afa      	ldr	r2, [r7, #44]	; 0x2c
  401c7a:	601a      	str	r2, [r3, #0]
	}

	return 1;
  401c7c:	2301      	movs	r3, #1
}
  401c7e:	4618      	mov	r0, r3
  401c80:	3734      	adds	r7, #52	; 0x34
  401c82:	46bd      	mov	sp, r7
  401c84:	bc80      	pop	{r7}
  401c86:	4770      	bx	lr

00401c88 <sysclk_enable_peripheral_clock>:
{
  401c88:	b580      	push	{r7, lr}
  401c8a:	b082      	sub	sp, #8
  401c8c:	af00      	add	r7, sp, #0
  401c8e:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
  401c90:	6878      	ldr	r0, [r7, #4]
  401c92:	4b03      	ldr	r3, [pc, #12]	; (401ca0 <sysclk_enable_peripheral_clock+0x18>)
  401c94:	4798      	blx	r3
}
  401c96:	bf00      	nop
  401c98:	3708      	adds	r7, #8
  401c9a:	46bd      	mov	sp, r7
  401c9c:	bd80      	pop	{r7, pc}
  401c9e:	bf00      	nop
  401ca0:	00401aa1 	.word	0x00401aa1

00401ca4 <ioport_init>:
{
  401ca4:	b580      	push	{r7, lr}
  401ca6:	af00      	add	r7, sp, #0
	sysclk_enable_peripheral_clock(ID_PIOA);
  401ca8:	200b      	movs	r0, #11
  401caa:	4b03      	ldr	r3, [pc, #12]	; (401cb8 <ioport_init+0x14>)
  401cac:	4798      	blx	r3
	sysclk_enable_peripheral_clock(ID_PIOB);
  401cae:	200c      	movs	r0, #12
  401cb0:	4b01      	ldr	r3, [pc, #4]	; (401cb8 <ioport_init+0x14>)
  401cb2:	4798      	blx	r3
}
  401cb4:	bf00      	nop
  401cb6:	bd80      	pop	{r7, pc}
  401cb8:	00401c89 	.word	0x00401c89

00401cbc <ioport_set_pin_dir>:
{
  401cbc:	b480      	push	{r7}
  401cbe:	b08d      	sub	sp, #52	; 0x34
  401cc0:	af00      	add	r7, sp, #0
  401cc2:	6078      	str	r0, [r7, #4]
  401cc4:	460b      	mov	r3, r1
  401cc6:	70fb      	strb	r3, [r7, #3]
  401cc8:	687b      	ldr	r3, [r7, #4]
  401cca:	62fb      	str	r3, [r7, #44]	; 0x2c
  401ccc:	78fb      	ldrb	r3, [r7, #3]
  401cce:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
  401cd2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  401cd4:	627b      	str	r3, [r7, #36]	; 0x24
  401cd6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401cd8:	623b      	str	r3, [r7, #32]
	return pin >> 5;
  401cda:	6a3b      	ldr	r3, [r7, #32]
  401cdc:	095b      	lsrs	r3, r3, #5
  401cde:	61fb      	str	r3, [r7, #28]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  401ce0:	69fb      	ldr	r3, [r7, #28]
  401ce2:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  401ce6:	f203 7307 	addw	r3, r3, #1799	; 0x707
  401cea:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
  401cec:	61bb      	str	r3, [r7, #24]
	if (dir == IOPORT_DIR_OUTPUT) {
  401cee:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
  401cf2:	2b01      	cmp	r3, #1
  401cf4:	d109      	bne.n	401d0a <ioport_set_pin_dir+0x4e>
  401cf6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  401cf8:	617b      	str	r3, [r7, #20]
	return 1U << (pin & 0x1F);
  401cfa:	697b      	ldr	r3, [r7, #20]
  401cfc:	f003 031f 	and.w	r3, r3, #31
  401d00:	2201      	movs	r2, #1
  401d02:	409a      	lsls	r2, r3
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  401d04:	69bb      	ldr	r3, [r7, #24]
  401d06:	611a      	str	r2, [r3, #16]
  401d08:	e00c      	b.n	401d24 <ioport_set_pin_dir+0x68>
	} else if (dir == IOPORT_DIR_INPUT) {
  401d0a:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
  401d0e:	2b00      	cmp	r3, #0
  401d10:	d108      	bne.n	401d24 <ioport_set_pin_dir+0x68>
  401d12:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  401d14:	613b      	str	r3, [r7, #16]
	return 1U << (pin & 0x1F);
  401d16:	693b      	ldr	r3, [r7, #16]
  401d18:	f003 031f 	and.w	r3, r3, #31
  401d1c:	2201      	movs	r2, #1
  401d1e:	409a      	lsls	r2, r3
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  401d20:	69bb      	ldr	r3, [r7, #24]
  401d22:	615a      	str	r2, [r3, #20]
  401d24:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  401d26:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
  401d28:	68fb      	ldr	r3, [r7, #12]
  401d2a:	f003 031f 	and.w	r3, r3, #31
  401d2e:	2201      	movs	r2, #1
  401d30:	409a      	lsls	r2, r3
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401d32:	69bb      	ldr	r3, [r7, #24]
  401d34:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
}
  401d38:	bf00      	nop
  401d3a:	3734      	adds	r7, #52	; 0x34
  401d3c:	46bd      	mov	sp, r7
  401d3e:	bc80      	pop	{r7}
  401d40:	4770      	bx	lr

00401d42 <ioport_set_pin_level>:
{
  401d42:	b480      	push	{r7}
  401d44:	b08b      	sub	sp, #44	; 0x2c
  401d46:	af00      	add	r7, sp, #0
  401d48:	6078      	str	r0, [r7, #4]
  401d4a:	460b      	mov	r3, r1
  401d4c:	70fb      	strb	r3, [r7, #3]
  401d4e:	687b      	ldr	r3, [r7, #4]
  401d50:	627b      	str	r3, [r7, #36]	; 0x24
  401d52:	78fb      	ldrb	r3, [r7, #3]
  401d54:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  401d58:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401d5a:	61fb      	str	r3, [r7, #28]
  401d5c:	69fb      	ldr	r3, [r7, #28]
  401d5e:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
  401d60:	69bb      	ldr	r3, [r7, #24]
  401d62:	095b      	lsrs	r3, r3, #5
  401d64:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  401d66:	697b      	ldr	r3, [r7, #20]
  401d68:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  401d6c:	f203 7307 	addw	r3, r3, #1799	; 0x707
  401d70:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
  401d72:	613b      	str	r3, [r7, #16]
	if (level) {
  401d74:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
  401d78:	2b00      	cmp	r3, #0
  401d7a:	d009      	beq.n	401d90 <ioport_set_pin_level+0x4e>
  401d7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401d7e:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
  401d80:	68fb      	ldr	r3, [r7, #12]
  401d82:	f003 031f 	and.w	r3, r3, #31
  401d86:	2201      	movs	r2, #1
  401d88:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401d8a:	693b      	ldr	r3, [r7, #16]
  401d8c:	631a      	str	r2, [r3, #48]	; 0x30
}
  401d8e:	e008      	b.n	401da2 <ioport_set_pin_level+0x60>
  401d90:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401d92:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
  401d94:	68bb      	ldr	r3, [r7, #8]
  401d96:	f003 031f 	and.w	r3, r3, #31
  401d9a:	2201      	movs	r2, #1
  401d9c:	409a      	lsls	r2, r3
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  401d9e:	693b      	ldr	r3, [r7, #16]
  401da0:	635a      	str	r2, [r3, #52]	; 0x34
  401da2:	bf00      	nop
  401da4:	372c      	adds	r7, #44	; 0x2c
  401da6:	46bd      	mov	sp, r7
  401da8:	bc80      	pop	{r7}
  401daa:	4770      	bx	lr

00401dac <board_init>:
#include <board.h>
#include <conf_board.h>


void board_init(void)
{
  401dac:	b580      	push	{r7, lr}
  401dae:	af00      	add	r7, sp, #0
	ioport_init();
  401db0:	4b0b      	ldr	r3, [pc, #44]	; (401de0 <board_init+0x34>)
  401db2:	4798      	blx	r3
	ioport_set_pin_dir(PIN_WIFI_RESET,IOPORT_DIR_OUTPUT);
  401db4:	2101      	movs	r1, #1
  401db6:	2021      	movs	r0, #33	; 0x21
  401db8:	4b0a      	ldr	r3, [pc, #40]	; (401de4 <board_init+0x38>)
  401dba:	4798      	blx	r3
	ioport_set_pin_level(PIN_WIFI_RESET,LOW);
  401dbc:	2100      	movs	r1, #0
  401dbe:	2021      	movs	r0, #33	; 0x21
  401dc0:	4b09      	ldr	r3, [pc, #36]	; (401de8 <board_init+0x3c>)
  401dc2:	4798      	blx	r3
	
	ioport_set_pin_dir(PIN_WIFI_NETWORK_STATUS,IOPORT_DIR_INPUT);
  401dc4:	2100      	movs	r1, #0
  401dc6:	200b      	movs	r0, #11
  401dc8:	4b06      	ldr	r3, [pc, #24]	; (401de4 <board_init+0x38>)
  401dca:	4798      	blx	r3
	//ioport_set_pin_level(PIN_WIFI_NETWORK_STATUS,LOW);
	
	ioport_set_pin_dir(PUSH_BUTTON,IOPORT_DIR_INPUT);
  401dcc:	2100      	movs	r1, #0
  401dce:	2000      	movs	r0, #0
  401dd0:	4b04      	ldr	r3, [pc, #16]	; (401de4 <board_init+0x38>)
  401dd2:	4798      	blx	r3
	//ioport_set_pin_level(PUSH_BUTTON,HIGH);
	
	ioport_set_pin_dir(WIFI_COM_COMPLETE,IOPORT_DIR_INPUT);
  401dd4:	2100      	movs	r1, #0
  401dd6:	200c      	movs	r0, #12
  401dd8:	4b02      	ldr	r3, [pc, #8]	; (401de4 <board_init+0x38>)
  401dda:	4798      	blx	r3
	//ioport_set_pin_level(WIFI_COM_COMPLETE,LOW);



}
  401ddc:	bf00      	nop
  401dde:	bd80      	pop	{r7, pc}
  401de0:	00401ca5 	.word	0x00401ca5
  401de4:	00401cbd 	.word	0x00401cbd
  401de8:	00401d43 	.word	0x00401d43

00401dec <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  401dec:	b580      	push	{r7, lr}
  401dee:	b084      	sub	sp, #16
  401df0:	af00      	add	r7, sp, #0
	uint32_t *pSrc, *pDest;

	/* Initialize the relocate segment */
	pSrc = &_etext;
  401df2:	4b27      	ldr	r3, [pc, #156]	; (401e90 <Reset_Handler+0xa4>)
  401df4:	60fb      	str	r3, [r7, #12]
	pDest = &_srelocate;
  401df6:	4b27      	ldr	r3, [pc, #156]	; (401e94 <Reset_Handler+0xa8>)
  401df8:	60bb      	str	r3, [r7, #8]

	if (pSrc > pDest) {
  401dfa:	68fa      	ldr	r2, [r7, #12]
  401dfc:	68bb      	ldr	r3, [r7, #8]
  401dfe:	429a      	cmp	r2, r3
  401e00:	d90d      	bls.n	401e1e <Reset_Handler+0x32>
		for (; pDest < &_erelocate;) {
  401e02:	e007      	b.n	401e14 <Reset_Handler+0x28>
			*pDest++ = *pSrc++;
  401e04:	68bb      	ldr	r3, [r7, #8]
  401e06:	1d1a      	adds	r2, r3, #4
  401e08:	60ba      	str	r2, [r7, #8]
  401e0a:	68fa      	ldr	r2, [r7, #12]
  401e0c:	1d11      	adds	r1, r2, #4
  401e0e:	60f9      	str	r1, [r7, #12]
  401e10:	6812      	ldr	r2, [r2, #0]
  401e12:	601a      	str	r2, [r3, #0]
		for (; pDest < &_erelocate;) {
  401e14:	68bb      	ldr	r3, [r7, #8]
  401e16:	4a20      	ldr	r2, [pc, #128]	; (401e98 <Reset_Handler+0xac>)
  401e18:	4293      	cmp	r3, r2
  401e1a:	d3f3      	bcc.n	401e04 <Reset_Handler+0x18>
  401e1c:	e020      	b.n	401e60 <Reset_Handler+0x74>
		}
	} else if (pSrc < pDest) {
  401e1e:	68fa      	ldr	r2, [r7, #12]
  401e20:	68bb      	ldr	r3, [r7, #8]
  401e22:	429a      	cmp	r2, r3
  401e24:	d21c      	bcs.n	401e60 <Reset_Handler+0x74>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  401e26:	4a1c      	ldr	r2, [pc, #112]	; (401e98 <Reset_Handler+0xac>)
  401e28:	4b1a      	ldr	r3, [pc, #104]	; (401e94 <Reset_Handler+0xa8>)
  401e2a:	1ad3      	subs	r3, r2, r3
  401e2c:	607b      	str	r3, [r7, #4]
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  401e2e:	68fa      	ldr	r2, [r7, #12]
  401e30:	687b      	ldr	r3, [r7, #4]
  401e32:	4413      	add	r3, r2
  401e34:	3b04      	subs	r3, #4
  401e36:	60fb      	str	r3, [r7, #12]
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
  401e38:	68ba      	ldr	r2, [r7, #8]
  401e3a:	687b      	ldr	r3, [r7, #4]
  401e3c:	4413      	add	r3, r2
  401e3e:	3b04      	subs	r3, #4
  401e40:	60bb      	str	r3, [r7, #8]
		for (;nb_bytes;nb_bytes -= 4) {
  401e42:	e00a      	b.n	401e5a <Reset_Handler+0x6e>
			*pDest-- = *pSrc--;
  401e44:	68bb      	ldr	r3, [r7, #8]
  401e46:	1f1a      	subs	r2, r3, #4
  401e48:	60ba      	str	r2, [r7, #8]
  401e4a:	68fa      	ldr	r2, [r7, #12]
  401e4c:	1f11      	subs	r1, r2, #4
  401e4e:	60f9      	str	r1, [r7, #12]
  401e50:	6812      	ldr	r2, [r2, #0]
  401e52:	601a      	str	r2, [r3, #0]
		for (;nb_bytes;nb_bytes -= 4) {
  401e54:	687b      	ldr	r3, [r7, #4]
  401e56:	3b04      	subs	r3, #4
  401e58:	607b      	str	r3, [r7, #4]
  401e5a:	687b      	ldr	r3, [r7, #4]
  401e5c:	2b00      	cmp	r3, #0
  401e5e:	d1f1      	bne.n	401e44 <Reset_Handler+0x58>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  401e60:	bf00      	nop
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  401e62:	4b0e      	ldr	r3, [pc, #56]	; (401e9c <Reset_Handler+0xb0>)
  401e64:	60bb      	str	r3, [r7, #8]
  401e66:	e004      	b.n	401e72 <Reset_Handler+0x86>
		*pDest++ = 0;
  401e68:	68bb      	ldr	r3, [r7, #8]
  401e6a:	1d1a      	adds	r2, r3, #4
  401e6c:	60ba      	str	r2, [r7, #8]
  401e6e:	2200      	movs	r2, #0
  401e70:	601a      	str	r2, [r3, #0]
	for (pDest = &_szero; pDest < &_ezero;) {
  401e72:	68bb      	ldr	r3, [r7, #8]
  401e74:	4a0a      	ldr	r2, [pc, #40]	; (401ea0 <Reset_Handler+0xb4>)
  401e76:	4293      	cmp	r3, r2
  401e78:	d3f6      	bcc.n	401e68 <Reset_Handler+0x7c>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
  401e7a:	4b0a      	ldr	r3, [pc, #40]	; (401ea4 <Reset_Handler+0xb8>)
  401e7c:	60fb      	str	r3, [r7, #12]
	SCB->VTOR = ((uint32_t) pSrc);
  401e7e:	4a0a      	ldr	r2, [pc, #40]	; (401ea8 <Reset_Handler+0xbc>)
  401e80:	68fb      	ldr	r3, [r7, #12]
  401e82:	6093      	str	r3, [r2, #8]

	/* Initialize the C library */
	__libc_init_array();
  401e84:	4b09      	ldr	r3, [pc, #36]	; (401eac <Reset_Handler+0xc0>)
  401e86:	4798      	blx	r3

	/* Branch to main function */
	main();
  401e88:	4b09      	ldr	r3, [pc, #36]	; (401eb0 <Reset_Handler+0xc4>)
  401e8a:	4798      	blx	r3

	/* Infinite loop */
	while (1);
  401e8c:	e7fe      	b.n	401e8c <Reset_Handler+0xa0>
  401e8e:	bf00      	nop
  401e90:	00407784 	.word	0x00407784
  401e94:	20000000 	.word	0x20000000
  401e98:	20006b68 	.word	0x20006b68
  401e9c:	20006b68 	.word	0x20006b68
  401ea0:	200070a0 	.word	0x200070a0
  401ea4:	00400000 	.word	0x00400000
  401ea8:	e000ed00 	.word	0xe000ed00
  401eac:	0040267d 	.word	0x0040267d
  401eb0:	004021e5 	.word	0x004021e5

00401eb4 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401eb4:	b480      	push	{r7}
  401eb6:	af00      	add	r7, sp, #0
	while (1) {
  401eb8:	e7fe      	b.n	401eb8 <Dummy_Handler+0x4>
	...

00401ebc <SystemCoreClockUpdate>:

/**
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
  401ebc:	b480      	push	{r7}
  401ebe:	af00      	add	r7, sp, #0
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  401ec0:	4b5d      	ldr	r3, [pc, #372]	; (402038 <SystemCoreClockUpdate+0x17c>)
  401ec2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401ec4:	f003 0303 	and.w	r3, r3, #3
  401ec8:	2b03      	cmp	r3, #3
  401eca:	f200 8096 	bhi.w	401ffa <SystemCoreClockUpdate+0x13e>
  401ece:	a201      	add	r2, pc, #4	; (adr r2, 401ed4 <SystemCoreClockUpdate+0x18>)
  401ed0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  401ed4:	00401ee5 	.word	0x00401ee5
  401ed8:	00401f05 	.word	0x00401f05
  401edc:	00401f4f 	.word	0x00401f4f
  401ee0:	00401f4f 	.word	0x00401f4f
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  401ee4:	4b55      	ldr	r3, [pc, #340]	; (40203c <SystemCoreClockUpdate+0x180>)
  401ee6:	695b      	ldr	r3, [r3, #20]
  401ee8:	f003 0380 	and.w	r3, r3, #128	; 0x80
  401eec:	2b00      	cmp	r3, #0
  401eee:	d004      	beq.n	401efa <SystemCoreClockUpdate+0x3e>
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401ef0:	4b53      	ldr	r3, [pc, #332]	; (402040 <SystemCoreClockUpdate+0x184>)
  401ef2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  401ef6:	601a      	str	r2, [r3, #0]
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
			}
		break;
  401ef8:	e080      	b.n	401ffc <SystemCoreClockUpdate+0x140>
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401efa:	4b51      	ldr	r3, [pc, #324]	; (402040 <SystemCoreClockUpdate+0x184>)
  401efc:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
  401f00:	601a      	str	r2, [r3, #0]
		break;
  401f02:	e07b      	b.n	401ffc <SystemCoreClockUpdate+0x140>
		
	case PMC_MCKR_CSS_MAIN_CLK: /* Main clock */
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  401f04:	4b4c      	ldr	r3, [pc, #304]	; (402038 <SystemCoreClockUpdate+0x17c>)
  401f06:	6a1b      	ldr	r3, [r3, #32]
  401f08:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
  401f0c:	2b00      	cmp	r3, #0
  401f0e:	d003      	beq.n	401f18 <SystemCoreClockUpdate+0x5c>
			SystemCoreClock = CHIP_FREQ_XTAL;
  401f10:	4b4b      	ldr	r3, [pc, #300]	; (402040 <SystemCoreClockUpdate+0x184>)
  401f12:	4a4c      	ldr	r2, [pc, #304]	; (402044 <SystemCoreClockUpdate+0x188>)
  401f14:	601a      	str	r2, [r3, #0]
			
			default:
			break;
			}
		}
		break;
  401f16:	e071      	b.n	401ffc <SystemCoreClockUpdate+0x140>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401f18:	4b49      	ldr	r3, [pc, #292]	; (402040 <SystemCoreClockUpdate+0x184>)
  401f1a:	4a4b      	ldr	r2, [pc, #300]	; (402048 <SystemCoreClockUpdate+0x18c>)
  401f1c:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  401f1e:	4b46      	ldr	r3, [pc, #280]	; (402038 <SystemCoreClockUpdate+0x17c>)
  401f20:	6a1b      	ldr	r3, [r3, #32]
  401f22:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401f26:	2b10      	cmp	r3, #16
  401f28:	d008      	beq.n	401f3c <SystemCoreClockUpdate+0x80>
  401f2a:	2b20      	cmp	r3, #32
  401f2c:	d00a      	beq.n	401f44 <SystemCoreClockUpdate+0x88>
  401f2e:	2b00      	cmp	r3, #0
  401f30:	d000      	beq.n	401f34 <SystemCoreClockUpdate+0x78>
			break;
  401f32:	e00b      	b.n	401f4c <SystemCoreClockUpdate+0x90>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401f34:	4b42      	ldr	r3, [pc, #264]	; (402040 <SystemCoreClockUpdate+0x184>)
  401f36:	4a44      	ldr	r2, [pc, #272]	; (402048 <SystemCoreClockUpdate+0x18c>)
  401f38:	601a      	str	r2, [r3, #0]
			break;
  401f3a:	e007      	b.n	401f4c <SystemCoreClockUpdate+0x90>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  401f3c:	4b40      	ldr	r3, [pc, #256]	; (402040 <SystemCoreClockUpdate+0x184>)
  401f3e:	4a43      	ldr	r2, [pc, #268]	; (40204c <SystemCoreClockUpdate+0x190>)
  401f40:	601a      	str	r2, [r3, #0]
			break;
  401f42:	e003      	b.n	401f4c <SystemCoreClockUpdate+0x90>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  401f44:	4b3e      	ldr	r3, [pc, #248]	; (402040 <SystemCoreClockUpdate+0x184>)
  401f46:	4a3f      	ldr	r2, [pc, #252]	; (402044 <SystemCoreClockUpdate+0x188>)
  401f48:	601a      	str	r2, [r3, #0]
			break;
  401f4a:	bf00      	nop
		break;
  401f4c:	e056      	b.n	401ffc <SystemCoreClockUpdate+0x140>
		
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_PLLB_CLK:	/* PLLB clock */
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  401f4e:	4b3a      	ldr	r3, [pc, #232]	; (402038 <SystemCoreClockUpdate+0x17c>)
  401f50:	6a1b      	ldr	r3, [r3, #32]
  401f52:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
  401f56:	2b00      	cmp	r3, #0
  401f58:	d003      	beq.n	401f62 <SystemCoreClockUpdate+0xa6>
				SystemCoreClock = CHIP_FREQ_XTAL;
  401f5a:	4b39      	ldr	r3, [pc, #228]	; (402040 <SystemCoreClockUpdate+0x184>)
  401f5c:	4a39      	ldr	r2, [pc, #228]	; (402044 <SystemCoreClockUpdate+0x188>)
  401f5e:	601a      	str	r2, [r3, #0]
  401f60:	e019      	b.n	401f96 <SystemCoreClockUpdate+0xda>
			} else {
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401f62:	4b37      	ldr	r3, [pc, #220]	; (402040 <SystemCoreClockUpdate+0x184>)
  401f64:	4a38      	ldr	r2, [pc, #224]	; (402048 <SystemCoreClockUpdate+0x18c>)
  401f66:	601a      	str	r2, [r3, #0]
				
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  401f68:	4b33      	ldr	r3, [pc, #204]	; (402038 <SystemCoreClockUpdate+0x17c>)
  401f6a:	6a1b      	ldr	r3, [r3, #32]
  401f6c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401f70:	2b10      	cmp	r3, #16
  401f72:	d008      	beq.n	401f86 <SystemCoreClockUpdate+0xca>
  401f74:	2b20      	cmp	r3, #32
  401f76:	d00a      	beq.n	401f8e <SystemCoreClockUpdate+0xd2>
  401f78:	2b00      	cmp	r3, #0
  401f7a:	d000      	beq.n	401f7e <SystemCoreClockUpdate+0xc2>
				case CKGR_MOR_MOSCRCF_12_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
					break;
				
				default:
					break;
  401f7c:	e00b      	b.n	401f96 <SystemCoreClockUpdate+0xda>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401f7e:	4b30      	ldr	r3, [pc, #192]	; (402040 <SystemCoreClockUpdate+0x184>)
  401f80:	4a31      	ldr	r2, [pc, #196]	; (402048 <SystemCoreClockUpdate+0x18c>)
  401f82:	601a      	str	r2, [r3, #0]
					break;
  401f84:	e007      	b.n	401f96 <SystemCoreClockUpdate+0xda>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  401f86:	4b2e      	ldr	r3, [pc, #184]	; (402040 <SystemCoreClockUpdate+0x184>)
  401f88:	4a30      	ldr	r2, [pc, #192]	; (40204c <SystemCoreClockUpdate+0x190>)
  401f8a:	601a      	str	r2, [r3, #0]
					break;
  401f8c:	e003      	b.n	401f96 <SystemCoreClockUpdate+0xda>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  401f8e:	4b2c      	ldr	r3, [pc, #176]	; (402040 <SystemCoreClockUpdate+0x184>)
  401f90:	4a2c      	ldr	r2, [pc, #176]	; (402044 <SystemCoreClockUpdate+0x188>)
  401f92:	601a      	str	r2, [r3, #0]
					break;
  401f94:	bf00      	nop
				}
			}
			
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  401f96:	4b28      	ldr	r3, [pc, #160]	; (402038 <SystemCoreClockUpdate+0x17c>)
  401f98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401f9a:	f003 0303 	and.w	r3, r3, #3
  401f9e:	2b02      	cmp	r3, #2
  401fa0:	d115      	bne.n	401fce <SystemCoreClockUpdate+0x112>
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  401fa2:	4b25      	ldr	r3, [pc, #148]	; (402038 <SystemCoreClockUpdate+0x17c>)
  401fa4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
						>> CKGR_PLLAR_MULA_Pos) + 1U);
  401fa6:	0c1b      	lsrs	r3, r3, #16
  401fa8:	f3c3 030a 	ubfx	r3, r3, #0, #11
  401fac:	3301      	adds	r3, #1
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  401fae:	4a24      	ldr	r2, [pc, #144]	; (402040 <SystemCoreClockUpdate+0x184>)
  401fb0:	6812      	ldr	r2, [r2, #0]
  401fb2:	fb02 f303 	mul.w	r3, r2, r3
  401fb6:	4a22      	ldr	r2, [pc, #136]	; (402040 <SystemCoreClockUpdate+0x184>)
  401fb8:	6013      	str	r3, [r2, #0]
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  401fba:	4b1f      	ldr	r3, [pc, #124]	; (402038 <SystemCoreClockUpdate+0x17c>)
  401fbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
						>> CKGR_PLLAR_DIVA_Pos));
  401fbe:	b2db      	uxtb	r3, r3
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  401fc0:	4a1f      	ldr	r2, [pc, #124]	; (402040 <SystemCoreClockUpdate+0x184>)
  401fc2:	6812      	ldr	r2, [r2, #0]
  401fc4:	fbb2 f3f3 	udiv	r3, r2, r3
  401fc8:	4a1d      	ldr	r2, [pc, #116]	; (402040 <SystemCoreClockUpdate+0x184>)
  401fca:	6013      	str	r3, [r2, #0]
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
						>> CKGR_PLLBR_DIVB_Pos));
			}
		break;
  401fcc:	e016      	b.n	401ffc <SystemCoreClockUpdate+0x140>
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  401fce:	4b1a      	ldr	r3, [pc, #104]	; (402038 <SystemCoreClockUpdate+0x17c>)
  401fd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  401fd2:	0c1b      	lsrs	r3, r3, #16
  401fd4:	f3c3 030a 	ubfx	r3, r3, #0, #11
  401fd8:	3301      	adds	r3, #1
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  401fda:	4a19      	ldr	r2, [pc, #100]	; (402040 <SystemCoreClockUpdate+0x184>)
  401fdc:	6812      	ldr	r2, [r2, #0]
  401fde:	fb02 f303 	mul.w	r3, r2, r3
  401fe2:	4a17      	ldr	r2, [pc, #92]	; (402040 <SystemCoreClockUpdate+0x184>)
  401fe4:	6013      	str	r3, [r2, #0]
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401fe6:	4b14      	ldr	r3, [pc, #80]	; (402038 <SystemCoreClockUpdate+0x17c>)
  401fe8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
						>> CKGR_PLLBR_DIVB_Pos));
  401fea:	b2db      	uxtb	r3, r3
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  401fec:	4a14      	ldr	r2, [pc, #80]	; (402040 <SystemCoreClockUpdate+0x184>)
  401fee:	6812      	ldr	r2, [r2, #0]
  401ff0:	fbb2 f3f3 	udiv	r3, r2, r3
  401ff4:	4a12      	ldr	r2, [pc, #72]	; (402040 <SystemCoreClockUpdate+0x184>)
  401ff6:	6013      	str	r3, [r2, #0]
		break;
  401ff8:	e000      	b.n	401ffc <SystemCoreClockUpdate+0x140>
		
	default:
		break;
  401ffa:	bf00      	nop
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  401ffc:	4b0e      	ldr	r3, [pc, #56]	; (402038 <SystemCoreClockUpdate+0x17c>)
  401ffe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402000:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402004:	2b70      	cmp	r3, #112	; 0x70
  402006:	d108      	bne.n	40201a <SystemCoreClockUpdate+0x15e>
		SystemCoreClock /= 3U;
  402008:	4b0d      	ldr	r3, [pc, #52]	; (402040 <SystemCoreClockUpdate+0x184>)
  40200a:	681b      	ldr	r3, [r3, #0]
  40200c:	4a10      	ldr	r2, [pc, #64]	; (402050 <SystemCoreClockUpdate+0x194>)
  40200e:	fba2 2303 	umull	r2, r3, r2, r3
  402012:	085b      	lsrs	r3, r3, #1
  402014:	4a0a      	ldr	r2, [pc, #40]	; (402040 <SystemCoreClockUpdate+0x184>)
  402016:	6013      	str	r3, [r2, #0]
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
	}
}
  402018:	e00a      	b.n	402030 <SystemCoreClockUpdate+0x174>
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  40201a:	4b07      	ldr	r3, [pc, #28]	; (402038 <SystemCoreClockUpdate+0x17c>)
  40201c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40201e:	091b      	lsrs	r3, r3, #4
  402020:	f003 0307 	and.w	r3, r3, #7
		SystemCoreClock >>=
  402024:	4a06      	ldr	r2, [pc, #24]	; (402040 <SystemCoreClockUpdate+0x184>)
  402026:	6812      	ldr	r2, [r2, #0]
  402028:	fa22 f303 	lsr.w	r3, r2, r3
  40202c:	4a04      	ldr	r2, [pc, #16]	; (402040 <SystemCoreClockUpdate+0x184>)
  40202e:	6013      	str	r3, [r2, #0]
}
  402030:	bf00      	nop
  402032:	46bd      	mov	sp, r7
  402034:	bc80      	pop	{r7}
  402036:	4770      	bx	lr
  402038:	400e0400 	.word	0x400e0400
  40203c:	400e1410 	.word	0x400e1410
  402040:	200061b4 	.word	0x200061b4
  402044:	00b71b00 	.word	0x00b71b00
  402048:	003d0900 	.word	0x003d0900
  40204c:	007a1200 	.word	0x007a1200
  402050:	aaaaaaab 	.word	0xaaaaaaab

00402054 <system_init_flash>:
 * \brief Initialize flash wait state according to operating frequency.
 *
 * \param ul_clk System clock frequency.
 */
void system_init_flash( uint32_t ul_clk )
{
  402054:	b480      	push	{r7}
  402056:	b083      	sub	sp, #12
  402058:	af00      	add	r7, sp, #0
  40205a:	6078      	str	r0, [r7, #4]
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  40205c:	687b      	ldr	r3, [r7, #4]
  40205e:	4a18      	ldr	r2, [pc, #96]	; (4020c0 <system_init_flash+0x6c>)
  402060:	4293      	cmp	r3, r2
  402062:	d804      	bhi.n	40206e <system_init_flash+0x1a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  402064:	4b17      	ldr	r3, [pc, #92]	; (4020c4 <system_init_flash+0x70>)
  402066:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  40206a:	601a      	str	r2, [r3, #0]
				}
			}
		}
	}
#endif
}
  40206c:	e023      	b.n	4020b6 <system_init_flash+0x62>
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  40206e:	687b      	ldr	r3, [r7, #4]
  402070:	4a15      	ldr	r2, [pc, #84]	; (4020c8 <system_init_flash+0x74>)
  402072:	4293      	cmp	r3, r2
  402074:	d803      	bhi.n	40207e <system_init_flash+0x2a>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  402076:	4b13      	ldr	r3, [pc, #76]	; (4020c4 <system_init_flash+0x70>)
  402078:	4a14      	ldr	r2, [pc, #80]	; (4020cc <system_init_flash+0x78>)
  40207a:	601a      	str	r2, [r3, #0]
}
  40207c:	e01b      	b.n	4020b6 <system_init_flash+0x62>
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  40207e:	687b      	ldr	r3, [r7, #4]
  402080:	4a13      	ldr	r2, [pc, #76]	; (4020d0 <system_init_flash+0x7c>)
  402082:	4293      	cmp	r3, r2
  402084:	d803      	bhi.n	40208e <system_init_flash+0x3a>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  402086:	4b0f      	ldr	r3, [pc, #60]	; (4020c4 <system_init_flash+0x70>)
  402088:	4a12      	ldr	r2, [pc, #72]	; (4020d4 <system_init_flash+0x80>)
  40208a:	601a      	str	r2, [r3, #0]
}
  40208c:	e013      	b.n	4020b6 <system_init_flash+0x62>
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  40208e:	687b      	ldr	r3, [r7, #4]
  402090:	4a11      	ldr	r2, [pc, #68]	; (4020d8 <system_init_flash+0x84>)
  402092:	4293      	cmp	r3, r2
  402094:	d803      	bhi.n	40209e <system_init_flash+0x4a>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  402096:	4b0b      	ldr	r3, [pc, #44]	; (4020c4 <system_init_flash+0x70>)
  402098:	4a10      	ldr	r2, [pc, #64]	; (4020dc <system_init_flash+0x88>)
  40209a:	601a      	str	r2, [r3, #0]
}
  40209c:	e00b      	b.n	4020b6 <system_init_flash+0x62>
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  40209e:	687b      	ldr	r3, [r7, #4]
  4020a0:	4a0f      	ldr	r2, [pc, #60]	; (4020e0 <system_init_flash+0x8c>)
  4020a2:	4293      	cmp	r3, r2
  4020a4:	d804      	bhi.n	4020b0 <system_init_flash+0x5c>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4020a6:	4b07      	ldr	r3, [pc, #28]	; (4020c4 <system_init_flash+0x70>)
  4020a8:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  4020ac:	601a      	str	r2, [r3, #0]
}
  4020ae:	e002      	b.n	4020b6 <system_init_flash+0x62>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4020b0:	4b04      	ldr	r3, [pc, #16]	; (4020c4 <system_init_flash+0x70>)
  4020b2:	4a0c      	ldr	r2, [pc, #48]	; (4020e4 <system_init_flash+0x90>)
  4020b4:	601a      	str	r2, [r3, #0]
}
  4020b6:	bf00      	nop
  4020b8:	370c      	adds	r7, #12
  4020ba:	46bd      	mov	sp, r7
  4020bc:	bc80      	pop	{r7}
  4020be:	4770      	bx	lr
  4020c0:	01312cff 	.word	0x01312cff
  4020c4:	400e0a00 	.word	0x400e0a00
  4020c8:	026259ff 	.word	0x026259ff
  4020cc:	04000100 	.word	0x04000100
  4020d0:	039386ff 	.word	0x039386ff
  4020d4:	04000200 	.word	0x04000200
  4020d8:	04c4b3ff 	.word	0x04c4b3ff
  4020dc:	04000300 	.word	0x04000300
  4020e0:	05f5e0ff 	.word	0x05f5e0ff
  4020e4:	04000500 	.word	0x04000500

004020e8 <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
  4020e8:	b480      	push	{r7}
  4020ea:	b085      	sub	sp, #20
  4020ec:	af00      	add	r7, sp, #0
  4020ee:	6078      	str	r0, [r7, #4]
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;
  4020f0:	4b10      	ldr	r3, [pc, #64]	; (402134 <_sbrk+0x4c>)
  4020f2:	60fb      	str	r3, [r7, #12]

	if (heap == NULL) {
  4020f4:	4b10      	ldr	r3, [pc, #64]	; (402138 <_sbrk+0x50>)
  4020f6:	681b      	ldr	r3, [r3, #0]
  4020f8:	2b00      	cmp	r3, #0
  4020fa:	d102      	bne.n	402102 <_sbrk+0x1a>
		heap = (unsigned char *)&_end;
  4020fc:	4b0e      	ldr	r3, [pc, #56]	; (402138 <_sbrk+0x50>)
  4020fe:	4a0f      	ldr	r2, [pc, #60]	; (40213c <_sbrk+0x54>)
  402100:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  402102:	4b0d      	ldr	r3, [pc, #52]	; (402138 <_sbrk+0x50>)
  402104:	681b      	ldr	r3, [r3, #0]
  402106:	60bb      	str	r3, [r7, #8]

	if (((int)prev_heap + incr) > ramend) {
  402108:	68ba      	ldr	r2, [r7, #8]
  40210a:	687b      	ldr	r3, [r7, #4]
  40210c:	441a      	add	r2, r3
  40210e:	68fb      	ldr	r3, [r7, #12]
  402110:	429a      	cmp	r2, r3
  402112:	dd02      	ble.n	40211a <_sbrk+0x32>
		return (caddr_t) -1;	
  402114:	f04f 33ff 	mov.w	r3, #4294967295
  402118:	e006      	b.n	402128 <_sbrk+0x40>
	}

	heap += incr;
  40211a:	4b07      	ldr	r3, [pc, #28]	; (402138 <_sbrk+0x50>)
  40211c:	681a      	ldr	r2, [r3, #0]
  40211e:	687b      	ldr	r3, [r7, #4]
  402120:	4413      	add	r3, r2
  402122:	4a05      	ldr	r2, [pc, #20]	; (402138 <_sbrk+0x50>)
  402124:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
  402126:	68bb      	ldr	r3, [r7, #8]
}
  402128:	4618      	mov	r0, r3
  40212a:	3714      	adds	r7, #20
  40212c:	46bd      	mov	sp, r7
  40212e:	bc80      	pop	{r7}
  402130:	4770      	bx	lr
  402132:	bf00      	nop
  402134:	2001fffc 	.word	0x2001fffc
  402138:	20006c18 	.word	0x20006c18
  40213c:	2000a0a0 	.word	0x2000a0a0

00402140 <osc_get_rate>:
{
  402140:	b480      	push	{r7}
  402142:	b083      	sub	sp, #12
  402144:	af00      	add	r7, sp, #0
  402146:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  402148:	687b      	ldr	r3, [r7, #4]
  40214a:	2b07      	cmp	r3, #7
  40214c:	d825      	bhi.n	40219a <osc_get_rate+0x5a>
  40214e:	a201      	add	r2, pc, #4	; (adr r2, 402154 <osc_get_rate+0x14>)
  402150:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  402154:	00402175 	.word	0x00402175
  402158:	0040217b 	.word	0x0040217b
  40215c:	00402181 	.word	0x00402181
  402160:	00402187 	.word	0x00402187
  402164:	0040218b 	.word	0x0040218b
  402168:	0040218f 	.word	0x0040218f
  40216c:	00402193 	.word	0x00402193
  402170:	00402197 	.word	0x00402197
		return OSC_SLCK_32K_RC_HZ;
  402174:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  402178:	e010      	b.n	40219c <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
  40217a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  40217e:	e00d      	b.n	40219c <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
  402180:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  402184:	e00a      	b.n	40219c <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
  402186:	4b08      	ldr	r3, [pc, #32]	; (4021a8 <osc_get_rate+0x68>)
  402188:	e008      	b.n	40219c <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
  40218a:	4b08      	ldr	r3, [pc, #32]	; (4021ac <osc_get_rate+0x6c>)
  40218c:	e006      	b.n	40219c <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
  40218e:	4b08      	ldr	r3, [pc, #32]	; (4021b0 <osc_get_rate+0x70>)
  402190:	e004      	b.n	40219c <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
  402192:	4b07      	ldr	r3, [pc, #28]	; (4021b0 <osc_get_rate+0x70>)
  402194:	e002      	b.n	40219c <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
  402196:	4b06      	ldr	r3, [pc, #24]	; (4021b0 <osc_get_rate+0x70>)
  402198:	e000      	b.n	40219c <osc_get_rate+0x5c>
	return 0;
  40219a:	2300      	movs	r3, #0
}
  40219c:	4618      	mov	r0, r3
  40219e:	370c      	adds	r7, #12
  4021a0:	46bd      	mov	sp, r7
  4021a2:	bc80      	pop	{r7}
  4021a4:	4770      	bx	lr
  4021a6:	bf00      	nop
  4021a8:	003d0900 	.word	0x003d0900
  4021ac:	007a1200 	.word	0x007a1200
  4021b0:	00b71b00 	.word	0x00b71b00

004021b4 <sysclk_get_main_hz>:
{
  4021b4:	b580      	push	{r7, lr}
  4021b6:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
  4021b8:	2006      	movs	r0, #6
  4021ba:	4b04      	ldr	r3, [pc, #16]	; (4021cc <sysclk_get_main_hz+0x18>)
  4021bc:	4798      	blx	r3
  4021be:	4602      	mov	r2, r0
  4021c0:	4613      	mov	r3, r2
  4021c2:	009b      	lsls	r3, r3, #2
  4021c4:	4413      	add	r3, r2
  4021c6:	009b      	lsls	r3, r3, #2
}
  4021c8:	4618      	mov	r0, r3
  4021ca:	bd80      	pop	{r7, pc}
  4021cc:	00402141 	.word	0x00402141

004021d0 <sysclk_get_cpu_hz>:
{
  4021d0:	b580      	push	{r7, lr}
  4021d2:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
  4021d4:	4b02      	ldr	r3, [pc, #8]	; (4021e0 <sysclk_get_cpu_hz+0x10>)
  4021d6:	4798      	blx	r3
  4021d8:	4603      	mov	r3, r0
  4021da:	085b      	lsrs	r3, r3, #1
}
  4021dc:	4618      	mov	r0, r3
  4021de:	bd80      	pop	{r7, pc}
  4021e0:	004021b5 	.word	0x004021b5

004021e4 <main>:
// Global variables because 2/3 of us are mechanical engineers and that's just how we roll
volatile uint32_t receivedMessage;


int main (void)
{
  4021e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4021e8:	b089      	sub	sp, #36	; 0x24
  4021ea:	af00      	add	r7, sp, #0
	// boilerplate
	sysclk_init();
  4021ec:	4b50      	ldr	r3, [pc, #320]	; (402330 <main+0x14c>)
  4021ee:	4798      	blx	r3
	wdt_disable(WDT);
  4021f0:	4850      	ldr	r0, [pc, #320]	; (402334 <main+0x150>)
  4021f2:	4b51      	ldr	r3, [pc, #324]	; (402338 <main+0x154>)
  4021f4:	4798      	blx	r3
	board_init();
  4021f6:	4b51      	ldr	r3, [pc, #324]	; (40233c <main+0x158>)
  4021f8:	4798      	blx	r3
	
	
	// start the clock that counts the seconds
	configure_tc();
  4021fa:	4b51      	ldr	r3, [pc, #324]	; (402340 <main+0x15c>)
  4021fc:	4798      	blx	r3
	tc_start(TC0, 0);
  4021fe:	2100      	movs	r1, #0
  402200:	4850      	ldr	r0, [pc, #320]	; (402344 <main+0x160>)
  402202:	4b51      	ldr	r3, [pc, #324]	; (402348 <main+0x164>)
  402204:	4798      	blx	r3

	// Configure the Wifi UART communication stuff
	configure_usart_wifi();
  402206:	4b51      	ldr	r3, [pc, #324]	; (40234c <main+0x168>)
  402208:	4798      	blx	r3
	configure_wifi_comm_pin();
  40220a:	4b51      	ldr	r3, [pc, #324]	; (402350 <main+0x16c>)
  40220c:	4798      	blx	r3
	configure_wifi_web_setup_pin();
  40220e:	4b51      	ldr	r3, [pc, #324]	; (402354 <main+0x170>)
  402210:	4798      	blx	r3
	// Configure the Wifi programming communication stuff
	//configure_usart_programmer();
	//configure_programmer_interfacePins();
	
	// Reset the wifi
	resetWifi();
  402212:	4b51      	ldr	r3, [pc, #324]	; (402358 <main+0x174>)
  402214:	4798      	blx	r3
	delay_ms(8000);
  402216:	4b51      	ldr	r3, [pc, #324]	; (40235c <main+0x178>)
  402218:	4798      	blx	r3
  40221a:	4603      	mov	r3, r0
  40221c:	4619      	mov	r1, r3
  40221e:	f04f 0200 	mov.w	r2, #0
  402222:	460b      	mov	r3, r1
  402224:	4614      	mov	r4, r2
  402226:	0166      	lsls	r6, r4, #5
  402228:	ea46 66d3 	orr.w	r6, r6, r3, lsr #27
  40222c:	015d      	lsls	r5, r3, #5
  40222e:	462b      	mov	r3, r5
  402230:	4634      	mov	r4, r6
  402232:	1a5b      	subs	r3, r3, r1
  402234:	eb64 0402 	sbc.w	r4, r4, r2
  402238:	ea4f 0984 	mov.w	r9, r4, lsl #2
  40223c:	ea49 7993 	orr.w	r9, r9, r3, lsr #30
  402240:	ea4f 0883 	mov.w	r8, r3, lsl #2
  402244:	4643      	mov	r3, r8
  402246:	464c      	mov	r4, r9
  402248:	185b      	adds	r3, r3, r1
  40224a:	eb44 0402 	adc.w	r4, r4, r2
  40224e:	ea4f 1b84 	mov.w	fp, r4, lsl #6
  402252:	ea4b 6b93 	orr.w	fp, fp, r3, lsr #26
  402256:	ea4f 1a83 	mov.w	sl, r3, lsl #6
  40225a:	4653      	mov	r3, sl
  40225c:	465c      	mov	r4, fp
  40225e:	4619      	mov	r1, r3
  402260:	4622      	mov	r2, r4
  402262:	f243 63af 	movw	r3, #13999	; 0x36af
  402266:	f04f 0400 	mov.w	r4, #0
  40226a:	18cd      	adds	r5, r1, r3
  40226c:	eb42 0604 	adc.w	r6, r2, r4
  402270:	4628      	mov	r0, r5
  402272:	4631      	mov	r1, r6
  402274:	4c3a      	ldr	r4, [pc, #232]	; (402360 <main+0x17c>)
  402276:	f243 62b0 	movw	r2, #14000	; 0x36b0
  40227a:	f04f 0300 	mov.w	r3, #0
  40227e:	47a0      	blx	r4
  402280:	4603      	mov	r3, r0
  402282:	460c      	mov	r4, r1
  402284:	4618      	mov	r0, r3
  402286:	4b37      	ldr	r3, [pc, #220]	; (402364 <main+0x180>)
  402288:	4798      	blx	r3
		// If GoFile says go, then do things, otherwise wait
		//if(checkGoFile()){
		if(1){
			//Load_Hex_File();
			//Clear_Target();
			Parse_Program();
  40228a:	4b37      	ldr	r3, [pc, #220]	; (402368 <main+0x184>)
  40228c:	4798      	blx	r3
			
		}
		else{
			delay_ms(5000);
		}
		delay_ms(5000);///xxxxxxxxxxxxxxxxxxxxxDELETE_MExxxxxxxxxxxxx
  40228e:	4b33      	ldr	r3, [pc, #204]	; (40235c <main+0x178>)
  402290:	4798      	blx	r3
  402292:	4603      	mov	r3, r0
  402294:	4619      	mov	r1, r3
  402296:	f04f 0200 	mov.w	r2, #0
  40229a:	460b      	mov	r3, r1
  40229c:	4614      	mov	r4, r2
  40229e:	00a0      	lsls	r0, r4, #2
  4022a0:	61f8      	str	r0, [r7, #28]
  4022a2:	69f8      	ldr	r0, [r7, #28]
  4022a4:	ea40 7093 	orr.w	r0, r0, r3, lsr #30
  4022a8:	61f8      	str	r0, [r7, #28]
  4022aa:	009b      	lsls	r3, r3, #2
  4022ac:	61bb      	str	r3, [r7, #24]
  4022ae:	e9d7 3406 	ldrd	r3, r4, [r7, #24]
  4022b2:	185b      	adds	r3, r3, r1
  4022b4:	eb44 0402 	adc.w	r4, r4, r2
  4022b8:	00e0      	lsls	r0, r4, #3
  4022ba:	6178      	str	r0, [r7, #20]
  4022bc:	6978      	ldr	r0, [r7, #20]
  4022be:	ea40 7053 	orr.w	r0, r0, r3, lsr #29
  4022c2:	6178      	str	r0, [r7, #20]
  4022c4:	00db      	lsls	r3, r3, #3
  4022c6:	613b      	str	r3, [r7, #16]
  4022c8:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
  4022cc:	1a5b      	subs	r3, r3, r1
  4022ce:	eb64 0402 	sbc.w	r4, r4, r2
  4022d2:	0120      	lsls	r0, r4, #4
  4022d4:	60f8      	str	r0, [r7, #12]
  4022d6:	68f8      	ldr	r0, [r7, #12]
  4022d8:	ea40 7013 	orr.w	r0, r0, r3, lsr #28
  4022dc:	60f8      	str	r0, [r7, #12]
  4022de:	011b      	lsls	r3, r3, #4
  4022e0:	60bb      	str	r3, [r7, #8]
  4022e2:	e9d7 3402 	ldrd	r3, r4, [r7, #8]
  4022e6:	185b      	adds	r3, r3, r1
  4022e8:	eb44 0402 	adc.w	r4, r4, r2
  4022ec:	00e2      	lsls	r2, r4, #3
  4022ee:	607a      	str	r2, [r7, #4]
  4022f0:	687a      	ldr	r2, [r7, #4]
  4022f2:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
  4022f6:	607a      	str	r2, [r7, #4]
  4022f8:	00db      	lsls	r3, r3, #3
  4022fa:	603b      	str	r3, [r7, #0]
  4022fc:	e9d7 3400 	ldrd	r3, r4, [r7]
  402300:	4619      	mov	r1, r3
  402302:	4622      	mov	r2, r4
  402304:	f243 63af 	movw	r3, #13999	; 0x36af
  402308:	f04f 0400 	mov.w	r4, #0
  40230c:	18cd      	adds	r5, r1, r3
  40230e:	eb42 0604 	adc.w	r6, r2, r4
  402312:	4628      	mov	r0, r5
  402314:	4631      	mov	r1, r6
  402316:	4c12      	ldr	r4, [pc, #72]	; (402360 <main+0x17c>)
  402318:	f243 62b0 	movw	r2, #14000	; 0x36b0
  40231c:	f04f 0300 	mov.w	r3, #0
  402320:	47a0      	blx	r4
  402322:	4603      	mov	r3, r0
  402324:	460c      	mov	r4, r1
  402326:	4618      	mov	r0, r3
  402328:	4b0e      	ldr	r3, [pc, #56]	; (402364 <main+0x180>)
  40232a:	4798      	blx	r3
		if(1){
  40232c:	e7ad      	b.n	40228a <main+0xa6>
  40232e:	bf00      	nop
  402330:	004012f1 	.word	0x004012f1
  402334:	400e1450 	.word	0x400e1450
  402338:	004005d5 	.word	0x004005d5
  40233c:	00401dad 	.word	0x00401dad
  402340:	0040095d 	.word	0x0040095d
  402344:	40010000 	.word	0x40010000
  402348:	00401b59 	.word	0x00401b59
  40234c:	00400d5d 	.word	0x00400d5d
  402350:	00400e25 	.word	0x00400e25
  402354:	00400e85 	.word	0x00400e85
  402358:	00400edd 	.word	0x00400edd
  40235c:	004021d1 	.word	0x004021d1
  402360:	0040236d 	.word	0x0040236d
  402364:	20000001 	.word	0x20000001
  402368:	004006b1 	.word	0x004006b1

0040236c <__aeabi_uldivmod>:
  40236c:	b953      	cbnz	r3, 402384 <__aeabi_uldivmod+0x18>
  40236e:	b94a      	cbnz	r2, 402384 <__aeabi_uldivmod+0x18>
  402370:	2900      	cmp	r1, #0
  402372:	bf08      	it	eq
  402374:	2800      	cmpeq	r0, #0
  402376:	bf1c      	itt	ne
  402378:	f04f 31ff 	movne.w	r1, #4294967295
  40237c:	f04f 30ff 	movne.w	r0, #4294967295
  402380:	f000 b97a 	b.w	402678 <__aeabi_idiv0>
  402384:	f1ad 0c08 	sub.w	ip, sp, #8
  402388:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  40238c:	f000 f806 	bl	40239c <__udivmoddi4>
  402390:	f8dd e004 	ldr.w	lr, [sp, #4]
  402394:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  402398:	b004      	add	sp, #16
  40239a:	4770      	bx	lr

0040239c <__udivmoddi4>:
  40239c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4023a0:	468c      	mov	ip, r1
  4023a2:	460d      	mov	r5, r1
  4023a4:	4604      	mov	r4, r0
  4023a6:	9e08      	ldr	r6, [sp, #32]
  4023a8:	2b00      	cmp	r3, #0
  4023aa:	d151      	bne.n	402450 <__udivmoddi4+0xb4>
  4023ac:	428a      	cmp	r2, r1
  4023ae:	4617      	mov	r7, r2
  4023b0:	d96d      	bls.n	40248e <__udivmoddi4+0xf2>
  4023b2:	fab2 fe82 	clz	lr, r2
  4023b6:	f1be 0f00 	cmp.w	lr, #0
  4023ba:	d00b      	beq.n	4023d4 <__udivmoddi4+0x38>
  4023bc:	f1ce 0c20 	rsb	ip, lr, #32
  4023c0:	fa01 f50e 	lsl.w	r5, r1, lr
  4023c4:	fa20 fc0c 	lsr.w	ip, r0, ip
  4023c8:	fa02 f70e 	lsl.w	r7, r2, lr
  4023cc:	ea4c 0c05 	orr.w	ip, ip, r5
  4023d0:	fa00 f40e 	lsl.w	r4, r0, lr
  4023d4:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  4023d8:	0c25      	lsrs	r5, r4, #16
  4023da:	fbbc f8fa 	udiv	r8, ip, sl
  4023de:	fa1f f987 	uxth.w	r9, r7
  4023e2:	fb0a cc18 	mls	ip, sl, r8, ip
  4023e6:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  4023ea:	fb08 f309 	mul.w	r3, r8, r9
  4023ee:	42ab      	cmp	r3, r5
  4023f0:	d90a      	bls.n	402408 <__udivmoddi4+0x6c>
  4023f2:	19ed      	adds	r5, r5, r7
  4023f4:	f108 32ff 	add.w	r2, r8, #4294967295
  4023f8:	f080 8123 	bcs.w	402642 <__udivmoddi4+0x2a6>
  4023fc:	42ab      	cmp	r3, r5
  4023fe:	f240 8120 	bls.w	402642 <__udivmoddi4+0x2a6>
  402402:	f1a8 0802 	sub.w	r8, r8, #2
  402406:	443d      	add	r5, r7
  402408:	1aed      	subs	r5, r5, r3
  40240a:	b2a4      	uxth	r4, r4
  40240c:	fbb5 f0fa 	udiv	r0, r5, sl
  402410:	fb0a 5510 	mls	r5, sl, r0, r5
  402414:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  402418:	fb00 f909 	mul.w	r9, r0, r9
  40241c:	45a1      	cmp	r9, r4
  40241e:	d909      	bls.n	402434 <__udivmoddi4+0x98>
  402420:	19e4      	adds	r4, r4, r7
  402422:	f100 33ff 	add.w	r3, r0, #4294967295
  402426:	f080 810a 	bcs.w	40263e <__udivmoddi4+0x2a2>
  40242a:	45a1      	cmp	r9, r4
  40242c:	f240 8107 	bls.w	40263e <__udivmoddi4+0x2a2>
  402430:	3802      	subs	r0, #2
  402432:	443c      	add	r4, r7
  402434:	eba4 0409 	sub.w	r4, r4, r9
  402438:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  40243c:	2100      	movs	r1, #0
  40243e:	2e00      	cmp	r6, #0
  402440:	d061      	beq.n	402506 <__udivmoddi4+0x16a>
  402442:	fa24 f40e 	lsr.w	r4, r4, lr
  402446:	2300      	movs	r3, #0
  402448:	6034      	str	r4, [r6, #0]
  40244a:	6073      	str	r3, [r6, #4]
  40244c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  402450:	428b      	cmp	r3, r1
  402452:	d907      	bls.n	402464 <__udivmoddi4+0xc8>
  402454:	2e00      	cmp	r6, #0
  402456:	d054      	beq.n	402502 <__udivmoddi4+0x166>
  402458:	2100      	movs	r1, #0
  40245a:	e886 0021 	stmia.w	r6, {r0, r5}
  40245e:	4608      	mov	r0, r1
  402460:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  402464:	fab3 f183 	clz	r1, r3
  402468:	2900      	cmp	r1, #0
  40246a:	f040 808e 	bne.w	40258a <__udivmoddi4+0x1ee>
  40246e:	42ab      	cmp	r3, r5
  402470:	d302      	bcc.n	402478 <__udivmoddi4+0xdc>
  402472:	4282      	cmp	r2, r0
  402474:	f200 80fa 	bhi.w	40266c <__udivmoddi4+0x2d0>
  402478:	1a84      	subs	r4, r0, r2
  40247a:	eb65 0503 	sbc.w	r5, r5, r3
  40247e:	2001      	movs	r0, #1
  402480:	46ac      	mov	ip, r5
  402482:	2e00      	cmp	r6, #0
  402484:	d03f      	beq.n	402506 <__udivmoddi4+0x16a>
  402486:	e886 1010 	stmia.w	r6, {r4, ip}
  40248a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40248e:	b912      	cbnz	r2, 402496 <__udivmoddi4+0xfa>
  402490:	2701      	movs	r7, #1
  402492:	fbb7 f7f2 	udiv	r7, r7, r2
  402496:	fab7 fe87 	clz	lr, r7
  40249a:	f1be 0f00 	cmp.w	lr, #0
  40249e:	d134      	bne.n	40250a <__udivmoddi4+0x16e>
  4024a0:	1beb      	subs	r3, r5, r7
  4024a2:	0c3a      	lsrs	r2, r7, #16
  4024a4:	fa1f fc87 	uxth.w	ip, r7
  4024a8:	2101      	movs	r1, #1
  4024aa:	fbb3 f8f2 	udiv	r8, r3, r2
  4024ae:	0c25      	lsrs	r5, r4, #16
  4024b0:	fb02 3318 	mls	r3, r2, r8, r3
  4024b4:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4024b8:	fb0c f308 	mul.w	r3, ip, r8
  4024bc:	42ab      	cmp	r3, r5
  4024be:	d907      	bls.n	4024d0 <__udivmoddi4+0x134>
  4024c0:	19ed      	adds	r5, r5, r7
  4024c2:	f108 30ff 	add.w	r0, r8, #4294967295
  4024c6:	d202      	bcs.n	4024ce <__udivmoddi4+0x132>
  4024c8:	42ab      	cmp	r3, r5
  4024ca:	f200 80d1 	bhi.w	402670 <__udivmoddi4+0x2d4>
  4024ce:	4680      	mov	r8, r0
  4024d0:	1aed      	subs	r5, r5, r3
  4024d2:	b2a3      	uxth	r3, r4
  4024d4:	fbb5 f0f2 	udiv	r0, r5, r2
  4024d8:	fb02 5510 	mls	r5, r2, r0, r5
  4024dc:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  4024e0:	fb0c fc00 	mul.w	ip, ip, r0
  4024e4:	45a4      	cmp	ip, r4
  4024e6:	d907      	bls.n	4024f8 <__udivmoddi4+0x15c>
  4024e8:	19e4      	adds	r4, r4, r7
  4024ea:	f100 33ff 	add.w	r3, r0, #4294967295
  4024ee:	d202      	bcs.n	4024f6 <__udivmoddi4+0x15a>
  4024f0:	45a4      	cmp	ip, r4
  4024f2:	f200 80b8 	bhi.w	402666 <__udivmoddi4+0x2ca>
  4024f6:	4618      	mov	r0, r3
  4024f8:	eba4 040c 	sub.w	r4, r4, ip
  4024fc:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  402500:	e79d      	b.n	40243e <__udivmoddi4+0xa2>
  402502:	4631      	mov	r1, r6
  402504:	4630      	mov	r0, r6
  402506:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40250a:	f1ce 0420 	rsb	r4, lr, #32
  40250e:	fa05 f30e 	lsl.w	r3, r5, lr
  402512:	fa07 f70e 	lsl.w	r7, r7, lr
  402516:	fa20 f804 	lsr.w	r8, r0, r4
  40251a:	0c3a      	lsrs	r2, r7, #16
  40251c:	fa25 f404 	lsr.w	r4, r5, r4
  402520:	ea48 0803 	orr.w	r8, r8, r3
  402524:	fbb4 f1f2 	udiv	r1, r4, r2
  402528:	ea4f 4518 	mov.w	r5, r8, lsr #16
  40252c:	fb02 4411 	mls	r4, r2, r1, r4
  402530:	fa1f fc87 	uxth.w	ip, r7
  402534:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  402538:	fb01 f30c 	mul.w	r3, r1, ip
  40253c:	42ab      	cmp	r3, r5
  40253e:	fa00 f40e 	lsl.w	r4, r0, lr
  402542:	d909      	bls.n	402558 <__udivmoddi4+0x1bc>
  402544:	19ed      	adds	r5, r5, r7
  402546:	f101 30ff 	add.w	r0, r1, #4294967295
  40254a:	f080 808a 	bcs.w	402662 <__udivmoddi4+0x2c6>
  40254e:	42ab      	cmp	r3, r5
  402550:	f240 8087 	bls.w	402662 <__udivmoddi4+0x2c6>
  402554:	3902      	subs	r1, #2
  402556:	443d      	add	r5, r7
  402558:	1aeb      	subs	r3, r5, r3
  40255a:	fa1f f588 	uxth.w	r5, r8
  40255e:	fbb3 f0f2 	udiv	r0, r3, r2
  402562:	fb02 3310 	mls	r3, r2, r0, r3
  402566:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40256a:	fb00 f30c 	mul.w	r3, r0, ip
  40256e:	42ab      	cmp	r3, r5
  402570:	d907      	bls.n	402582 <__udivmoddi4+0x1e6>
  402572:	19ed      	adds	r5, r5, r7
  402574:	f100 38ff 	add.w	r8, r0, #4294967295
  402578:	d26f      	bcs.n	40265a <__udivmoddi4+0x2be>
  40257a:	42ab      	cmp	r3, r5
  40257c:	d96d      	bls.n	40265a <__udivmoddi4+0x2be>
  40257e:	3802      	subs	r0, #2
  402580:	443d      	add	r5, r7
  402582:	1aeb      	subs	r3, r5, r3
  402584:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  402588:	e78f      	b.n	4024aa <__udivmoddi4+0x10e>
  40258a:	f1c1 0720 	rsb	r7, r1, #32
  40258e:	fa22 f807 	lsr.w	r8, r2, r7
  402592:	408b      	lsls	r3, r1
  402594:	fa05 f401 	lsl.w	r4, r5, r1
  402598:	ea48 0303 	orr.w	r3, r8, r3
  40259c:	fa20 fe07 	lsr.w	lr, r0, r7
  4025a0:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  4025a4:	40fd      	lsrs	r5, r7
  4025a6:	ea4e 0e04 	orr.w	lr, lr, r4
  4025aa:	fbb5 f9fc 	udiv	r9, r5, ip
  4025ae:	ea4f 441e 	mov.w	r4, lr, lsr #16
  4025b2:	fb0c 5519 	mls	r5, ip, r9, r5
  4025b6:	fa1f f883 	uxth.w	r8, r3
  4025ba:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  4025be:	fb09 f408 	mul.w	r4, r9, r8
  4025c2:	42ac      	cmp	r4, r5
  4025c4:	fa02 f201 	lsl.w	r2, r2, r1
  4025c8:	fa00 fa01 	lsl.w	sl, r0, r1
  4025cc:	d908      	bls.n	4025e0 <__udivmoddi4+0x244>
  4025ce:	18ed      	adds	r5, r5, r3
  4025d0:	f109 30ff 	add.w	r0, r9, #4294967295
  4025d4:	d243      	bcs.n	40265e <__udivmoddi4+0x2c2>
  4025d6:	42ac      	cmp	r4, r5
  4025d8:	d941      	bls.n	40265e <__udivmoddi4+0x2c2>
  4025da:	f1a9 0902 	sub.w	r9, r9, #2
  4025de:	441d      	add	r5, r3
  4025e0:	1b2d      	subs	r5, r5, r4
  4025e2:	fa1f fe8e 	uxth.w	lr, lr
  4025e6:	fbb5 f0fc 	udiv	r0, r5, ip
  4025ea:	fb0c 5510 	mls	r5, ip, r0, r5
  4025ee:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4025f2:	fb00 f808 	mul.w	r8, r0, r8
  4025f6:	45a0      	cmp	r8, r4
  4025f8:	d907      	bls.n	40260a <__udivmoddi4+0x26e>
  4025fa:	18e4      	adds	r4, r4, r3
  4025fc:	f100 35ff 	add.w	r5, r0, #4294967295
  402600:	d229      	bcs.n	402656 <__udivmoddi4+0x2ba>
  402602:	45a0      	cmp	r8, r4
  402604:	d927      	bls.n	402656 <__udivmoddi4+0x2ba>
  402606:	3802      	subs	r0, #2
  402608:	441c      	add	r4, r3
  40260a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  40260e:	eba4 0408 	sub.w	r4, r4, r8
  402612:	fba0 8902 	umull	r8, r9, r0, r2
  402616:	454c      	cmp	r4, r9
  402618:	46c6      	mov	lr, r8
  40261a:	464d      	mov	r5, r9
  40261c:	d315      	bcc.n	40264a <__udivmoddi4+0x2ae>
  40261e:	d012      	beq.n	402646 <__udivmoddi4+0x2aa>
  402620:	b156      	cbz	r6, 402638 <__udivmoddi4+0x29c>
  402622:	ebba 030e 	subs.w	r3, sl, lr
  402626:	eb64 0405 	sbc.w	r4, r4, r5
  40262a:	fa04 f707 	lsl.w	r7, r4, r7
  40262e:	40cb      	lsrs	r3, r1
  402630:	431f      	orrs	r7, r3
  402632:	40cc      	lsrs	r4, r1
  402634:	6037      	str	r7, [r6, #0]
  402636:	6074      	str	r4, [r6, #4]
  402638:	2100      	movs	r1, #0
  40263a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40263e:	4618      	mov	r0, r3
  402640:	e6f8      	b.n	402434 <__udivmoddi4+0x98>
  402642:	4690      	mov	r8, r2
  402644:	e6e0      	b.n	402408 <__udivmoddi4+0x6c>
  402646:	45c2      	cmp	sl, r8
  402648:	d2ea      	bcs.n	402620 <__udivmoddi4+0x284>
  40264a:	ebb8 0e02 	subs.w	lr, r8, r2
  40264e:	eb69 0503 	sbc.w	r5, r9, r3
  402652:	3801      	subs	r0, #1
  402654:	e7e4      	b.n	402620 <__udivmoddi4+0x284>
  402656:	4628      	mov	r0, r5
  402658:	e7d7      	b.n	40260a <__udivmoddi4+0x26e>
  40265a:	4640      	mov	r0, r8
  40265c:	e791      	b.n	402582 <__udivmoddi4+0x1e6>
  40265e:	4681      	mov	r9, r0
  402660:	e7be      	b.n	4025e0 <__udivmoddi4+0x244>
  402662:	4601      	mov	r1, r0
  402664:	e778      	b.n	402558 <__udivmoddi4+0x1bc>
  402666:	3802      	subs	r0, #2
  402668:	443c      	add	r4, r7
  40266a:	e745      	b.n	4024f8 <__udivmoddi4+0x15c>
  40266c:	4608      	mov	r0, r1
  40266e:	e708      	b.n	402482 <__udivmoddi4+0xe6>
  402670:	f1a8 0802 	sub.w	r8, r8, #2
  402674:	443d      	add	r5, r7
  402676:	e72b      	b.n	4024d0 <__udivmoddi4+0x134>

00402678 <__aeabi_idiv0>:
  402678:	4770      	bx	lr
  40267a:	bf00      	nop

0040267c <__libc_init_array>:
  40267c:	b570      	push	{r4, r5, r6, lr}
  40267e:	4e0f      	ldr	r6, [pc, #60]	; (4026bc <__libc_init_array+0x40>)
  402680:	4d0f      	ldr	r5, [pc, #60]	; (4026c0 <__libc_init_array+0x44>)
  402682:	1b76      	subs	r6, r6, r5
  402684:	10b6      	asrs	r6, r6, #2
  402686:	bf18      	it	ne
  402688:	2400      	movne	r4, #0
  40268a:	d005      	beq.n	402698 <__libc_init_array+0x1c>
  40268c:	3401      	adds	r4, #1
  40268e:	f855 3b04 	ldr.w	r3, [r5], #4
  402692:	4798      	blx	r3
  402694:	42a6      	cmp	r6, r4
  402696:	d1f9      	bne.n	40268c <__libc_init_array+0x10>
  402698:	4e0a      	ldr	r6, [pc, #40]	; (4026c4 <__libc_init_array+0x48>)
  40269a:	4d0b      	ldr	r5, [pc, #44]	; (4026c8 <__libc_init_array+0x4c>)
  40269c:	1b76      	subs	r6, r6, r5
  40269e:	f005 f85b 	bl	407758 <_init>
  4026a2:	10b6      	asrs	r6, r6, #2
  4026a4:	bf18      	it	ne
  4026a6:	2400      	movne	r4, #0
  4026a8:	d006      	beq.n	4026b8 <__libc_init_array+0x3c>
  4026aa:	3401      	adds	r4, #1
  4026ac:	f855 3b04 	ldr.w	r3, [r5], #4
  4026b0:	4798      	blx	r3
  4026b2:	42a6      	cmp	r6, r4
  4026b4:	d1f9      	bne.n	4026aa <__libc_init_array+0x2e>
  4026b6:	bd70      	pop	{r4, r5, r6, pc}
  4026b8:	bd70      	pop	{r4, r5, r6, pc}
  4026ba:	bf00      	nop
  4026bc:	00407764 	.word	0x00407764
  4026c0:	00407764 	.word	0x00407764
  4026c4:	0040776c 	.word	0x0040776c
  4026c8:	00407764 	.word	0x00407764

004026cc <memset>:
  4026cc:	b470      	push	{r4, r5, r6}
  4026ce:	0786      	lsls	r6, r0, #30
  4026d0:	d046      	beq.n	402760 <memset+0x94>
  4026d2:	1e54      	subs	r4, r2, #1
  4026d4:	2a00      	cmp	r2, #0
  4026d6:	d041      	beq.n	40275c <memset+0x90>
  4026d8:	b2ca      	uxtb	r2, r1
  4026da:	4603      	mov	r3, r0
  4026dc:	e002      	b.n	4026e4 <memset+0x18>
  4026de:	f114 34ff 	adds.w	r4, r4, #4294967295
  4026e2:	d33b      	bcc.n	40275c <memset+0x90>
  4026e4:	f803 2b01 	strb.w	r2, [r3], #1
  4026e8:	079d      	lsls	r5, r3, #30
  4026ea:	d1f8      	bne.n	4026de <memset+0x12>
  4026ec:	2c03      	cmp	r4, #3
  4026ee:	d92e      	bls.n	40274e <memset+0x82>
  4026f0:	b2cd      	uxtb	r5, r1
  4026f2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4026f6:	2c0f      	cmp	r4, #15
  4026f8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4026fc:	d919      	bls.n	402732 <memset+0x66>
  4026fe:	f103 0210 	add.w	r2, r3, #16
  402702:	4626      	mov	r6, r4
  402704:	3e10      	subs	r6, #16
  402706:	2e0f      	cmp	r6, #15
  402708:	f842 5c10 	str.w	r5, [r2, #-16]
  40270c:	f842 5c0c 	str.w	r5, [r2, #-12]
  402710:	f842 5c08 	str.w	r5, [r2, #-8]
  402714:	f842 5c04 	str.w	r5, [r2, #-4]
  402718:	f102 0210 	add.w	r2, r2, #16
  40271c:	d8f2      	bhi.n	402704 <memset+0x38>
  40271e:	f1a4 0210 	sub.w	r2, r4, #16
  402722:	f022 020f 	bic.w	r2, r2, #15
  402726:	f004 040f 	and.w	r4, r4, #15
  40272a:	3210      	adds	r2, #16
  40272c:	2c03      	cmp	r4, #3
  40272e:	4413      	add	r3, r2
  402730:	d90d      	bls.n	40274e <memset+0x82>
  402732:	461e      	mov	r6, r3
  402734:	4622      	mov	r2, r4
  402736:	3a04      	subs	r2, #4
  402738:	2a03      	cmp	r2, #3
  40273a:	f846 5b04 	str.w	r5, [r6], #4
  40273e:	d8fa      	bhi.n	402736 <memset+0x6a>
  402740:	1f22      	subs	r2, r4, #4
  402742:	f022 0203 	bic.w	r2, r2, #3
  402746:	3204      	adds	r2, #4
  402748:	4413      	add	r3, r2
  40274a:	f004 0403 	and.w	r4, r4, #3
  40274e:	b12c      	cbz	r4, 40275c <memset+0x90>
  402750:	b2c9      	uxtb	r1, r1
  402752:	441c      	add	r4, r3
  402754:	f803 1b01 	strb.w	r1, [r3], #1
  402758:	429c      	cmp	r4, r3
  40275a:	d1fb      	bne.n	402754 <memset+0x88>
  40275c:	bc70      	pop	{r4, r5, r6}
  40275e:	4770      	bx	lr
  402760:	4614      	mov	r4, r2
  402762:	4603      	mov	r3, r0
  402764:	e7c2      	b.n	4026ec <memset+0x20>
  402766:	bf00      	nop

00402768 <sprintf>:
  402768:	b40e      	push	{r1, r2, r3}
  40276a:	b5f0      	push	{r4, r5, r6, r7, lr}
  40276c:	b09c      	sub	sp, #112	; 0x70
  40276e:	ab21      	add	r3, sp, #132	; 0x84
  402770:	490f      	ldr	r1, [pc, #60]	; (4027b0 <sprintf+0x48>)
  402772:	f853 2b04 	ldr.w	r2, [r3], #4
  402776:	9301      	str	r3, [sp, #4]
  402778:	4605      	mov	r5, r0
  40277a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  40277e:	6808      	ldr	r0, [r1, #0]
  402780:	9502      	str	r5, [sp, #8]
  402782:	f44f 7702 	mov.w	r7, #520	; 0x208
  402786:	f64f 76ff 	movw	r6, #65535	; 0xffff
  40278a:	a902      	add	r1, sp, #8
  40278c:	9506      	str	r5, [sp, #24]
  40278e:	f8ad 7014 	strh.w	r7, [sp, #20]
  402792:	9404      	str	r4, [sp, #16]
  402794:	9407      	str	r4, [sp, #28]
  402796:	f8ad 6016 	strh.w	r6, [sp, #22]
  40279a:	f000 facd 	bl	402d38 <_svfprintf_r>
  40279e:	9b02      	ldr	r3, [sp, #8]
  4027a0:	2200      	movs	r2, #0
  4027a2:	701a      	strb	r2, [r3, #0]
  4027a4:	b01c      	add	sp, #112	; 0x70
  4027a6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  4027aa:	b003      	add	sp, #12
  4027ac:	4770      	bx	lr
  4027ae:	bf00      	nop
  4027b0:	200061b8 	.word	0x200061b8

004027b4 <strcpy>:
  4027b4:	ea80 0201 	eor.w	r2, r0, r1
  4027b8:	4684      	mov	ip, r0
  4027ba:	f012 0f03 	tst.w	r2, #3
  4027be:	d14f      	bne.n	402860 <strcpy+0xac>
  4027c0:	f011 0f03 	tst.w	r1, #3
  4027c4:	d132      	bne.n	40282c <strcpy+0x78>
  4027c6:	f84d 4d04 	str.w	r4, [sp, #-4]!
  4027ca:	f011 0f04 	tst.w	r1, #4
  4027ce:	f851 3b04 	ldr.w	r3, [r1], #4
  4027d2:	d00b      	beq.n	4027ec <strcpy+0x38>
  4027d4:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  4027d8:	439a      	bics	r2, r3
  4027da:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  4027de:	bf04      	itt	eq
  4027e0:	f84c 3b04 	streq.w	r3, [ip], #4
  4027e4:	f851 3b04 	ldreq.w	r3, [r1], #4
  4027e8:	d116      	bne.n	402818 <strcpy+0x64>
  4027ea:	bf00      	nop
  4027ec:	f851 4b04 	ldr.w	r4, [r1], #4
  4027f0:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  4027f4:	439a      	bics	r2, r3
  4027f6:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  4027fa:	f1a4 3201 	sub.w	r2, r4, #16843009	; 0x1010101
  4027fe:	d10b      	bne.n	402818 <strcpy+0x64>
  402800:	f84c 3b04 	str.w	r3, [ip], #4
  402804:	43a2      	bics	r2, r4
  402806:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  40280a:	bf04      	itt	eq
  40280c:	f851 3b04 	ldreq.w	r3, [r1], #4
  402810:	f84c 4b04 	streq.w	r4, [ip], #4
  402814:	d0ea      	beq.n	4027ec <strcpy+0x38>
  402816:	4623      	mov	r3, r4
  402818:	f80c 3b01 	strb.w	r3, [ip], #1
  40281c:	f013 0fff 	tst.w	r3, #255	; 0xff
  402820:	ea4f 2333 	mov.w	r3, r3, ror #8
  402824:	d1f8      	bne.n	402818 <strcpy+0x64>
  402826:	f85d 4b04 	ldr.w	r4, [sp], #4
  40282a:	4770      	bx	lr
  40282c:	f011 0f01 	tst.w	r1, #1
  402830:	d006      	beq.n	402840 <strcpy+0x8c>
  402832:	f811 2b01 	ldrb.w	r2, [r1], #1
  402836:	f80c 2b01 	strb.w	r2, [ip], #1
  40283a:	2a00      	cmp	r2, #0
  40283c:	bf08      	it	eq
  40283e:	4770      	bxeq	lr
  402840:	f011 0f02 	tst.w	r1, #2
  402844:	d0bf      	beq.n	4027c6 <strcpy+0x12>
  402846:	f831 2b02 	ldrh.w	r2, [r1], #2
  40284a:	f012 0fff 	tst.w	r2, #255	; 0xff
  40284e:	bf16      	itet	ne
  402850:	f82c 2b02 	strhne.w	r2, [ip], #2
  402854:	f88c 2000 	strbeq.w	r2, [ip]
  402858:	f412 4f7f 	tstne.w	r2, #65280	; 0xff00
  40285c:	d1b3      	bne.n	4027c6 <strcpy+0x12>
  40285e:	4770      	bx	lr
  402860:	f811 2b01 	ldrb.w	r2, [r1], #1
  402864:	f80c 2b01 	strb.w	r2, [ip], #1
  402868:	2a00      	cmp	r2, #0
  40286a:	d1f9      	bne.n	402860 <strcpy+0xac>
  40286c:	4770      	bx	lr
  40286e:	bf00      	nop

00402870 <critical_factorization>:
  402870:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402874:	f04f 0e01 	mov.w	lr, #1
  402878:	4674      	mov	r4, lr
  40287a:	2500      	movs	r5, #0
  40287c:	f04f 36ff 	mov.w	r6, #4294967295
  402880:	192b      	adds	r3, r5, r4
  402882:	428b      	cmp	r3, r1
  402884:	eb00 0706 	add.w	r7, r0, r6
  402888:	d20d      	bcs.n	4028a6 <critical_factorization+0x36>
  40288a:	5d3f      	ldrb	r7, [r7, r4]
  40288c:	f810 c003 	ldrb.w	ip, [r0, r3]
  402890:	45bc      	cmp	ip, r7
  402892:	d22d      	bcs.n	4028f0 <critical_factorization+0x80>
  402894:	461d      	mov	r5, r3
  402896:	2401      	movs	r4, #1
  402898:	eba3 0e06 	sub.w	lr, r3, r6
  40289c:	192b      	adds	r3, r5, r4
  40289e:	428b      	cmp	r3, r1
  4028a0:	eb00 0706 	add.w	r7, r0, r6
  4028a4:	d3f1      	bcc.n	40288a <critical_factorization+0x1a>
  4028a6:	f04f 0801 	mov.w	r8, #1
  4028aa:	f8c2 e000 	str.w	lr, [r2]
  4028ae:	4644      	mov	r4, r8
  4028b0:	2500      	movs	r5, #0
  4028b2:	f04f 37ff 	mov.w	r7, #4294967295
  4028b6:	192b      	adds	r3, r5, r4
  4028b8:	4299      	cmp	r1, r3
  4028ba:	eb00 0e07 	add.w	lr, r0, r7
  4028be:	d90e      	bls.n	4028de <critical_factorization+0x6e>
  4028c0:	f81e e004 	ldrb.w	lr, [lr, r4]
  4028c4:	f810 c003 	ldrb.w	ip, [r0, r3]
  4028c8:	45f4      	cmp	ip, lr
  4028ca:	d918      	bls.n	4028fe <critical_factorization+0x8e>
  4028cc:	461d      	mov	r5, r3
  4028ce:	2401      	movs	r4, #1
  4028d0:	eba3 0807 	sub.w	r8, r3, r7
  4028d4:	192b      	adds	r3, r5, r4
  4028d6:	4299      	cmp	r1, r3
  4028d8:	eb00 0e07 	add.w	lr, r0, r7
  4028dc:	d8f0      	bhi.n	4028c0 <critical_factorization+0x50>
  4028de:	3701      	adds	r7, #1
  4028e0:	1c70      	adds	r0, r6, #1
  4028e2:	4287      	cmp	r7, r0
  4028e4:	bf24      	itt	cs
  4028e6:	f8c2 8000 	strcs.w	r8, [r2]
  4028ea:	4638      	movcs	r0, r7
  4028ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4028f0:	d00c      	beq.n	40290c <critical_factorization+0x9c>
  4028f2:	f04f 0e01 	mov.w	lr, #1
  4028f6:	462e      	mov	r6, r5
  4028f8:	4674      	mov	r4, lr
  4028fa:	4475      	add	r5, lr
  4028fc:	e7c0      	b.n	402880 <critical_factorization+0x10>
  4028fe:	d00b      	beq.n	402918 <critical_factorization+0xa8>
  402900:	f04f 0801 	mov.w	r8, #1
  402904:	462f      	mov	r7, r5
  402906:	4644      	mov	r4, r8
  402908:	4445      	add	r5, r8
  40290a:	e7d4      	b.n	4028b6 <critical_factorization+0x46>
  40290c:	4574      	cmp	r4, lr
  40290e:	bf12      	itee	ne
  402910:	3401      	addne	r4, #1
  402912:	461d      	moveq	r5, r3
  402914:	2401      	moveq	r4, #1
  402916:	e7b3      	b.n	402880 <critical_factorization+0x10>
  402918:	4544      	cmp	r4, r8
  40291a:	bf12      	itee	ne
  40291c:	3401      	addne	r4, #1
  40291e:	461d      	moveq	r5, r3
  402920:	2401      	moveq	r4, #1
  402922:	e7c8      	b.n	4028b6 <critical_factorization+0x46>

00402924 <two_way_long_needle>:
  402924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402928:	f2ad 4d14 	subw	sp, sp, #1044	; 0x414
  40292c:	4616      	mov	r6, r2
  40292e:	4605      	mov	r5, r0
  402930:	468b      	mov	fp, r1
  402932:	4610      	mov	r0, r2
  402934:	4619      	mov	r1, r3
  402936:	aa03      	add	r2, sp, #12
  402938:	461c      	mov	r4, r3
  40293a:	f7ff ff99 	bl	402870 <critical_factorization>
  40293e:	ab03      	add	r3, sp, #12
  402940:	4681      	mov	r9, r0
  402942:	f20d 420c 	addw	r2, sp, #1036	; 0x40c
  402946:	f843 4f04 	str.w	r4, [r3, #4]!
  40294a:	4293      	cmp	r3, r2
  40294c:	d1fb      	bne.n	402946 <two_way_long_needle+0x22>
  40294e:	b14c      	cbz	r4, 402964 <two_way_long_needle+0x40>
  402950:	1e63      	subs	r3, r4, #1
  402952:	1e72      	subs	r2, r6, #1
  402954:	a804      	add	r0, sp, #16
  402956:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  40295a:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
  40295e:	f113 33ff 	adds.w	r3, r3, #4294967295
  402962:	d2f8      	bcs.n	402956 <two_way_long_needle+0x32>
  402964:	9903      	ldr	r1, [sp, #12]
  402966:	464a      	mov	r2, r9
  402968:	4431      	add	r1, r6
  40296a:	4630      	mov	r0, r6
  40296c:	f002 ff10 	bl	405790 <memcmp>
  402970:	2800      	cmp	r0, #0
  402972:	d16f      	bne.n	402a54 <two_way_long_needle+0x130>
  402974:	f109 33ff 	add.w	r3, r9, #4294967295
  402978:	9300      	str	r3, [sp, #0]
  40297a:	18f3      	adds	r3, r6, r3
  40297c:	4682      	mov	sl, r0
  40297e:	9301      	str	r3, [sp, #4]
  402980:	4623      	mov	r3, r4
  402982:	4680      	mov	r8, r0
  402984:	4654      	mov	r4, sl
  402986:	4658      	mov	r0, fp
  402988:	469a      	mov	sl, r3
  40298a:	eb08 070a 	add.w	r7, r8, sl
  40298e:	1a3a      	subs	r2, r7, r0
  402990:	2100      	movs	r1, #0
  402992:	4428      	add	r0, r5
  402994:	f002 feac 	bl	4056f0 <memchr>
  402998:	2800      	cmp	r0, #0
  40299a:	d156      	bne.n	402a4a <two_way_long_needle+0x126>
  40299c:	2f00      	cmp	r7, #0
  40299e:	d054      	beq.n	402a4a <two_way_long_needle+0x126>
  4029a0:	19eb      	adds	r3, r5, r7
  4029a2:	aa04      	add	r2, sp, #16
  4029a4:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  4029a8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  4029ac:	b14b      	cbz	r3, 4029c2 <two_way_long_needle+0x9e>
  4029ae:	b124      	cbz	r4, 4029ba <two_way_long_needle+0x96>
  4029b0:	9a03      	ldr	r2, [sp, #12]
  4029b2:	4293      	cmp	r3, r2
  4029b4:	d201      	bcs.n	4029ba <two_way_long_needle+0x96>
  4029b6:	ebaa 0302 	sub.w	r3, sl, r2
  4029ba:	4498      	add	r8, r3
  4029bc:	2400      	movs	r4, #0
  4029be:	4638      	mov	r0, r7
  4029c0:	e7e3      	b.n	40298a <two_way_long_needle+0x66>
  4029c2:	454c      	cmp	r4, r9
  4029c4:	4623      	mov	r3, r4
  4029c6:	f10a 3eff 	add.w	lr, sl, #4294967295
  4029ca:	bf38      	it	cc
  4029cc:	464b      	movcc	r3, r9
  4029ce:	4573      	cmp	r3, lr
  4029d0:	d213      	bcs.n	4029fa <two_way_long_needle+0xd6>
  4029d2:	eb08 0203 	add.w	r2, r8, r3
  4029d6:	f816 c003 	ldrb.w	ip, [r6, r3]
  4029da:	5ca8      	ldrb	r0, [r5, r2]
  4029dc:	4584      	cmp	ip, r0
  4029de:	442a      	add	r2, r5
  4029e0:	eb06 0103 	add.w	r1, r6, r3
  4029e4:	d006      	beq.n	4029f4 <two_way_long_needle+0xd0>
  4029e6:	e02c      	b.n	402a42 <two_way_long_needle+0x11e>
  4029e8:	f811 cf01 	ldrb.w	ip, [r1, #1]!
  4029ec:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  4029f0:	4584      	cmp	ip, r0
  4029f2:	d126      	bne.n	402a42 <two_way_long_needle+0x11e>
  4029f4:	3301      	adds	r3, #1
  4029f6:	4573      	cmp	r3, lr
  4029f8:	d3f6      	bcc.n	4029e8 <two_way_long_needle+0xc4>
  4029fa:	454c      	cmp	r4, r9
  4029fc:	9900      	ldr	r1, [sp, #0]
  4029fe:	f080 8089 	bcs.w	402b14 <two_way_long_needle+0x1f0>
  402a02:	9b00      	ldr	r3, [sp, #0]
  402a04:	eb08 0203 	add.w	r2, r8, r3
  402a08:	9b01      	ldr	r3, [sp, #4]
  402a0a:	5ca8      	ldrb	r0, [r5, r2]
  402a0c:	781b      	ldrb	r3, [r3, #0]
  402a0e:	4298      	cmp	r0, r3
  402a10:	442a      	add	r2, r5
  402a12:	d17f      	bne.n	402b14 <two_way_long_needle+0x1f0>
  402a14:	9801      	ldr	r0, [sp, #4]
  402a16:	f104 3bff 	add.w	fp, r4, #4294967295
  402a1a:	e006      	b.n	402a2a <two_way_long_needle+0x106>
  402a1c:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  402a20:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  402a24:	45f4      	cmp	ip, lr
  402a26:	d103      	bne.n	402a30 <two_way_long_needle+0x10c>
  402a28:	4619      	mov	r1, r3
  402a2a:	1e4b      	subs	r3, r1, #1
  402a2c:	459b      	cmp	fp, r3
  402a2e:	d1f5      	bne.n	402a1c <two_way_long_needle+0xf8>
  402a30:	3401      	adds	r4, #1
  402a32:	428c      	cmp	r4, r1
  402a34:	d870      	bhi.n	402b18 <two_way_long_needle+0x1f4>
  402a36:	9c03      	ldr	r4, [sp, #12]
  402a38:	4638      	mov	r0, r7
  402a3a:	44a0      	add	r8, r4
  402a3c:	ebaa 0404 	sub.w	r4, sl, r4
  402a40:	e7a3      	b.n	40298a <two_way_long_needle+0x66>
  402a42:	f1c9 0201 	rsb	r2, r9, #1
  402a46:	4490      	add	r8, r2
  402a48:	e7b7      	b.n	4029ba <two_way_long_needle+0x96>
  402a4a:	2000      	movs	r0, #0
  402a4c:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  402a50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402a54:	eba4 0309 	sub.w	r3, r4, r9
  402a58:	454b      	cmp	r3, r9
  402a5a:	bf38      	it	cc
  402a5c:	464b      	movcc	r3, r9
  402a5e:	3301      	adds	r3, #1
  402a60:	f109 38ff 	add.w	r8, r9, #4294967295
  402a64:	9303      	str	r3, [sp, #12]
  402a66:	eb06 0308 	add.w	r3, r6, r8
  402a6a:	4658      	mov	r0, fp
  402a6c:	f04f 0a00 	mov.w	sl, #0
  402a70:	46cb      	mov	fp, r9
  402a72:	4699      	mov	r9, r3
  402a74:	eb0a 0704 	add.w	r7, sl, r4
  402a78:	1a3a      	subs	r2, r7, r0
  402a7a:	2100      	movs	r1, #0
  402a7c:	4428      	add	r0, r5
  402a7e:	f002 fe37 	bl	4056f0 <memchr>
  402a82:	2800      	cmp	r0, #0
  402a84:	d1e1      	bne.n	402a4a <two_way_long_needle+0x126>
  402a86:	2f00      	cmp	r7, #0
  402a88:	d0df      	beq.n	402a4a <two_way_long_needle+0x126>
  402a8a:	19eb      	adds	r3, r5, r7
  402a8c:	aa04      	add	r2, sp, #16
  402a8e:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  402a92:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  402a96:	bba3      	cbnz	r3, 402b02 <two_way_long_needle+0x1de>
  402a98:	1e61      	subs	r1, r4, #1
  402a9a:	458b      	cmp	fp, r1
  402a9c:	d215      	bcs.n	402aca <two_way_long_needle+0x1a6>
  402a9e:	eb0a 020b 	add.w	r2, sl, fp
  402aa2:	f816 300b 	ldrb.w	r3, [r6, fp]
  402aa6:	f815 e002 	ldrb.w	lr, [r5, r2]
  402aaa:	459e      	cmp	lr, r3
  402aac:	442a      	add	r2, r5
  402aae:	eb06 000b 	add.w	r0, r6, fp
  402ab2:	465b      	mov	r3, fp
  402ab4:	d006      	beq.n	402ac4 <two_way_long_needle+0x1a0>
  402ab6:	e027      	b.n	402b08 <two_way_long_needle+0x1e4>
  402ab8:	f810 cf01 	ldrb.w	ip, [r0, #1]!
  402abc:	f812 ef01 	ldrb.w	lr, [r2, #1]!
  402ac0:	45f4      	cmp	ip, lr
  402ac2:	d121      	bne.n	402b08 <two_way_long_needle+0x1e4>
  402ac4:	3301      	adds	r3, #1
  402ac6:	428b      	cmp	r3, r1
  402ac8:	d3f6      	bcc.n	402ab8 <two_way_long_needle+0x194>
  402aca:	f1b8 3fff 	cmp.w	r8, #4294967295
  402ace:	d011      	beq.n	402af4 <two_way_long_needle+0x1d0>
  402ad0:	eb0a 0208 	add.w	r2, sl, r8
  402ad4:	f899 1000 	ldrb.w	r1, [r9]
  402ad8:	5cab      	ldrb	r3, [r5, r2]
  402ada:	4299      	cmp	r1, r3
  402adc:	442a      	add	r2, r5
  402ade:	d10f      	bne.n	402b00 <two_way_long_needle+0x1dc>
  402ae0:	464b      	mov	r3, r9
  402ae2:	e005      	b.n	402af0 <two_way_long_needle+0x1cc>
  402ae4:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  402ae8:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  402aec:	4288      	cmp	r0, r1
  402aee:	d107      	bne.n	402b00 <two_way_long_needle+0x1dc>
  402af0:	42b3      	cmp	r3, r6
  402af2:	d1f7      	bne.n	402ae4 <two_way_long_needle+0x1c0>
  402af4:	eb05 000a 	add.w	r0, r5, sl
  402af8:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  402afc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402b00:	9b03      	ldr	r3, [sp, #12]
  402b02:	449a      	add	sl, r3
  402b04:	4638      	mov	r0, r7
  402b06:	e7b5      	b.n	402a74 <two_way_long_needle+0x150>
  402b08:	f1cb 0201 	rsb	r2, fp, #1
  402b0c:	4492      	add	sl, r2
  402b0e:	449a      	add	sl, r3
  402b10:	4638      	mov	r0, r7
  402b12:	e7af      	b.n	402a74 <two_way_long_needle+0x150>
  402b14:	4649      	mov	r1, r9
  402b16:	e78b      	b.n	402a30 <two_way_long_needle+0x10c>
  402b18:	eb05 0008 	add.w	r0, r5, r8
  402b1c:	e796      	b.n	402a4c <two_way_long_needle+0x128>
  402b1e:	bf00      	nop

00402b20 <strstr>:
  402b20:	7802      	ldrb	r2, [r0, #0]
  402b22:	2a00      	cmp	r2, #0
  402b24:	f000 8101 	beq.w	402d2a <strstr+0x20a>
  402b28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402b2c:	f891 8000 	ldrb.w	r8, [r1]
  402b30:	b085      	sub	sp, #20
  402b32:	4644      	mov	r4, r8
  402b34:	f1b8 0f00 	cmp.w	r8, #0
  402b38:	d016      	beq.n	402b68 <strstr+0x48>
  402b3a:	4686      	mov	lr, r0
  402b3c:	f101 0c01 	add.w	ip, r1, #1
  402b40:	2701      	movs	r7, #1
  402b42:	e003      	b.n	402b4c <strstr+0x2c>
  402b44:	f813 4b01 	ldrb.w	r4, [r3], #1
  402b48:	b16c      	cbz	r4, 402b66 <strstr+0x46>
  402b4a:	469c      	mov	ip, r3
  402b4c:	42a2      	cmp	r2, r4
  402b4e:	bf14      	ite	ne
  402b50:	2700      	movne	r7, #0
  402b52:	f007 0701 	andeq.w	r7, r7, #1
  402b56:	f81e 2f01 	ldrb.w	r2, [lr, #1]!
  402b5a:	4663      	mov	r3, ip
  402b5c:	2a00      	cmp	r2, #0
  402b5e:	d1f1      	bne.n	402b44 <strstr+0x24>
  402b60:	f89c 3000 	ldrb.w	r3, [ip]
  402b64:	b9fb      	cbnz	r3, 402ba6 <strstr+0x86>
  402b66:	b117      	cbz	r7, 402b6e <strstr+0x4e>
  402b68:	b005      	add	sp, #20
  402b6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402b6e:	460e      	mov	r6, r1
  402b70:	4605      	mov	r5, r0
  402b72:	4641      	mov	r1, r8
  402b74:	3001      	adds	r0, #1
  402b76:	ebac 0406 	sub.w	r4, ip, r6
  402b7a:	f003 f9eb 	bl	405f54 <strchr>
  402b7e:	4607      	mov	r7, r0
  402b80:	b188      	cbz	r0, 402ba6 <strstr+0x86>
  402b82:	2c01      	cmp	r4, #1
  402b84:	d0f0      	beq.n	402b68 <strstr+0x48>
  402b86:	1928      	adds	r0, r5, r4
  402b88:	4287      	cmp	r7, r0
  402b8a:	bf94      	ite	ls
  402b8c:	1bc1      	subls	r1, r0, r7
  402b8e:	2101      	movhi	r1, #1
  402b90:	2c1f      	cmp	r4, #31
  402b92:	468b      	mov	fp, r1
  402b94:	d90b      	bls.n	402bae <strstr+0x8e>
  402b96:	4623      	mov	r3, r4
  402b98:	4632      	mov	r2, r6
  402b9a:	4638      	mov	r0, r7
  402b9c:	f7ff fec2 	bl	402924 <two_way_long_needle>
  402ba0:	b005      	add	sp, #20
  402ba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402ba6:	2000      	movs	r0, #0
  402ba8:	b005      	add	sp, #20
  402baa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402bae:	aa03      	add	r2, sp, #12
  402bb0:	4621      	mov	r1, r4
  402bb2:	4630      	mov	r0, r6
  402bb4:	f7ff fe5c 	bl	402870 <critical_factorization>
  402bb8:	9903      	ldr	r1, [sp, #12]
  402bba:	4680      	mov	r8, r0
  402bbc:	4602      	mov	r2, r0
  402bbe:	4431      	add	r1, r6
  402bc0:	4630      	mov	r0, r6
  402bc2:	f002 fde5 	bl	405790 <memcmp>
  402bc6:	2800      	cmp	r0, #0
  402bc8:	d157      	bne.n	402c7a <strstr+0x15a>
  402bca:	f108 33ff 	add.w	r3, r8, #4294967295
  402bce:	9300      	str	r3, [sp, #0]
  402bd0:	18f3      	adds	r3, r6, r3
  402bd2:	4681      	mov	r9, r0
  402bd4:	4605      	mov	r5, r0
  402bd6:	9301      	str	r3, [sp, #4]
  402bd8:	4658      	mov	r0, fp
  402bda:	46b2      	mov	sl, r6
  402bdc:	1966      	adds	r6, r4, r5
  402bde:	1a32      	subs	r2, r6, r0
  402be0:	2100      	movs	r1, #0
  402be2:	4438      	add	r0, r7
  402be4:	f002 fd84 	bl	4056f0 <memchr>
  402be8:	2800      	cmp	r0, #0
  402bea:	d1dc      	bne.n	402ba6 <strstr+0x86>
  402bec:	2e00      	cmp	r6, #0
  402bee:	d0da      	beq.n	402ba6 <strstr+0x86>
  402bf0:	45c8      	cmp	r8, r9
  402bf2:	4643      	mov	r3, r8
  402bf4:	bf38      	it	cc
  402bf6:	464b      	movcc	r3, r9
  402bf8:	429c      	cmp	r4, r3
  402bfa:	d912      	bls.n	402c22 <strstr+0x102>
  402bfc:	195a      	adds	r2, r3, r5
  402bfe:	f81a 1003 	ldrb.w	r1, [sl, r3]
  402c02:	5cb8      	ldrb	r0, [r7, r2]
  402c04:	4281      	cmp	r1, r0
  402c06:	443a      	add	r2, r7
  402c08:	eb0a 0e03 	add.w	lr, sl, r3
  402c0c:	d006      	beq.n	402c1c <strstr+0xfc>
  402c0e:	e02c      	b.n	402c6a <strstr+0x14a>
  402c10:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
  402c14:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  402c18:	4288      	cmp	r0, r1
  402c1a:	d126      	bne.n	402c6a <strstr+0x14a>
  402c1c:	3301      	adds	r3, #1
  402c1e:	429c      	cmp	r4, r3
  402c20:	d1f6      	bne.n	402c10 <strstr+0xf0>
  402c22:	45c8      	cmp	r8, r9
  402c24:	9900      	ldr	r1, [sp, #0]
  402c26:	f240 8083 	bls.w	402d30 <strstr+0x210>
  402c2a:	9b00      	ldr	r3, [sp, #0]
  402c2c:	18ea      	adds	r2, r5, r3
  402c2e:	9b01      	ldr	r3, [sp, #4]
  402c30:	5cb8      	ldrb	r0, [r7, r2]
  402c32:	781b      	ldrb	r3, [r3, #0]
  402c34:	4298      	cmp	r0, r3
  402c36:	443a      	add	r2, r7
  402c38:	d17a      	bne.n	402d30 <strstr+0x210>
  402c3a:	9801      	ldr	r0, [sp, #4]
  402c3c:	f109 3bff 	add.w	fp, r9, #4294967295
  402c40:	e006      	b.n	402c50 <strstr+0x130>
  402c42:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  402c46:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  402c4a:	45f4      	cmp	ip, lr
  402c4c:	d103      	bne.n	402c56 <strstr+0x136>
  402c4e:	4619      	mov	r1, r3
  402c50:	1e4b      	subs	r3, r1, #1
  402c52:	455b      	cmp	r3, fp
  402c54:	d1f5      	bne.n	402c42 <strstr+0x122>
  402c56:	f109 0901 	add.w	r9, r9, #1
  402c5a:	4589      	cmp	r9, r1
  402c5c:	d857      	bhi.n	402d0e <strstr+0x1ee>
  402c5e:	9b03      	ldr	r3, [sp, #12]
  402c60:	4630      	mov	r0, r6
  402c62:	441d      	add	r5, r3
  402c64:	eba4 0903 	sub.w	r9, r4, r3
  402c68:	e7b8      	b.n	402bdc <strstr+0xbc>
  402c6a:	f1c8 0201 	rsb	r2, r8, #1
  402c6e:	4415      	add	r5, r2
  402c70:	441d      	add	r5, r3
  402c72:	f04f 0900 	mov.w	r9, #0
  402c76:	4630      	mov	r0, r6
  402c78:	e7b0      	b.n	402bdc <strstr+0xbc>
  402c7a:	eba4 0308 	sub.w	r3, r4, r8
  402c7e:	4543      	cmp	r3, r8
  402c80:	bf38      	it	cc
  402c82:	4643      	movcc	r3, r8
  402c84:	3301      	adds	r3, #1
  402c86:	f108 39ff 	add.w	r9, r8, #4294967295
  402c8a:	9303      	str	r3, [sp, #12]
  402c8c:	eb06 0309 	add.w	r3, r6, r9
  402c90:	4658      	mov	r0, fp
  402c92:	2500      	movs	r5, #0
  402c94:	46bb      	mov	fp, r7
  402c96:	469a      	mov	sl, r3
  402c98:	1967      	adds	r7, r4, r5
  402c9a:	1a3a      	subs	r2, r7, r0
  402c9c:	2100      	movs	r1, #0
  402c9e:	4458      	add	r0, fp
  402ca0:	f002 fd26 	bl	4056f0 <memchr>
  402ca4:	2800      	cmp	r0, #0
  402ca6:	f47f af7e 	bne.w	402ba6 <strstr+0x86>
  402caa:	2f00      	cmp	r7, #0
  402cac:	f43f af7b 	beq.w	402ba6 <strstr+0x86>
  402cb0:	4544      	cmp	r4, r8
  402cb2:	d915      	bls.n	402ce0 <strstr+0x1c0>
  402cb4:	eb08 0205 	add.w	r2, r8, r5
  402cb8:	f816 3008 	ldrb.w	r3, [r6, r8]
  402cbc:	f81b 0002 	ldrb.w	r0, [fp, r2]
  402cc0:	4298      	cmp	r0, r3
  402cc2:	445a      	add	r2, fp
  402cc4:	eb06 0108 	add.w	r1, r6, r8
  402cc8:	4643      	mov	r3, r8
  402cca:	d006      	beq.n	402cda <strstr+0x1ba>
  402ccc:	e023      	b.n	402d16 <strstr+0x1f6>
  402cce:	f811 ef01 	ldrb.w	lr, [r1, #1]!
  402cd2:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  402cd6:	4586      	cmp	lr, r0
  402cd8:	d11d      	bne.n	402d16 <strstr+0x1f6>
  402cda:	3301      	adds	r3, #1
  402cdc:	429c      	cmp	r4, r3
  402cde:	d1f6      	bne.n	402cce <strstr+0x1ae>
  402ce0:	f1b9 3fff 	cmp.w	r9, #4294967295
  402ce4:	d012      	beq.n	402d0c <strstr+0x1ec>
  402ce6:	eb05 0209 	add.w	r2, r5, r9
  402cea:	f89a 3000 	ldrb.w	r3, [sl]
  402cee:	f81b 1002 	ldrb.w	r1, [fp, r2]
  402cf2:	4299      	cmp	r1, r3
  402cf4:	445a      	add	r2, fp
  402cf6:	d114      	bne.n	402d22 <strstr+0x202>
  402cf8:	4653      	mov	r3, sl
  402cfa:	e005      	b.n	402d08 <strstr+0x1e8>
  402cfc:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  402d00:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  402d04:	4288      	cmp	r0, r1
  402d06:	d10c      	bne.n	402d22 <strstr+0x202>
  402d08:	42b3      	cmp	r3, r6
  402d0a:	d1f7      	bne.n	402cfc <strstr+0x1dc>
  402d0c:	465f      	mov	r7, fp
  402d0e:	1978      	adds	r0, r7, r5
  402d10:	b005      	add	sp, #20
  402d12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402d16:	f1c8 0201 	rsb	r2, r8, #1
  402d1a:	4415      	add	r5, r2
  402d1c:	441d      	add	r5, r3
  402d1e:	4638      	mov	r0, r7
  402d20:	e7ba      	b.n	402c98 <strstr+0x178>
  402d22:	9b03      	ldr	r3, [sp, #12]
  402d24:	4638      	mov	r0, r7
  402d26:	441d      	add	r5, r3
  402d28:	e7b6      	b.n	402c98 <strstr+0x178>
  402d2a:	780b      	ldrb	r3, [r1, #0]
  402d2c:	b913      	cbnz	r3, 402d34 <strstr+0x214>
  402d2e:	4770      	bx	lr
  402d30:	4641      	mov	r1, r8
  402d32:	e790      	b.n	402c56 <strstr+0x136>
  402d34:	2000      	movs	r0, #0
  402d36:	4770      	bx	lr

00402d38 <_svfprintf_r>:
  402d38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402d3c:	b0c3      	sub	sp, #268	; 0x10c
  402d3e:	460c      	mov	r4, r1
  402d40:	910b      	str	r1, [sp, #44]	; 0x2c
  402d42:	4692      	mov	sl, r2
  402d44:	930f      	str	r3, [sp, #60]	; 0x3c
  402d46:	900c      	str	r0, [sp, #48]	; 0x30
  402d48:	f002 fa0e 	bl	405168 <_localeconv_r>
  402d4c:	6803      	ldr	r3, [r0, #0]
  402d4e:	931a      	str	r3, [sp, #104]	; 0x68
  402d50:	4618      	mov	r0, r3
  402d52:	f003 f975 	bl	406040 <strlen>
  402d56:	89a3      	ldrh	r3, [r4, #12]
  402d58:	9019      	str	r0, [sp, #100]	; 0x64
  402d5a:	0619      	lsls	r1, r3, #24
  402d5c:	d503      	bpl.n	402d66 <_svfprintf_r+0x2e>
  402d5e:	6923      	ldr	r3, [r4, #16]
  402d60:	2b00      	cmp	r3, #0
  402d62:	f001 8003 	beq.w	403d6c <_svfprintf_r+0x1034>
  402d66:	2300      	movs	r3, #0
  402d68:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  402d6c:	9313      	str	r3, [sp, #76]	; 0x4c
  402d6e:	9315      	str	r3, [sp, #84]	; 0x54
  402d70:	9314      	str	r3, [sp, #80]	; 0x50
  402d72:	9327      	str	r3, [sp, #156]	; 0x9c
  402d74:	9326      	str	r3, [sp, #152]	; 0x98
  402d76:	9318      	str	r3, [sp, #96]	; 0x60
  402d78:	931b      	str	r3, [sp, #108]	; 0x6c
  402d7a:	9309      	str	r3, [sp, #36]	; 0x24
  402d7c:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  402d80:	46c8      	mov	r8, r9
  402d82:	9316      	str	r3, [sp, #88]	; 0x58
  402d84:	9317      	str	r3, [sp, #92]	; 0x5c
  402d86:	f89a 3000 	ldrb.w	r3, [sl]
  402d8a:	4654      	mov	r4, sl
  402d8c:	b1e3      	cbz	r3, 402dc8 <_svfprintf_r+0x90>
  402d8e:	2b25      	cmp	r3, #37	; 0x25
  402d90:	d102      	bne.n	402d98 <_svfprintf_r+0x60>
  402d92:	e019      	b.n	402dc8 <_svfprintf_r+0x90>
  402d94:	2b25      	cmp	r3, #37	; 0x25
  402d96:	d003      	beq.n	402da0 <_svfprintf_r+0x68>
  402d98:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  402d9c:	2b00      	cmp	r3, #0
  402d9e:	d1f9      	bne.n	402d94 <_svfprintf_r+0x5c>
  402da0:	eba4 050a 	sub.w	r5, r4, sl
  402da4:	b185      	cbz	r5, 402dc8 <_svfprintf_r+0x90>
  402da6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402da8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402daa:	f8c8 a000 	str.w	sl, [r8]
  402dae:	3301      	adds	r3, #1
  402db0:	442a      	add	r2, r5
  402db2:	2b07      	cmp	r3, #7
  402db4:	f8c8 5004 	str.w	r5, [r8, #4]
  402db8:	9227      	str	r2, [sp, #156]	; 0x9c
  402dba:	9326      	str	r3, [sp, #152]	; 0x98
  402dbc:	dc7f      	bgt.n	402ebe <_svfprintf_r+0x186>
  402dbe:	f108 0808 	add.w	r8, r8, #8
  402dc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402dc4:	442b      	add	r3, r5
  402dc6:	9309      	str	r3, [sp, #36]	; 0x24
  402dc8:	7823      	ldrb	r3, [r4, #0]
  402dca:	2b00      	cmp	r3, #0
  402dcc:	d07f      	beq.n	402ece <_svfprintf_r+0x196>
  402dce:	2300      	movs	r3, #0
  402dd0:	461a      	mov	r2, r3
  402dd2:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402dd6:	4619      	mov	r1, r3
  402dd8:	930d      	str	r3, [sp, #52]	; 0x34
  402dda:	469b      	mov	fp, r3
  402ddc:	f04f 30ff 	mov.w	r0, #4294967295
  402de0:	7863      	ldrb	r3, [r4, #1]
  402de2:	900a      	str	r0, [sp, #40]	; 0x28
  402de4:	f104 0a01 	add.w	sl, r4, #1
  402de8:	f10a 0a01 	add.w	sl, sl, #1
  402dec:	f1a3 0020 	sub.w	r0, r3, #32
  402df0:	2858      	cmp	r0, #88	; 0x58
  402df2:	f200 83c1 	bhi.w	403578 <_svfprintf_r+0x840>
  402df6:	e8df f010 	tbh	[pc, r0, lsl #1]
  402dfa:	0238      	.short	0x0238
  402dfc:	03bf03bf 	.word	0x03bf03bf
  402e00:	03bf0240 	.word	0x03bf0240
  402e04:	03bf03bf 	.word	0x03bf03bf
  402e08:	03bf03bf 	.word	0x03bf03bf
  402e0c:	024503bf 	.word	0x024503bf
  402e10:	03bf0203 	.word	0x03bf0203
  402e14:	026b005d 	.word	0x026b005d
  402e18:	028603bf 	.word	0x028603bf
  402e1c:	039d039d 	.word	0x039d039d
  402e20:	039d039d 	.word	0x039d039d
  402e24:	039d039d 	.word	0x039d039d
  402e28:	039d039d 	.word	0x039d039d
  402e2c:	03bf039d 	.word	0x03bf039d
  402e30:	03bf03bf 	.word	0x03bf03bf
  402e34:	03bf03bf 	.word	0x03bf03bf
  402e38:	03bf03bf 	.word	0x03bf03bf
  402e3c:	03bf03bf 	.word	0x03bf03bf
  402e40:	033703bf 	.word	0x033703bf
  402e44:	03bf0357 	.word	0x03bf0357
  402e48:	03bf0357 	.word	0x03bf0357
  402e4c:	03bf03bf 	.word	0x03bf03bf
  402e50:	039803bf 	.word	0x039803bf
  402e54:	03bf03bf 	.word	0x03bf03bf
  402e58:	03bf03ad 	.word	0x03bf03ad
  402e5c:	03bf03bf 	.word	0x03bf03bf
  402e60:	03bf03bf 	.word	0x03bf03bf
  402e64:	03bf0259 	.word	0x03bf0259
  402e68:	031e03bf 	.word	0x031e03bf
  402e6c:	03bf03bf 	.word	0x03bf03bf
  402e70:	03bf03bf 	.word	0x03bf03bf
  402e74:	03bf03bf 	.word	0x03bf03bf
  402e78:	03bf03bf 	.word	0x03bf03bf
  402e7c:	03bf03bf 	.word	0x03bf03bf
  402e80:	02db02c6 	.word	0x02db02c6
  402e84:	03570357 	.word	0x03570357
  402e88:	028b0357 	.word	0x028b0357
  402e8c:	03bf02db 	.word	0x03bf02db
  402e90:	029003bf 	.word	0x029003bf
  402e94:	029d03bf 	.word	0x029d03bf
  402e98:	02b401cc 	.word	0x02b401cc
  402e9c:	03bf0208 	.word	0x03bf0208
  402ea0:	03bf01e1 	.word	0x03bf01e1
  402ea4:	03bf007e 	.word	0x03bf007e
  402ea8:	020d03bf 	.word	0x020d03bf
  402eac:	980d      	ldr	r0, [sp, #52]	; 0x34
  402eae:	930f      	str	r3, [sp, #60]	; 0x3c
  402eb0:	4240      	negs	r0, r0
  402eb2:	900d      	str	r0, [sp, #52]	; 0x34
  402eb4:	f04b 0b04 	orr.w	fp, fp, #4
  402eb8:	f89a 3000 	ldrb.w	r3, [sl]
  402ebc:	e794      	b.n	402de8 <_svfprintf_r+0xb0>
  402ebe:	aa25      	add	r2, sp, #148	; 0x94
  402ec0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ec2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ec4:	f003 f92a 	bl	40611c <__ssprint_r>
  402ec8:	b940      	cbnz	r0, 402edc <_svfprintf_r+0x1a4>
  402eca:	46c8      	mov	r8, r9
  402ecc:	e779      	b.n	402dc2 <_svfprintf_r+0x8a>
  402ece:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  402ed0:	b123      	cbz	r3, 402edc <_svfprintf_r+0x1a4>
  402ed2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ed4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ed6:	aa25      	add	r2, sp, #148	; 0x94
  402ed8:	f003 f920 	bl	40611c <__ssprint_r>
  402edc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402ede:	899b      	ldrh	r3, [r3, #12]
  402ee0:	f013 0f40 	tst.w	r3, #64	; 0x40
  402ee4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402ee6:	bf18      	it	ne
  402ee8:	f04f 33ff 	movne.w	r3, #4294967295
  402eec:	9309      	str	r3, [sp, #36]	; 0x24
  402eee:	9809      	ldr	r0, [sp, #36]	; 0x24
  402ef0:	b043      	add	sp, #268	; 0x10c
  402ef2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402ef6:	f01b 0f20 	tst.w	fp, #32
  402efa:	9311      	str	r3, [sp, #68]	; 0x44
  402efc:	f040 81dd 	bne.w	4032ba <_svfprintf_r+0x582>
  402f00:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402f02:	f01b 0f10 	tst.w	fp, #16
  402f06:	4613      	mov	r3, r2
  402f08:	f040 856e 	bne.w	4039e8 <_svfprintf_r+0xcb0>
  402f0c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402f10:	f000 856a 	beq.w	4039e8 <_svfprintf_r+0xcb0>
  402f14:	8814      	ldrh	r4, [r2, #0]
  402f16:	3204      	adds	r2, #4
  402f18:	2500      	movs	r5, #0
  402f1a:	2301      	movs	r3, #1
  402f1c:	920f      	str	r2, [sp, #60]	; 0x3c
  402f1e:	2700      	movs	r7, #0
  402f20:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402f24:	990a      	ldr	r1, [sp, #40]	; 0x28
  402f26:	1c4a      	adds	r2, r1, #1
  402f28:	f000 8265 	beq.w	4033f6 <_svfprintf_r+0x6be>
  402f2c:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402f30:	9207      	str	r2, [sp, #28]
  402f32:	ea54 0205 	orrs.w	r2, r4, r5
  402f36:	f040 8264 	bne.w	403402 <_svfprintf_r+0x6ca>
  402f3a:	2900      	cmp	r1, #0
  402f3c:	f040 843c 	bne.w	4037b8 <_svfprintf_r+0xa80>
  402f40:	2b00      	cmp	r3, #0
  402f42:	f040 84d7 	bne.w	4038f4 <_svfprintf_r+0xbbc>
  402f46:	f01b 0301 	ands.w	r3, fp, #1
  402f4a:	930e      	str	r3, [sp, #56]	; 0x38
  402f4c:	f000 8604 	beq.w	403b58 <_svfprintf_r+0xe20>
  402f50:	ae42      	add	r6, sp, #264	; 0x108
  402f52:	2330      	movs	r3, #48	; 0x30
  402f54:	f806 3d41 	strb.w	r3, [r6, #-65]!
  402f58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402f5a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402f5c:	4293      	cmp	r3, r2
  402f5e:	bfb8      	it	lt
  402f60:	4613      	movlt	r3, r2
  402f62:	9308      	str	r3, [sp, #32]
  402f64:	2300      	movs	r3, #0
  402f66:	9312      	str	r3, [sp, #72]	; 0x48
  402f68:	b117      	cbz	r7, 402f70 <_svfprintf_r+0x238>
  402f6a:	9b08      	ldr	r3, [sp, #32]
  402f6c:	3301      	adds	r3, #1
  402f6e:	9308      	str	r3, [sp, #32]
  402f70:	9b07      	ldr	r3, [sp, #28]
  402f72:	f013 0302 	ands.w	r3, r3, #2
  402f76:	9310      	str	r3, [sp, #64]	; 0x40
  402f78:	d002      	beq.n	402f80 <_svfprintf_r+0x248>
  402f7a:	9b08      	ldr	r3, [sp, #32]
  402f7c:	3302      	adds	r3, #2
  402f7e:	9308      	str	r3, [sp, #32]
  402f80:	9b07      	ldr	r3, [sp, #28]
  402f82:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  402f86:	f040 830e 	bne.w	4035a6 <_svfprintf_r+0x86e>
  402f8a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402f8c:	9a08      	ldr	r2, [sp, #32]
  402f8e:	eba3 0b02 	sub.w	fp, r3, r2
  402f92:	f1bb 0f00 	cmp.w	fp, #0
  402f96:	f340 8306 	ble.w	4035a6 <_svfprintf_r+0x86e>
  402f9a:	f1bb 0f10 	cmp.w	fp, #16
  402f9e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402fa0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402fa2:	dd29      	ble.n	402ff8 <_svfprintf_r+0x2c0>
  402fa4:	4643      	mov	r3, r8
  402fa6:	4621      	mov	r1, r4
  402fa8:	46a8      	mov	r8, r5
  402faa:	2710      	movs	r7, #16
  402fac:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402fae:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402fb0:	e006      	b.n	402fc0 <_svfprintf_r+0x288>
  402fb2:	f1ab 0b10 	sub.w	fp, fp, #16
  402fb6:	f1bb 0f10 	cmp.w	fp, #16
  402fba:	f103 0308 	add.w	r3, r3, #8
  402fbe:	dd18      	ble.n	402ff2 <_svfprintf_r+0x2ba>
  402fc0:	3201      	adds	r2, #1
  402fc2:	48b7      	ldr	r0, [pc, #732]	; (4032a0 <_svfprintf_r+0x568>)
  402fc4:	9226      	str	r2, [sp, #152]	; 0x98
  402fc6:	3110      	adds	r1, #16
  402fc8:	2a07      	cmp	r2, #7
  402fca:	9127      	str	r1, [sp, #156]	; 0x9c
  402fcc:	e883 0081 	stmia.w	r3, {r0, r7}
  402fd0:	ddef      	ble.n	402fb2 <_svfprintf_r+0x27a>
  402fd2:	aa25      	add	r2, sp, #148	; 0x94
  402fd4:	4629      	mov	r1, r5
  402fd6:	4620      	mov	r0, r4
  402fd8:	f003 f8a0 	bl	40611c <__ssprint_r>
  402fdc:	2800      	cmp	r0, #0
  402fde:	f47f af7d 	bne.w	402edc <_svfprintf_r+0x1a4>
  402fe2:	f1ab 0b10 	sub.w	fp, fp, #16
  402fe6:	f1bb 0f10 	cmp.w	fp, #16
  402fea:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402fec:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402fee:	464b      	mov	r3, r9
  402ff0:	dce6      	bgt.n	402fc0 <_svfprintf_r+0x288>
  402ff2:	4645      	mov	r5, r8
  402ff4:	460c      	mov	r4, r1
  402ff6:	4698      	mov	r8, r3
  402ff8:	3201      	adds	r2, #1
  402ffa:	4ba9      	ldr	r3, [pc, #676]	; (4032a0 <_svfprintf_r+0x568>)
  402ffc:	9226      	str	r2, [sp, #152]	; 0x98
  402ffe:	445c      	add	r4, fp
  403000:	2a07      	cmp	r2, #7
  403002:	9427      	str	r4, [sp, #156]	; 0x9c
  403004:	e888 0808 	stmia.w	r8, {r3, fp}
  403008:	f300 8498 	bgt.w	40393c <_svfprintf_r+0xc04>
  40300c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403010:	f108 0808 	add.w	r8, r8, #8
  403014:	b177      	cbz	r7, 403034 <_svfprintf_r+0x2fc>
  403016:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403018:	3301      	adds	r3, #1
  40301a:	3401      	adds	r4, #1
  40301c:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  403020:	2201      	movs	r2, #1
  403022:	2b07      	cmp	r3, #7
  403024:	9427      	str	r4, [sp, #156]	; 0x9c
  403026:	9326      	str	r3, [sp, #152]	; 0x98
  403028:	e888 0006 	stmia.w	r8, {r1, r2}
  40302c:	f300 83db 	bgt.w	4037e6 <_svfprintf_r+0xaae>
  403030:	f108 0808 	add.w	r8, r8, #8
  403034:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403036:	b16b      	cbz	r3, 403054 <_svfprintf_r+0x31c>
  403038:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40303a:	3301      	adds	r3, #1
  40303c:	3402      	adds	r4, #2
  40303e:	a91e      	add	r1, sp, #120	; 0x78
  403040:	2202      	movs	r2, #2
  403042:	2b07      	cmp	r3, #7
  403044:	9427      	str	r4, [sp, #156]	; 0x9c
  403046:	9326      	str	r3, [sp, #152]	; 0x98
  403048:	e888 0006 	stmia.w	r8, {r1, r2}
  40304c:	f300 83d6 	bgt.w	4037fc <_svfprintf_r+0xac4>
  403050:	f108 0808 	add.w	r8, r8, #8
  403054:	2d80      	cmp	r5, #128	; 0x80
  403056:	f000 8315 	beq.w	403684 <_svfprintf_r+0x94c>
  40305a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40305c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40305e:	1a9f      	subs	r7, r3, r2
  403060:	2f00      	cmp	r7, #0
  403062:	dd36      	ble.n	4030d2 <_svfprintf_r+0x39a>
  403064:	2f10      	cmp	r7, #16
  403066:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403068:	4d8e      	ldr	r5, [pc, #568]	; (4032a4 <_svfprintf_r+0x56c>)
  40306a:	dd27      	ble.n	4030bc <_svfprintf_r+0x384>
  40306c:	4642      	mov	r2, r8
  40306e:	4621      	mov	r1, r4
  403070:	46b0      	mov	r8, r6
  403072:	f04f 0b10 	mov.w	fp, #16
  403076:	462e      	mov	r6, r5
  403078:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40307a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40307c:	e004      	b.n	403088 <_svfprintf_r+0x350>
  40307e:	3f10      	subs	r7, #16
  403080:	2f10      	cmp	r7, #16
  403082:	f102 0208 	add.w	r2, r2, #8
  403086:	dd15      	ble.n	4030b4 <_svfprintf_r+0x37c>
  403088:	3301      	adds	r3, #1
  40308a:	3110      	adds	r1, #16
  40308c:	2b07      	cmp	r3, #7
  40308e:	9127      	str	r1, [sp, #156]	; 0x9c
  403090:	9326      	str	r3, [sp, #152]	; 0x98
  403092:	e882 0840 	stmia.w	r2, {r6, fp}
  403096:	ddf2      	ble.n	40307e <_svfprintf_r+0x346>
  403098:	aa25      	add	r2, sp, #148	; 0x94
  40309a:	4629      	mov	r1, r5
  40309c:	4620      	mov	r0, r4
  40309e:	f003 f83d 	bl	40611c <__ssprint_r>
  4030a2:	2800      	cmp	r0, #0
  4030a4:	f47f af1a 	bne.w	402edc <_svfprintf_r+0x1a4>
  4030a8:	3f10      	subs	r7, #16
  4030aa:	2f10      	cmp	r7, #16
  4030ac:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4030ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4030b0:	464a      	mov	r2, r9
  4030b2:	dce9      	bgt.n	403088 <_svfprintf_r+0x350>
  4030b4:	4635      	mov	r5, r6
  4030b6:	460c      	mov	r4, r1
  4030b8:	4646      	mov	r6, r8
  4030ba:	4690      	mov	r8, r2
  4030bc:	3301      	adds	r3, #1
  4030be:	443c      	add	r4, r7
  4030c0:	2b07      	cmp	r3, #7
  4030c2:	9427      	str	r4, [sp, #156]	; 0x9c
  4030c4:	9326      	str	r3, [sp, #152]	; 0x98
  4030c6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4030ca:	f300 8381 	bgt.w	4037d0 <_svfprintf_r+0xa98>
  4030ce:	f108 0808 	add.w	r8, r8, #8
  4030d2:	9b07      	ldr	r3, [sp, #28]
  4030d4:	05df      	lsls	r7, r3, #23
  4030d6:	f100 8268 	bmi.w	4035aa <_svfprintf_r+0x872>
  4030da:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4030dc:	990e      	ldr	r1, [sp, #56]	; 0x38
  4030de:	f8c8 6000 	str.w	r6, [r8]
  4030e2:	3301      	adds	r3, #1
  4030e4:	440c      	add	r4, r1
  4030e6:	2b07      	cmp	r3, #7
  4030e8:	9427      	str	r4, [sp, #156]	; 0x9c
  4030ea:	f8c8 1004 	str.w	r1, [r8, #4]
  4030ee:	9326      	str	r3, [sp, #152]	; 0x98
  4030f0:	f300 834d 	bgt.w	40378e <_svfprintf_r+0xa56>
  4030f4:	f108 0808 	add.w	r8, r8, #8
  4030f8:	9b07      	ldr	r3, [sp, #28]
  4030fa:	075b      	lsls	r3, r3, #29
  4030fc:	d53a      	bpl.n	403174 <_svfprintf_r+0x43c>
  4030fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403100:	9a08      	ldr	r2, [sp, #32]
  403102:	1a9d      	subs	r5, r3, r2
  403104:	2d00      	cmp	r5, #0
  403106:	dd35      	ble.n	403174 <_svfprintf_r+0x43c>
  403108:	2d10      	cmp	r5, #16
  40310a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40310c:	dd20      	ble.n	403150 <_svfprintf_r+0x418>
  40310e:	2610      	movs	r6, #16
  403110:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403112:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  403116:	e004      	b.n	403122 <_svfprintf_r+0x3ea>
  403118:	3d10      	subs	r5, #16
  40311a:	2d10      	cmp	r5, #16
  40311c:	f108 0808 	add.w	r8, r8, #8
  403120:	dd16      	ble.n	403150 <_svfprintf_r+0x418>
  403122:	3301      	adds	r3, #1
  403124:	4a5e      	ldr	r2, [pc, #376]	; (4032a0 <_svfprintf_r+0x568>)
  403126:	9326      	str	r3, [sp, #152]	; 0x98
  403128:	3410      	adds	r4, #16
  40312a:	2b07      	cmp	r3, #7
  40312c:	9427      	str	r4, [sp, #156]	; 0x9c
  40312e:	e888 0044 	stmia.w	r8, {r2, r6}
  403132:	ddf1      	ble.n	403118 <_svfprintf_r+0x3e0>
  403134:	aa25      	add	r2, sp, #148	; 0x94
  403136:	4659      	mov	r1, fp
  403138:	4638      	mov	r0, r7
  40313a:	f002 ffef 	bl	40611c <__ssprint_r>
  40313e:	2800      	cmp	r0, #0
  403140:	f47f aecc 	bne.w	402edc <_svfprintf_r+0x1a4>
  403144:	3d10      	subs	r5, #16
  403146:	2d10      	cmp	r5, #16
  403148:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40314a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40314c:	46c8      	mov	r8, r9
  40314e:	dce8      	bgt.n	403122 <_svfprintf_r+0x3ea>
  403150:	3301      	adds	r3, #1
  403152:	4a53      	ldr	r2, [pc, #332]	; (4032a0 <_svfprintf_r+0x568>)
  403154:	9326      	str	r3, [sp, #152]	; 0x98
  403156:	442c      	add	r4, r5
  403158:	2b07      	cmp	r3, #7
  40315a:	9427      	str	r4, [sp, #156]	; 0x9c
  40315c:	e888 0024 	stmia.w	r8, {r2, r5}
  403160:	dd08      	ble.n	403174 <_svfprintf_r+0x43c>
  403162:	aa25      	add	r2, sp, #148	; 0x94
  403164:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403166:	980c      	ldr	r0, [sp, #48]	; 0x30
  403168:	f002 ffd8 	bl	40611c <__ssprint_r>
  40316c:	2800      	cmp	r0, #0
  40316e:	f47f aeb5 	bne.w	402edc <_svfprintf_r+0x1a4>
  403172:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403174:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403176:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403178:	9908      	ldr	r1, [sp, #32]
  40317a:	428a      	cmp	r2, r1
  40317c:	bfac      	ite	ge
  40317e:	189b      	addge	r3, r3, r2
  403180:	185b      	addlt	r3, r3, r1
  403182:	9309      	str	r3, [sp, #36]	; 0x24
  403184:	2c00      	cmp	r4, #0
  403186:	f040 830d 	bne.w	4037a4 <_svfprintf_r+0xa6c>
  40318a:	2300      	movs	r3, #0
  40318c:	9326      	str	r3, [sp, #152]	; 0x98
  40318e:	46c8      	mov	r8, r9
  403190:	e5f9      	b.n	402d86 <_svfprintf_r+0x4e>
  403192:	9311      	str	r3, [sp, #68]	; 0x44
  403194:	f01b 0320 	ands.w	r3, fp, #32
  403198:	f040 81e3 	bne.w	403562 <_svfprintf_r+0x82a>
  40319c:	f01b 0210 	ands.w	r2, fp, #16
  4031a0:	f040 842e 	bne.w	403a00 <_svfprintf_r+0xcc8>
  4031a4:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4031a8:	f000 842a 	beq.w	403a00 <_svfprintf_r+0xcc8>
  4031ac:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4031ae:	4613      	mov	r3, r2
  4031b0:	460a      	mov	r2, r1
  4031b2:	3204      	adds	r2, #4
  4031b4:	880c      	ldrh	r4, [r1, #0]
  4031b6:	920f      	str	r2, [sp, #60]	; 0x3c
  4031b8:	2500      	movs	r5, #0
  4031ba:	e6b0      	b.n	402f1e <_svfprintf_r+0x1e6>
  4031bc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4031be:	9311      	str	r3, [sp, #68]	; 0x44
  4031c0:	6816      	ldr	r6, [r2, #0]
  4031c2:	2400      	movs	r4, #0
  4031c4:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  4031c8:	1d15      	adds	r5, r2, #4
  4031ca:	2e00      	cmp	r6, #0
  4031cc:	f000 86a7 	beq.w	403f1e <_svfprintf_r+0x11e6>
  4031d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4031d2:	1c53      	adds	r3, r2, #1
  4031d4:	f000 8609 	beq.w	403dea <_svfprintf_r+0x10b2>
  4031d8:	4621      	mov	r1, r4
  4031da:	4630      	mov	r0, r6
  4031dc:	f002 fa88 	bl	4056f0 <memchr>
  4031e0:	2800      	cmp	r0, #0
  4031e2:	f000 86e1 	beq.w	403fa8 <_svfprintf_r+0x1270>
  4031e6:	1b83      	subs	r3, r0, r6
  4031e8:	930e      	str	r3, [sp, #56]	; 0x38
  4031ea:	940a      	str	r4, [sp, #40]	; 0x28
  4031ec:	950f      	str	r5, [sp, #60]	; 0x3c
  4031ee:	f8cd b01c 	str.w	fp, [sp, #28]
  4031f2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4031f6:	9308      	str	r3, [sp, #32]
  4031f8:	9412      	str	r4, [sp, #72]	; 0x48
  4031fa:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4031fe:	e6b3      	b.n	402f68 <_svfprintf_r+0x230>
  403200:	f89a 3000 	ldrb.w	r3, [sl]
  403204:	2201      	movs	r2, #1
  403206:	212b      	movs	r1, #43	; 0x2b
  403208:	e5ee      	b.n	402de8 <_svfprintf_r+0xb0>
  40320a:	f04b 0b20 	orr.w	fp, fp, #32
  40320e:	f89a 3000 	ldrb.w	r3, [sl]
  403212:	e5e9      	b.n	402de8 <_svfprintf_r+0xb0>
  403214:	9311      	str	r3, [sp, #68]	; 0x44
  403216:	2a00      	cmp	r2, #0
  403218:	f040 8795 	bne.w	404146 <_svfprintf_r+0x140e>
  40321c:	4b22      	ldr	r3, [pc, #136]	; (4032a8 <_svfprintf_r+0x570>)
  40321e:	9318      	str	r3, [sp, #96]	; 0x60
  403220:	f01b 0f20 	tst.w	fp, #32
  403224:	f040 8111 	bne.w	40344a <_svfprintf_r+0x712>
  403228:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40322a:	f01b 0f10 	tst.w	fp, #16
  40322e:	4613      	mov	r3, r2
  403230:	f040 83e1 	bne.w	4039f6 <_svfprintf_r+0xcbe>
  403234:	f01b 0f40 	tst.w	fp, #64	; 0x40
  403238:	f000 83dd 	beq.w	4039f6 <_svfprintf_r+0xcbe>
  40323c:	3304      	adds	r3, #4
  40323e:	8814      	ldrh	r4, [r2, #0]
  403240:	930f      	str	r3, [sp, #60]	; 0x3c
  403242:	2500      	movs	r5, #0
  403244:	f01b 0f01 	tst.w	fp, #1
  403248:	f000 810c 	beq.w	403464 <_svfprintf_r+0x72c>
  40324c:	ea54 0305 	orrs.w	r3, r4, r5
  403250:	f000 8108 	beq.w	403464 <_svfprintf_r+0x72c>
  403254:	2330      	movs	r3, #48	; 0x30
  403256:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  40325a:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  40325e:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  403262:	f04b 0b02 	orr.w	fp, fp, #2
  403266:	2302      	movs	r3, #2
  403268:	e659      	b.n	402f1e <_svfprintf_r+0x1e6>
  40326a:	f89a 3000 	ldrb.w	r3, [sl]
  40326e:	2900      	cmp	r1, #0
  403270:	f47f adba 	bne.w	402de8 <_svfprintf_r+0xb0>
  403274:	2201      	movs	r2, #1
  403276:	2120      	movs	r1, #32
  403278:	e5b6      	b.n	402de8 <_svfprintf_r+0xb0>
  40327a:	f04b 0b01 	orr.w	fp, fp, #1
  40327e:	f89a 3000 	ldrb.w	r3, [sl]
  403282:	e5b1      	b.n	402de8 <_svfprintf_r+0xb0>
  403284:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  403286:	6823      	ldr	r3, [r4, #0]
  403288:	930d      	str	r3, [sp, #52]	; 0x34
  40328a:	4618      	mov	r0, r3
  40328c:	2800      	cmp	r0, #0
  40328e:	4623      	mov	r3, r4
  403290:	f103 0304 	add.w	r3, r3, #4
  403294:	f6ff ae0a 	blt.w	402eac <_svfprintf_r+0x174>
  403298:	930f      	str	r3, [sp, #60]	; 0x3c
  40329a:	f89a 3000 	ldrb.w	r3, [sl]
  40329e:	e5a3      	b.n	402de8 <_svfprintf_r+0xb0>
  4032a0:	00407514 	.word	0x00407514
  4032a4:	00407524 	.word	0x00407524
  4032a8:	004074f4 	.word	0x004074f4
  4032ac:	f04b 0b10 	orr.w	fp, fp, #16
  4032b0:	f01b 0f20 	tst.w	fp, #32
  4032b4:	9311      	str	r3, [sp, #68]	; 0x44
  4032b6:	f43f ae23 	beq.w	402f00 <_svfprintf_r+0x1c8>
  4032ba:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4032bc:	3507      	adds	r5, #7
  4032be:	f025 0307 	bic.w	r3, r5, #7
  4032c2:	f103 0208 	add.w	r2, r3, #8
  4032c6:	e9d3 4500 	ldrd	r4, r5, [r3]
  4032ca:	920f      	str	r2, [sp, #60]	; 0x3c
  4032cc:	2301      	movs	r3, #1
  4032ce:	e626      	b.n	402f1e <_svfprintf_r+0x1e6>
  4032d0:	f89a 3000 	ldrb.w	r3, [sl]
  4032d4:	2b2a      	cmp	r3, #42	; 0x2a
  4032d6:	f10a 0401 	add.w	r4, sl, #1
  4032da:	f000 8727 	beq.w	40412c <_svfprintf_r+0x13f4>
  4032de:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4032e2:	2809      	cmp	r0, #9
  4032e4:	46a2      	mov	sl, r4
  4032e6:	f200 86ad 	bhi.w	404044 <_svfprintf_r+0x130c>
  4032ea:	2300      	movs	r3, #0
  4032ec:	461c      	mov	r4, r3
  4032ee:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4032f2:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4032f6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4032fa:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4032fe:	2809      	cmp	r0, #9
  403300:	d9f5      	bls.n	4032ee <_svfprintf_r+0x5b6>
  403302:	940a      	str	r4, [sp, #40]	; 0x28
  403304:	e572      	b.n	402dec <_svfprintf_r+0xb4>
  403306:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  40330a:	f89a 3000 	ldrb.w	r3, [sl]
  40330e:	e56b      	b.n	402de8 <_svfprintf_r+0xb0>
  403310:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  403314:	f89a 3000 	ldrb.w	r3, [sl]
  403318:	e566      	b.n	402de8 <_svfprintf_r+0xb0>
  40331a:	f89a 3000 	ldrb.w	r3, [sl]
  40331e:	2b6c      	cmp	r3, #108	; 0x6c
  403320:	bf03      	ittte	eq
  403322:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  403326:	f04b 0b20 	orreq.w	fp, fp, #32
  40332a:	f10a 0a01 	addeq.w	sl, sl, #1
  40332e:	f04b 0b10 	orrne.w	fp, fp, #16
  403332:	e559      	b.n	402de8 <_svfprintf_r+0xb0>
  403334:	2a00      	cmp	r2, #0
  403336:	f040 8711 	bne.w	40415c <_svfprintf_r+0x1424>
  40333a:	f01b 0f20 	tst.w	fp, #32
  40333e:	f040 84f9 	bne.w	403d34 <_svfprintf_r+0xffc>
  403342:	f01b 0f10 	tst.w	fp, #16
  403346:	f040 84ac 	bne.w	403ca2 <_svfprintf_r+0xf6a>
  40334a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40334e:	f000 84a8 	beq.w	403ca2 <_svfprintf_r+0xf6a>
  403352:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403354:	6813      	ldr	r3, [r2, #0]
  403356:	3204      	adds	r2, #4
  403358:	920f      	str	r2, [sp, #60]	; 0x3c
  40335a:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  40335e:	801a      	strh	r2, [r3, #0]
  403360:	e511      	b.n	402d86 <_svfprintf_r+0x4e>
  403362:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403364:	4bb3      	ldr	r3, [pc, #716]	; (403634 <_svfprintf_r+0x8fc>)
  403366:	680c      	ldr	r4, [r1, #0]
  403368:	9318      	str	r3, [sp, #96]	; 0x60
  40336a:	2230      	movs	r2, #48	; 0x30
  40336c:	2378      	movs	r3, #120	; 0x78
  40336e:	3104      	adds	r1, #4
  403370:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  403374:	9311      	str	r3, [sp, #68]	; 0x44
  403376:	f04b 0b02 	orr.w	fp, fp, #2
  40337a:	910f      	str	r1, [sp, #60]	; 0x3c
  40337c:	2500      	movs	r5, #0
  40337e:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  403382:	2302      	movs	r3, #2
  403384:	e5cb      	b.n	402f1e <_svfprintf_r+0x1e6>
  403386:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403388:	9311      	str	r3, [sp, #68]	; 0x44
  40338a:	680a      	ldr	r2, [r1, #0]
  40338c:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  403390:	2300      	movs	r3, #0
  403392:	460a      	mov	r2, r1
  403394:	461f      	mov	r7, r3
  403396:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40339a:	3204      	adds	r2, #4
  40339c:	2301      	movs	r3, #1
  40339e:	9308      	str	r3, [sp, #32]
  4033a0:	f8cd b01c 	str.w	fp, [sp, #28]
  4033a4:	970a      	str	r7, [sp, #40]	; 0x28
  4033a6:	9712      	str	r7, [sp, #72]	; 0x48
  4033a8:	920f      	str	r2, [sp, #60]	; 0x3c
  4033aa:	930e      	str	r3, [sp, #56]	; 0x38
  4033ac:	ae28      	add	r6, sp, #160	; 0xa0
  4033ae:	e5df      	b.n	402f70 <_svfprintf_r+0x238>
  4033b0:	9311      	str	r3, [sp, #68]	; 0x44
  4033b2:	2a00      	cmp	r2, #0
  4033b4:	f040 86ea 	bne.w	40418c <_svfprintf_r+0x1454>
  4033b8:	f01b 0f20 	tst.w	fp, #32
  4033bc:	d15d      	bne.n	40347a <_svfprintf_r+0x742>
  4033be:	f01b 0f10 	tst.w	fp, #16
  4033c2:	f040 8308 	bne.w	4039d6 <_svfprintf_r+0xc9e>
  4033c6:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4033ca:	f000 8304 	beq.w	4039d6 <_svfprintf_r+0xc9e>
  4033ce:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4033d0:	f9b1 4000 	ldrsh.w	r4, [r1]
  4033d4:	3104      	adds	r1, #4
  4033d6:	17e5      	asrs	r5, r4, #31
  4033d8:	4622      	mov	r2, r4
  4033da:	462b      	mov	r3, r5
  4033dc:	910f      	str	r1, [sp, #60]	; 0x3c
  4033de:	2a00      	cmp	r2, #0
  4033e0:	f173 0300 	sbcs.w	r3, r3, #0
  4033e4:	db58      	blt.n	403498 <_svfprintf_r+0x760>
  4033e6:	990a      	ldr	r1, [sp, #40]	; 0x28
  4033e8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4033ec:	1c4a      	adds	r2, r1, #1
  4033ee:	f04f 0301 	mov.w	r3, #1
  4033f2:	f47f ad9b 	bne.w	402f2c <_svfprintf_r+0x1f4>
  4033f6:	ea54 0205 	orrs.w	r2, r4, r5
  4033fa:	f000 81df 	beq.w	4037bc <_svfprintf_r+0xa84>
  4033fe:	f8cd b01c 	str.w	fp, [sp, #28]
  403402:	2b01      	cmp	r3, #1
  403404:	f000 827b 	beq.w	4038fe <_svfprintf_r+0xbc6>
  403408:	2b02      	cmp	r3, #2
  40340a:	f040 8206 	bne.w	40381a <_svfprintf_r+0xae2>
  40340e:	9818      	ldr	r0, [sp, #96]	; 0x60
  403410:	464e      	mov	r6, r9
  403412:	0923      	lsrs	r3, r4, #4
  403414:	f004 010f 	and.w	r1, r4, #15
  403418:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  40341c:	092a      	lsrs	r2, r5, #4
  40341e:	461c      	mov	r4, r3
  403420:	4615      	mov	r5, r2
  403422:	5c43      	ldrb	r3, [r0, r1]
  403424:	f806 3d01 	strb.w	r3, [r6, #-1]!
  403428:	ea54 0305 	orrs.w	r3, r4, r5
  40342c:	d1f1      	bne.n	403412 <_svfprintf_r+0x6da>
  40342e:	eba9 0306 	sub.w	r3, r9, r6
  403432:	930e      	str	r3, [sp, #56]	; 0x38
  403434:	e590      	b.n	402f58 <_svfprintf_r+0x220>
  403436:	9311      	str	r3, [sp, #68]	; 0x44
  403438:	2a00      	cmp	r2, #0
  40343a:	f040 86a3 	bne.w	404184 <_svfprintf_r+0x144c>
  40343e:	4b7e      	ldr	r3, [pc, #504]	; (403638 <_svfprintf_r+0x900>)
  403440:	9318      	str	r3, [sp, #96]	; 0x60
  403442:	f01b 0f20 	tst.w	fp, #32
  403446:	f43f aeef 	beq.w	403228 <_svfprintf_r+0x4f0>
  40344a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40344c:	3507      	adds	r5, #7
  40344e:	f025 0307 	bic.w	r3, r5, #7
  403452:	f103 0208 	add.w	r2, r3, #8
  403456:	f01b 0f01 	tst.w	fp, #1
  40345a:	920f      	str	r2, [sp, #60]	; 0x3c
  40345c:	e9d3 4500 	ldrd	r4, r5, [r3]
  403460:	f47f aef4 	bne.w	40324c <_svfprintf_r+0x514>
  403464:	2302      	movs	r3, #2
  403466:	e55a      	b.n	402f1e <_svfprintf_r+0x1e6>
  403468:	9311      	str	r3, [sp, #68]	; 0x44
  40346a:	2a00      	cmp	r2, #0
  40346c:	f040 8686 	bne.w	40417c <_svfprintf_r+0x1444>
  403470:	f04b 0b10 	orr.w	fp, fp, #16
  403474:	f01b 0f20 	tst.w	fp, #32
  403478:	d0a1      	beq.n	4033be <_svfprintf_r+0x686>
  40347a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40347c:	3507      	adds	r5, #7
  40347e:	f025 0507 	bic.w	r5, r5, #7
  403482:	e9d5 2300 	ldrd	r2, r3, [r5]
  403486:	2a00      	cmp	r2, #0
  403488:	f105 0108 	add.w	r1, r5, #8
  40348c:	461d      	mov	r5, r3
  40348e:	f173 0300 	sbcs.w	r3, r3, #0
  403492:	910f      	str	r1, [sp, #60]	; 0x3c
  403494:	4614      	mov	r4, r2
  403496:	daa6      	bge.n	4033e6 <_svfprintf_r+0x6ae>
  403498:	272d      	movs	r7, #45	; 0x2d
  40349a:	4264      	negs	r4, r4
  40349c:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4034a0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4034a4:	2301      	movs	r3, #1
  4034a6:	e53d      	b.n	402f24 <_svfprintf_r+0x1ec>
  4034a8:	9311      	str	r3, [sp, #68]	; 0x44
  4034aa:	2a00      	cmp	r2, #0
  4034ac:	f040 8662 	bne.w	404174 <_svfprintf_r+0x143c>
  4034b0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4034b2:	3507      	adds	r5, #7
  4034b4:	f025 0307 	bic.w	r3, r5, #7
  4034b8:	f103 0208 	add.w	r2, r3, #8
  4034bc:	920f      	str	r2, [sp, #60]	; 0x3c
  4034be:	681a      	ldr	r2, [r3, #0]
  4034c0:	9215      	str	r2, [sp, #84]	; 0x54
  4034c2:	685b      	ldr	r3, [r3, #4]
  4034c4:	9314      	str	r3, [sp, #80]	; 0x50
  4034c6:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4034c8:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4034ca:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4034ce:	4628      	mov	r0, r5
  4034d0:	4621      	mov	r1, r4
  4034d2:	f04f 32ff 	mov.w	r2, #4294967295
  4034d6:	4b59      	ldr	r3, [pc, #356]	; (40363c <_svfprintf_r+0x904>)
  4034d8:	f003 fee6 	bl	4072a8 <__aeabi_dcmpun>
  4034dc:	2800      	cmp	r0, #0
  4034de:	f040 834a 	bne.w	403b76 <_svfprintf_r+0xe3e>
  4034e2:	4628      	mov	r0, r5
  4034e4:	4621      	mov	r1, r4
  4034e6:	f04f 32ff 	mov.w	r2, #4294967295
  4034ea:	4b54      	ldr	r3, [pc, #336]	; (40363c <_svfprintf_r+0x904>)
  4034ec:	f003 febe 	bl	40726c <__aeabi_dcmple>
  4034f0:	2800      	cmp	r0, #0
  4034f2:	f040 8340 	bne.w	403b76 <_svfprintf_r+0xe3e>
  4034f6:	a815      	add	r0, sp, #84	; 0x54
  4034f8:	c80d      	ldmia	r0, {r0, r2, r3}
  4034fa:	9914      	ldr	r1, [sp, #80]	; 0x50
  4034fc:	f003 feac 	bl	407258 <__aeabi_dcmplt>
  403500:	2800      	cmp	r0, #0
  403502:	f040 8530 	bne.w	403f66 <_svfprintf_r+0x122e>
  403506:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40350a:	4e4d      	ldr	r6, [pc, #308]	; (403640 <_svfprintf_r+0x908>)
  40350c:	4b4d      	ldr	r3, [pc, #308]	; (403644 <_svfprintf_r+0x90c>)
  40350e:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  403512:	9007      	str	r0, [sp, #28]
  403514:	9811      	ldr	r0, [sp, #68]	; 0x44
  403516:	2203      	movs	r2, #3
  403518:	2100      	movs	r1, #0
  40351a:	9208      	str	r2, [sp, #32]
  40351c:	910a      	str	r1, [sp, #40]	; 0x28
  40351e:	2847      	cmp	r0, #71	; 0x47
  403520:	bfd8      	it	le
  403522:	461e      	movle	r6, r3
  403524:	920e      	str	r2, [sp, #56]	; 0x38
  403526:	9112      	str	r1, [sp, #72]	; 0x48
  403528:	e51e      	b.n	402f68 <_svfprintf_r+0x230>
  40352a:	f04b 0b08 	orr.w	fp, fp, #8
  40352e:	f89a 3000 	ldrb.w	r3, [sl]
  403532:	e459      	b.n	402de8 <_svfprintf_r+0xb0>
  403534:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  403538:	2300      	movs	r3, #0
  40353a:	461c      	mov	r4, r3
  40353c:	f81a 3b01 	ldrb.w	r3, [sl], #1
  403540:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  403544:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  403548:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40354c:	2809      	cmp	r0, #9
  40354e:	d9f5      	bls.n	40353c <_svfprintf_r+0x804>
  403550:	940d      	str	r4, [sp, #52]	; 0x34
  403552:	e44b      	b.n	402dec <_svfprintf_r+0xb4>
  403554:	f04b 0b10 	orr.w	fp, fp, #16
  403558:	9311      	str	r3, [sp, #68]	; 0x44
  40355a:	f01b 0320 	ands.w	r3, fp, #32
  40355e:	f43f ae1d 	beq.w	40319c <_svfprintf_r+0x464>
  403562:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403564:	3507      	adds	r5, #7
  403566:	f025 0307 	bic.w	r3, r5, #7
  40356a:	f103 0208 	add.w	r2, r3, #8
  40356e:	e9d3 4500 	ldrd	r4, r5, [r3]
  403572:	920f      	str	r2, [sp, #60]	; 0x3c
  403574:	2300      	movs	r3, #0
  403576:	e4d2      	b.n	402f1e <_svfprintf_r+0x1e6>
  403578:	9311      	str	r3, [sp, #68]	; 0x44
  40357a:	2a00      	cmp	r2, #0
  40357c:	f040 85e7 	bne.w	40414e <_svfprintf_r+0x1416>
  403580:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403582:	2a00      	cmp	r2, #0
  403584:	f43f aca3 	beq.w	402ece <_svfprintf_r+0x196>
  403588:	2300      	movs	r3, #0
  40358a:	2101      	movs	r1, #1
  40358c:	461f      	mov	r7, r3
  40358e:	9108      	str	r1, [sp, #32]
  403590:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  403594:	f8cd b01c 	str.w	fp, [sp, #28]
  403598:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40359c:	930a      	str	r3, [sp, #40]	; 0x28
  40359e:	9312      	str	r3, [sp, #72]	; 0x48
  4035a0:	910e      	str	r1, [sp, #56]	; 0x38
  4035a2:	ae28      	add	r6, sp, #160	; 0xa0
  4035a4:	e4e4      	b.n	402f70 <_svfprintf_r+0x238>
  4035a6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4035a8:	e534      	b.n	403014 <_svfprintf_r+0x2dc>
  4035aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4035ac:	2b65      	cmp	r3, #101	; 0x65
  4035ae:	f340 80a7 	ble.w	403700 <_svfprintf_r+0x9c8>
  4035b2:	a815      	add	r0, sp, #84	; 0x54
  4035b4:	c80d      	ldmia	r0, {r0, r2, r3}
  4035b6:	9914      	ldr	r1, [sp, #80]	; 0x50
  4035b8:	f003 fe44 	bl	407244 <__aeabi_dcmpeq>
  4035bc:	2800      	cmp	r0, #0
  4035be:	f000 8150 	beq.w	403862 <_svfprintf_r+0xb2a>
  4035c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4035c4:	4a20      	ldr	r2, [pc, #128]	; (403648 <_svfprintf_r+0x910>)
  4035c6:	f8c8 2000 	str.w	r2, [r8]
  4035ca:	3301      	adds	r3, #1
  4035cc:	3401      	adds	r4, #1
  4035ce:	2201      	movs	r2, #1
  4035d0:	2b07      	cmp	r3, #7
  4035d2:	9427      	str	r4, [sp, #156]	; 0x9c
  4035d4:	9326      	str	r3, [sp, #152]	; 0x98
  4035d6:	f8c8 2004 	str.w	r2, [r8, #4]
  4035da:	f300 836a 	bgt.w	403cb2 <_svfprintf_r+0xf7a>
  4035de:	f108 0808 	add.w	r8, r8, #8
  4035e2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4035e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4035e6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4035e8:	4293      	cmp	r3, r2
  4035ea:	db03      	blt.n	4035f4 <_svfprintf_r+0x8bc>
  4035ec:	9b07      	ldr	r3, [sp, #28]
  4035ee:	07dd      	lsls	r5, r3, #31
  4035f0:	f57f ad82 	bpl.w	4030f8 <_svfprintf_r+0x3c0>
  4035f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4035f6:	9919      	ldr	r1, [sp, #100]	; 0x64
  4035f8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  4035fa:	f8c8 2000 	str.w	r2, [r8]
  4035fe:	3301      	adds	r3, #1
  403600:	440c      	add	r4, r1
  403602:	2b07      	cmp	r3, #7
  403604:	f8c8 1004 	str.w	r1, [r8, #4]
  403608:	9427      	str	r4, [sp, #156]	; 0x9c
  40360a:	9326      	str	r3, [sp, #152]	; 0x98
  40360c:	f300 839e 	bgt.w	403d4c <_svfprintf_r+0x1014>
  403610:	f108 0808 	add.w	r8, r8, #8
  403614:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403616:	1e5e      	subs	r6, r3, #1
  403618:	2e00      	cmp	r6, #0
  40361a:	f77f ad6d 	ble.w	4030f8 <_svfprintf_r+0x3c0>
  40361e:	2e10      	cmp	r6, #16
  403620:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403622:	4d0a      	ldr	r5, [pc, #40]	; (40364c <_svfprintf_r+0x914>)
  403624:	f340 81f5 	ble.w	403a12 <_svfprintf_r+0xcda>
  403628:	4622      	mov	r2, r4
  40362a:	2710      	movs	r7, #16
  40362c:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403630:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  403632:	e013      	b.n	40365c <_svfprintf_r+0x924>
  403634:	004074f4 	.word	0x004074f4
  403638:	004074e0 	.word	0x004074e0
  40363c:	7fefffff 	.word	0x7fefffff
  403640:	004074d4 	.word	0x004074d4
  403644:	004074d0 	.word	0x004074d0
  403648:	00407510 	.word	0x00407510
  40364c:	00407524 	.word	0x00407524
  403650:	f108 0808 	add.w	r8, r8, #8
  403654:	3e10      	subs	r6, #16
  403656:	2e10      	cmp	r6, #16
  403658:	f340 81da 	ble.w	403a10 <_svfprintf_r+0xcd8>
  40365c:	3301      	adds	r3, #1
  40365e:	3210      	adds	r2, #16
  403660:	2b07      	cmp	r3, #7
  403662:	9227      	str	r2, [sp, #156]	; 0x9c
  403664:	9326      	str	r3, [sp, #152]	; 0x98
  403666:	e888 00a0 	stmia.w	r8, {r5, r7}
  40366a:	ddf1      	ble.n	403650 <_svfprintf_r+0x918>
  40366c:	aa25      	add	r2, sp, #148	; 0x94
  40366e:	4621      	mov	r1, r4
  403670:	4658      	mov	r0, fp
  403672:	f002 fd53 	bl	40611c <__ssprint_r>
  403676:	2800      	cmp	r0, #0
  403678:	f47f ac30 	bne.w	402edc <_svfprintf_r+0x1a4>
  40367c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40367e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403680:	46c8      	mov	r8, r9
  403682:	e7e7      	b.n	403654 <_svfprintf_r+0x91c>
  403684:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403686:	9a08      	ldr	r2, [sp, #32]
  403688:	1a9f      	subs	r7, r3, r2
  40368a:	2f00      	cmp	r7, #0
  40368c:	f77f ace5 	ble.w	40305a <_svfprintf_r+0x322>
  403690:	2f10      	cmp	r7, #16
  403692:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403694:	4db6      	ldr	r5, [pc, #728]	; (403970 <_svfprintf_r+0xc38>)
  403696:	dd27      	ble.n	4036e8 <_svfprintf_r+0x9b0>
  403698:	4642      	mov	r2, r8
  40369a:	4621      	mov	r1, r4
  40369c:	46b0      	mov	r8, r6
  40369e:	f04f 0b10 	mov.w	fp, #16
  4036a2:	462e      	mov	r6, r5
  4036a4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4036a6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4036a8:	e004      	b.n	4036b4 <_svfprintf_r+0x97c>
  4036aa:	3f10      	subs	r7, #16
  4036ac:	2f10      	cmp	r7, #16
  4036ae:	f102 0208 	add.w	r2, r2, #8
  4036b2:	dd15      	ble.n	4036e0 <_svfprintf_r+0x9a8>
  4036b4:	3301      	adds	r3, #1
  4036b6:	3110      	adds	r1, #16
  4036b8:	2b07      	cmp	r3, #7
  4036ba:	9127      	str	r1, [sp, #156]	; 0x9c
  4036bc:	9326      	str	r3, [sp, #152]	; 0x98
  4036be:	e882 0840 	stmia.w	r2, {r6, fp}
  4036c2:	ddf2      	ble.n	4036aa <_svfprintf_r+0x972>
  4036c4:	aa25      	add	r2, sp, #148	; 0x94
  4036c6:	4629      	mov	r1, r5
  4036c8:	4620      	mov	r0, r4
  4036ca:	f002 fd27 	bl	40611c <__ssprint_r>
  4036ce:	2800      	cmp	r0, #0
  4036d0:	f47f ac04 	bne.w	402edc <_svfprintf_r+0x1a4>
  4036d4:	3f10      	subs	r7, #16
  4036d6:	2f10      	cmp	r7, #16
  4036d8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4036da:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4036dc:	464a      	mov	r2, r9
  4036de:	dce9      	bgt.n	4036b4 <_svfprintf_r+0x97c>
  4036e0:	4635      	mov	r5, r6
  4036e2:	460c      	mov	r4, r1
  4036e4:	4646      	mov	r6, r8
  4036e6:	4690      	mov	r8, r2
  4036e8:	3301      	adds	r3, #1
  4036ea:	443c      	add	r4, r7
  4036ec:	2b07      	cmp	r3, #7
  4036ee:	9427      	str	r4, [sp, #156]	; 0x9c
  4036f0:	9326      	str	r3, [sp, #152]	; 0x98
  4036f2:	e888 00a0 	stmia.w	r8, {r5, r7}
  4036f6:	f300 8232 	bgt.w	403b5e <_svfprintf_r+0xe26>
  4036fa:	f108 0808 	add.w	r8, r8, #8
  4036fe:	e4ac      	b.n	40305a <_svfprintf_r+0x322>
  403700:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403702:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403704:	2b01      	cmp	r3, #1
  403706:	f340 81fe 	ble.w	403b06 <_svfprintf_r+0xdce>
  40370a:	3701      	adds	r7, #1
  40370c:	3401      	adds	r4, #1
  40370e:	2301      	movs	r3, #1
  403710:	2f07      	cmp	r7, #7
  403712:	9427      	str	r4, [sp, #156]	; 0x9c
  403714:	9726      	str	r7, [sp, #152]	; 0x98
  403716:	f8c8 6000 	str.w	r6, [r8]
  40371a:	f8c8 3004 	str.w	r3, [r8, #4]
  40371e:	f300 8203 	bgt.w	403b28 <_svfprintf_r+0xdf0>
  403722:	f108 0808 	add.w	r8, r8, #8
  403726:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403728:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  40372a:	f8c8 3000 	str.w	r3, [r8]
  40372e:	3701      	adds	r7, #1
  403730:	4414      	add	r4, r2
  403732:	2f07      	cmp	r7, #7
  403734:	9427      	str	r4, [sp, #156]	; 0x9c
  403736:	9726      	str	r7, [sp, #152]	; 0x98
  403738:	f8c8 2004 	str.w	r2, [r8, #4]
  40373c:	f300 8200 	bgt.w	403b40 <_svfprintf_r+0xe08>
  403740:	f108 0808 	add.w	r8, r8, #8
  403744:	a815      	add	r0, sp, #84	; 0x54
  403746:	c80d      	ldmia	r0, {r0, r2, r3}
  403748:	9914      	ldr	r1, [sp, #80]	; 0x50
  40374a:	f003 fd7b 	bl	407244 <__aeabi_dcmpeq>
  40374e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403750:	2800      	cmp	r0, #0
  403752:	f040 8101 	bne.w	403958 <_svfprintf_r+0xc20>
  403756:	3b01      	subs	r3, #1
  403758:	3701      	adds	r7, #1
  40375a:	3601      	adds	r6, #1
  40375c:	441c      	add	r4, r3
  40375e:	2f07      	cmp	r7, #7
  403760:	9726      	str	r7, [sp, #152]	; 0x98
  403762:	9427      	str	r4, [sp, #156]	; 0x9c
  403764:	f8c8 6000 	str.w	r6, [r8]
  403768:	f8c8 3004 	str.w	r3, [r8, #4]
  40376c:	f300 8127 	bgt.w	4039be <_svfprintf_r+0xc86>
  403770:	f108 0808 	add.w	r8, r8, #8
  403774:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  403776:	f8c8 2004 	str.w	r2, [r8, #4]
  40377a:	3701      	adds	r7, #1
  40377c:	4414      	add	r4, r2
  40377e:	ab21      	add	r3, sp, #132	; 0x84
  403780:	2f07      	cmp	r7, #7
  403782:	9427      	str	r4, [sp, #156]	; 0x9c
  403784:	9726      	str	r7, [sp, #152]	; 0x98
  403786:	f8c8 3000 	str.w	r3, [r8]
  40378a:	f77f acb3 	ble.w	4030f4 <_svfprintf_r+0x3bc>
  40378e:	aa25      	add	r2, sp, #148	; 0x94
  403790:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403792:	980c      	ldr	r0, [sp, #48]	; 0x30
  403794:	f002 fcc2 	bl	40611c <__ssprint_r>
  403798:	2800      	cmp	r0, #0
  40379a:	f47f ab9f 	bne.w	402edc <_svfprintf_r+0x1a4>
  40379e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4037a0:	46c8      	mov	r8, r9
  4037a2:	e4a9      	b.n	4030f8 <_svfprintf_r+0x3c0>
  4037a4:	aa25      	add	r2, sp, #148	; 0x94
  4037a6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4037a8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4037aa:	f002 fcb7 	bl	40611c <__ssprint_r>
  4037ae:	2800      	cmp	r0, #0
  4037b0:	f43f aceb 	beq.w	40318a <_svfprintf_r+0x452>
  4037b4:	f7ff bb92 	b.w	402edc <_svfprintf_r+0x1a4>
  4037b8:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4037bc:	2b01      	cmp	r3, #1
  4037be:	f000 8134 	beq.w	403a2a <_svfprintf_r+0xcf2>
  4037c2:	2b02      	cmp	r3, #2
  4037c4:	d125      	bne.n	403812 <_svfprintf_r+0xada>
  4037c6:	f8cd b01c 	str.w	fp, [sp, #28]
  4037ca:	2400      	movs	r4, #0
  4037cc:	2500      	movs	r5, #0
  4037ce:	e61e      	b.n	40340e <_svfprintf_r+0x6d6>
  4037d0:	aa25      	add	r2, sp, #148	; 0x94
  4037d2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4037d4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4037d6:	f002 fca1 	bl	40611c <__ssprint_r>
  4037da:	2800      	cmp	r0, #0
  4037dc:	f47f ab7e 	bne.w	402edc <_svfprintf_r+0x1a4>
  4037e0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4037e2:	46c8      	mov	r8, r9
  4037e4:	e475      	b.n	4030d2 <_svfprintf_r+0x39a>
  4037e6:	aa25      	add	r2, sp, #148	; 0x94
  4037e8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4037ea:	980c      	ldr	r0, [sp, #48]	; 0x30
  4037ec:	f002 fc96 	bl	40611c <__ssprint_r>
  4037f0:	2800      	cmp	r0, #0
  4037f2:	f47f ab73 	bne.w	402edc <_svfprintf_r+0x1a4>
  4037f6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4037f8:	46c8      	mov	r8, r9
  4037fa:	e41b      	b.n	403034 <_svfprintf_r+0x2fc>
  4037fc:	aa25      	add	r2, sp, #148	; 0x94
  4037fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403800:	980c      	ldr	r0, [sp, #48]	; 0x30
  403802:	f002 fc8b 	bl	40611c <__ssprint_r>
  403806:	2800      	cmp	r0, #0
  403808:	f47f ab68 	bne.w	402edc <_svfprintf_r+0x1a4>
  40380c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40380e:	46c8      	mov	r8, r9
  403810:	e420      	b.n	403054 <_svfprintf_r+0x31c>
  403812:	f8cd b01c 	str.w	fp, [sp, #28]
  403816:	2400      	movs	r4, #0
  403818:	2500      	movs	r5, #0
  40381a:	4649      	mov	r1, r9
  40381c:	e000      	b.n	403820 <_svfprintf_r+0xae8>
  40381e:	4631      	mov	r1, r6
  403820:	08e2      	lsrs	r2, r4, #3
  403822:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  403826:	08e8      	lsrs	r0, r5, #3
  403828:	f004 0307 	and.w	r3, r4, #7
  40382c:	4605      	mov	r5, r0
  40382e:	4614      	mov	r4, r2
  403830:	3330      	adds	r3, #48	; 0x30
  403832:	ea54 0205 	orrs.w	r2, r4, r5
  403836:	f801 3c01 	strb.w	r3, [r1, #-1]
  40383a:	f101 36ff 	add.w	r6, r1, #4294967295
  40383e:	d1ee      	bne.n	40381e <_svfprintf_r+0xae6>
  403840:	9a07      	ldr	r2, [sp, #28]
  403842:	07d2      	lsls	r2, r2, #31
  403844:	f57f adf3 	bpl.w	40342e <_svfprintf_r+0x6f6>
  403848:	2b30      	cmp	r3, #48	; 0x30
  40384a:	f43f adf0 	beq.w	40342e <_svfprintf_r+0x6f6>
  40384e:	3902      	subs	r1, #2
  403850:	2330      	movs	r3, #48	; 0x30
  403852:	f806 3c01 	strb.w	r3, [r6, #-1]
  403856:	eba9 0301 	sub.w	r3, r9, r1
  40385a:	930e      	str	r3, [sp, #56]	; 0x38
  40385c:	460e      	mov	r6, r1
  40385e:	f7ff bb7b 	b.w	402f58 <_svfprintf_r+0x220>
  403862:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403864:	2900      	cmp	r1, #0
  403866:	f340 822e 	ble.w	403cc6 <_svfprintf_r+0xf8e>
  40386a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40386c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40386e:	4293      	cmp	r3, r2
  403870:	bfa8      	it	ge
  403872:	4613      	movge	r3, r2
  403874:	2b00      	cmp	r3, #0
  403876:	461f      	mov	r7, r3
  403878:	dd0d      	ble.n	403896 <_svfprintf_r+0xb5e>
  40387a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40387c:	f8c8 6000 	str.w	r6, [r8]
  403880:	3301      	adds	r3, #1
  403882:	443c      	add	r4, r7
  403884:	2b07      	cmp	r3, #7
  403886:	9427      	str	r4, [sp, #156]	; 0x9c
  403888:	f8c8 7004 	str.w	r7, [r8, #4]
  40388c:	9326      	str	r3, [sp, #152]	; 0x98
  40388e:	f300 831f 	bgt.w	403ed0 <_svfprintf_r+0x1198>
  403892:	f108 0808 	add.w	r8, r8, #8
  403896:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403898:	2f00      	cmp	r7, #0
  40389a:	bfa8      	it	ge
  40389c:	1bdb      	subge	r3, r3, r7
  40389e:	2b00      	cmp	r3, #0
  4038a0:	461f      	mov	r7, r3
  4038a2:	f340 80d6 	ble.w	403a52 <_svfprintf_r+0xd1a>
  4038a6:	2f10      	cmp	r7, #16
  4038a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4038aa:	4d31      	ldr	r5, [pc, #196]	; (403970 <_svfprintf_r+0xc38>)
  4038ac:	f340 81ed 	ble.w	403c8a <_svfprintf_r+0xf52>
  4038b0:	4642      	mov	r2, r8
  4038b2:	4621      	mov	r1, r4
  4038b4:	46b0      	mov	r8, r6
  4038b6:	f04f 0b10 	mov.w	fp, #16
  4038ba:	462e      	mov	r6, r5
  4038bc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4038be:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4038c0:	e004      	b.n	4038cc <_svfprintf_r+0xb94>
  4038c2:	3208      	adds	r2, #8
  4038c4:	3f10      	subs	r7, #16
  4038c6:	2f10      	cmp	r7, #16
  4038c8:	f340 81db 	ble.w	403c82 <_svfprintf_r+0xf4a>
  4038cc:	3301      	adds	r3, #1
  4038ce:	3110      	adds	r1, #16
  4038d0:	2b07      	cmp	r3, #7
  4038d2:	9127      	str	r1, [sp, #156]	; 0x9c
  4038d4:	9326      	str	r3, [sp, #152]	; 0x98
  4038d6:	e882 0840 	stmia.w	r2, {r6, fp}
  4038da:	ddf2      	ble.n	4038c2 <_svfprintf_r+0xb8a>
  4038dc:	aa25      	add	r2, sp, #148	; 0x94
  4038de:	4629      	mov	r1, r5
  4038e0:	4620      	mov	r0, r4
  4038e2:	f002 fc1b 	bl	40611c <__ssprint_r>
  4038e6:	2800      	cmp	r0, #0
  4038e8:	f47f aaf8 	bne.w	402edc <_svfprintf_r+0x1a4>
  4038ec:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4038ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4038f0:	464a      	mov	r2, r9
  4038f2:	e7e7      	b.n	4038c4 <_svfprintf_r+0xb8c>
  4038f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4038f6:	930e      	str	r3, [sp, #56]	; 0x38
  4038f8:	464e      	mov	r6, r9
  4038fa:	f7ff bb2d 	b.w	402f58 <_svfprintf_r+0x220>
  4038fe:	2d00      	cmp	r5, #0
  403900:	bf08      	it	eq
  403902:	2c0a      	cmpeq	r4, #10
  403904:	f0c0 808f 	bcc.w	403a26 <_svfprintf_r+0xcee>
  403908:	464e      	mov	r6, r9
  40390a:	4620      	mov	r0, r4
  40390c:	4629      	mov	r1, r5
  40390e:	220a      	movs	r2, #10
  403910:	2300      	movs	r3, #0
  403912:	f7fe fd2b 	bl	40236c <__aeabi_uldivmod>
  403916:	3230      	adds	r2, #48	; 0x30
  403918:	f806 2d01 	strb.w	r2, [r6, #-1]!
  40391c:	4620      	mov	r0, r4
  40391e:	4629      	mov	r1, r5
  403920:	2300      	movs	r3, #0
  403922:	220a      	movs	r2, #10
  403924:	f7fe fd22 	bl	40236c <__aeabi_uldivmod>
  403928:	4604      	mov	r4, r0
  40392a:	460d      	mov	r5, r1
  40392c:	ea54 0305 	orrs.w	r3, r4, r5
  403930:	d1eb      	bne.n	40390a <_svfprintf_r+0xbd2>
  403932:	eba9 0306 	sub.w	r3, r9, r6
  403936:	930e      	str	r3, [sp, #56]	; 0x38
  403938:	f7ff bb0e 	b.w	402f58 <_svfprintf_r+0x220>
  40393c:	aa25      	add	r2, sp, #148	; 0x94
  40393e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403940:	980c      	ldr	r0, [sp, #48]	; 0x30
  403942:	f002 fbeb 	bl	40611c <__ssprint_r>
  403946:	2800      	cmp	r0, #0
  403948:	f47f aac8 	bne.w	402edc <_svfprintf_r+0x1a4>
  40394c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403950:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403952:	46c8      	mov	r8, r9
  403954:	f7ff bb5e 	b.w	403014 <_svfprintf_r+0x2dc>
  403958:	1e5e      	subs	r6, r3, #1
  40395a:	2e00      	cmp	r6, #0
  40395c:	f77f af0a 	ble.w	403774 <_svfprintf_r+0xa3c>
  403960:	2e10      	cmp	r6, #16
  403962:	4d03      	ldr	r5, [pc, #12]	; (403970 <_svfprintf_r+0xc38>)
  403964:	dd22      	ble.n	4039ac <_svfprintf_r+0xc74>
  403966:	4622      	mov	r2, r4
  403968:	f04f 0b10 	mov.w	fp, #16
  40396c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40396e:	e006      	b.n	40397e <_svfprintf_r+0xc46>
  403970:	00407524 	.word	0x00407524
  403974:	3e10      	subs	r6, #16
  403976:	2e10      	cmp	r6, #16
  403978:	f108 0808 	add.w	r8, r8, #8
  40397c:	dd15      	ble.n	4039aa <_svfprintf_r+0xc72>
  40397e:	3701      	adds	r7, #1
  403980:	3210      	adds	r2, #16
  403982:	2f07      	cmp	r7, #7
  403984:	9227      	str	r2, [sp, #156]	; 0x9c
  403986:	9726      	str	r7, [sp, #152]	; 0x98
  403988:	e888 0820 	stmia.w	r8, {r5, fp}
  40398c:	ddf2      	ble.n	403974 <_svfprintf_r+0xc3c>
  40398e:	aa25      	add	r2, sp, #148	; 0x94
  403990:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403992:	4620      	mov	r0, r4
  403994:	f002 fbc2 	bl	40611c <__ssprint_r>
  403998:	2800      	cmp	r0, #0
  40399a:	f47f aa9f 	bne.w	402edc <_svfprintf_r+0x1a4>
  40399e:	3e10      	subs	r6, #16
  4039a0:	2e10      	cmp	r6, #16
  4039a2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4039a4:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4039a6:	46c8      	mov	r8, r9
  4039a8:	dce9      	bgt.n	40397e <_svfprintf_r+0xc46>
  4039aa:	4614      	mov	r4, r2
  4039ac:	3701      	adds	r7, #1
  4039ae:	4434      	add	r4, r6
  4039b0:	2f07      	cmp	r7, #7
  4039b2:	9427      	str	r4, [sp, #156]	; 0x9c
  4039b4:	9726      	str	r7, [sp, #152]	; 0x98
  4039b6:	e888 0060 	stmia.w	r8, {r5, r6}
  4039ba:	f77f aed9 	ble.w	403770 <_svfprintf_r+0xa38>
  4039be:	aa25      	add	r2, sp, #148	; 0x94
  4039c0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4039c2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4039c4:	f002 fbaa 	bl	40611c <__ssprint_r>
  4039c8:	2800      	cmp	r0, #0
  4039ca:	f47f aa87 	bne.w	402edc <_svfprintf_r+0x1a4>
  4039ce:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4039d0:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4039d2:	46c8      	mov	r8, r9
  4039d4:	e6ce      	b.n	403774 <_svfprintf_r+0xa3c>
  4039d6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4039d8:	6814      	ldr	r4, [r2, #0]
  4039da:	4613      	mov	r3, r2
  4039dc:	3304      	adds	r3, #4
  4039de:	17e5      	asrs	r5, r4, #31
  4039e0:	930f      	str	r3, [sp, #60]	; 0x3c
  4039e2:	4622      	mov	r2, r4
  4039e4:	462b      	mov	r3, r5
  4039e6:	e4fa      	b.n	4033de <_svfprintf_r+0x6a6>
  4039e8:	3204      	adds	r2, #4
  4039ea:	681c      	ldr	r4, [r3, #0]
  4039ec:	920f      	str	r2, [sp, #60]	; 0x3c
  4039ee:	2301      	movs	r3, #1
  4039f0:	2500      	movs	r5, #0
  4039f2:	f7ff ba94 	b.w	402f1e <_svfprintf_r+0x1e6>
  4039f6:	681c      	ldr	r4, [r3, #0]
  4039f8:	3304      	adds	r3, #4
  4039fa:	930f      	str	r3, [sp, #60]	; 0x3c
  4039fc:	2500      	movs	r5, #0
  4039fe:	e421      	b.n	403244 <_svfprintf_r+0x50c>
  403a00:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403a02:	460a      	mov	r2, r1
  403a04:	3204      	adds	r2, #4
  403a06:	680c      	ldr	r4, [r1, #0]
  403a08:	920f      	str	r2, [sp, #60]	; 0x3c
  403a0a:	2500      	movs	r5, #0
  403a0c:	f7ff ba87 	b.w	402f1e <_svfprintf_r+0x1e6>
  403a10:	4614      	mov	r4, r2
  403a12:	3301      	adds	r3, #1
  403a14:	4434      	add	r4, r6
  403a16:	2b07      	cmp	r3, #7
  403a18:	9427      	str	r4, [sp, #156]	; 0x9c
  403a1a:	9326      	str	r3, [sp, #152]	; 0x98
  403a1c:	e888 0060 	stmia.w	r8, {r5, r6}
  403a20:	f77f ab68 	ble.w	4030f4 <_svfprintf_r+0x3bc>
  403a24:	e6b3      	b.n	40378e <_svfprintf_r+0xa56>
  403a26:	f8dd b01c 	ldr.w	fp, [sp, #28]
  403a2a:	f8cd b01c 	str.w	fp, [sp, #28]
  403a2e:	ae42      	add	r6, sp, #264	; 0x108
  403a30:	3430      	adds	r4, #48	; 0x30
  403a32:	2301      	movs	r3, #1
  403a34:	f806 4d41 	strb.w	r4, [r6, #-65]!
  403a38:	930e      	str	r3, [sp, #56]	; 0x38
  403a3a:	f7ff ba8d 	b.w	402f58 <_svfprintf_r+0x220>
  403a3e:	aa25      	add	r2, sp, #148	; 0x94
  403a40:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403a42:	980c      	ldr	r0, [sp, #48]	; 0x30
  403a44:	f002 fb6a 	bl	40611c <__ssprint_r>
  403a48:	2800      	cmp	r0, #0
  403a4a:	f47f aa47 	bne.w	402edc <_svfprintf_r+0x1a4>
  403a4e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403a50:	46c8      	mov	r8, r9
  403a52:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403a54:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403a56:	429a      	cmp	r2, r3
  403a58:	db44      	blt.n	403ae4 <_svfprintf_r+0xdac>
  403a5a:	9b07      	ldr	r3, [sp, #28]
  403a5c:	07d9      	lsls	r1, r3, #31
  403a5e:	d441      	bmi.n	403ae4 <_svfprintf_r+0xdac>
  403a60:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403a62:	9812      	ldr	r0, [sp, #72]	; 0x48
  403a64:	1a9a      	subs	r2, r3, r2
  403a66:	1a1d      	subs	r5, r3, r0
  403a68:	4295      	cmp	r5, r2
  403a6a:	bfa8      	it	ge
  403a6c:	4615      	movge	r5, r2
  403a6e:	2d00      	cmp	r5, #0
  403a70:	dd0e      	ble.n	403a90 <_svfprintf_r+0xd58>
  403a72:	9926      	ldr	r1, [sp, #152]	; 0x98
  403a74:	f8c8 5004 	str.w	r5, [r8, #4]
  403a78:	3101      	adds	r1, #1
  403a7a:	4406      	add	r6, r0
  403a7c:	442c      	add	r4, r5
  403a7e:	2907      	cmp	r1, #7
  403a80:	f8c8 6000 	str.w	r6, [r8]
  403a84:	9427      	str	r4, [sp, #156]	; 0x9c
  403a86:	9126      	str	r1, [sp, #152]	; 0x98
  403a88:	f300 823b 	bgt.w	403f02 <_svfprintf_r+0x11ca>
  403a8c:	f108 0808 	add.w	r8, r8, #8
  403a90:	2d00      	cmp	r5, #0
  403a92:	bfac      	ite	ge
  403a94:	1b56      	subge	r6, r2, r5
  403a96:	4616      	movlt	r6, r2
  403a98:	2e00      	cmp	r6, #0
  403a9a:	f77f ab2d 	ble.w	4030f8 <_svfprintf_r+0x3c0>
  403a9e:	2e10      	cmp	r6, #16
  403aa0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403aa2:	4db0      	ldr	r5, [pc, #704]	; (403d64 <_svfprintf_r+0x102c>)
  403aa4:	ddb5      	ble.n	403a12 <_svfprintf_r+0xcda>
  403aa6:	4622      	mov	r2, r4
  403aa8:	2710      	movs	r7, #16
  403aaa:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403aae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  403ab0:	e004      	b.n	403abc <_svfprintf_r+0xd84>
  403ab2:	f108 0808 	add.w	r8, r8, #8
  403ab6:	3e10      	subs	r6, #16
  403ab8:	2e10      	cmp	r6, #16
  403aba:	dda9      	ble.n	403a10 <_svfprintf_r+0xcd8>
  403abc:	3301      	adds	r3, #1
  403abe:	3210      	adds	r2, #16
  403ac0:	2b07      	cmp	r3, #7
  403ac2:	9227      	str	r2, [sp, #156]	; 0x9c
  403ac4:	9326      	str	r3, [sp, #152]	; 0x98
  403ac6:	e888 00a0 	stmia.w	r8, {r5, r7}
  403aca:	ddf2      	ble.n	403ab2 <_svfprintf_r+0xd7a>
  403acc:	aa25      	add	r2, sp, #148	; 0x94
  403ace:	4621      	mov	r1, r4
  403ad0:	4658      	mov	r0, fp
  403ad2:	f002 fb23 	bl	40611c <__ssprint_r>
  403ad6:	2800      	cmp	r0, #0
  403ad8:	f47f aa00 	bne.w	402edc <_svfprintf_r+0x1a4>
  403adc:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403ade:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403ae0:	46c8      	mov	r8, r9
  403ae2:	e7e8      	b.n	403ab6 <_svfprintf_r+0xd7e>
  403ae4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403ae6:	9819      	ldr	r0, [sp, #100]	; 0x64
  403ae8:	991a      	ldr	r1, [sp, #104]	; 0x68
  403aea:	f8c8 1000 	str.w	r1, [r8]
  403aee:	3301      	adds	r3, #1
  403af0:	4404      	add	r4, r0
  403af2:	2b07      	cmp	r3, #7
  403af4:	9427      	str	r4, [sp, #156]	; 0x9c
  403af6:	f8c8 0004 	str.w	r0, [r8, #4]
  403afa:	9326      	str	r3, [sp, #152]	; 0x98
  403afc:	f300 81f5 	bgt.w	403eea <_svfprintf_r+0x11b2>
  403b00:	f108 0808 	add.w	r8, r8, #8
  403b04:	e7ac      	b.n	403a60 <_svfprintf_r+0xd28>
  403b06:	9b07      	ldr	r3, [sp, #28]
  403b08:	07da      	lsls	r2, r3, #31
  403b0a:	f53f adfe 	bmi.w	40370a <_svfprintf_r+0x9d2>
  403b0e:	3701      	adds	r7, #1
  403b10:	3401      	adds	r4, #1
  403b12:	2301      	movs	r3, #1
  403b14:	2f07      	cmp	r7, #7
  403b16:	9427      	str	r4, [sp, #156]	; 0x9c
  403b18:	9726      	str	r7, [sp, #152]	; 0x98
  403b1a:	f8c8 6000 	str.w	r6, [r8]
  403b1e:	f8c8 3004 	str.w	r3, [r8, #4]
  403b22:	f77f ae25 	ble.w	403770 <_svfprintf_r+0xa38>
  403b26:	e74a      	b.n	4039be <_svfprintf_r+0xc86>
  403b28:	aa25      	add	r2, sp, #148	; 0x94
  403b2a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403b2c:	980c      	ldr	r0, [sp, #48]	; 0x30
  403b2e:	f002 faf5 	bl	40611c <__ssprint_r>
  403b32:	2800      	cmp	r0, #0
  403b34:	f47f a9d2 	bne.w	402edc <_svfprintf_r+0x1a4>
  403b38:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403b3a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403b3c:	46c8      	mov	r8, r9
  403b3e:	e5f2      	b.n	403726 <_svfprintf_r+0x9ee>
  403b40:	aa25      	add	r2, sp, #148	; 0x94
  403b42:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403b44:	980c      	ldr	r0, [sp, #48]	; 0x30
  403b46:	f002 fae9 	bl	40611c <__ssprint_r>
  403b4a:	2800      	cmp	r0, #0
  403b4c:	f47f a9c6 	bne.w	402edc <_svfprintf_r+0x1a4>
  403b50:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403b52:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403b54:	46c8      	mov	r8, r9
  403b56:	e5f5      	b.n	403744 <_svfprintf_r+0xa0c>
  403b58:	464e      	mov	r6, r9
  403b5a:	f7ff b9fd 	b.w	402f58 <_svfprintf_r+0x220>
  403b5e:	aa25      	add	r2, sp, #148	; 0x94
  403b60:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403b62:	980c      	ldr	r0, [sp, #48]	; 0x30
  403b64:	f002 fada 	bl	40611c <__ssprint_r>
  403b68:	2800      	cmp	r0, #0
  403b6a:	f47f a9b7 	bne.w	402edc <_svfprintf_r+0x1a4>
  403b6e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403b70:	46c8      	mov	r8, r9
  403b72:	f7ff ba72 	b.w	40305a <_svfprintf_r+0x322>
  403b76:	9c15      	ldr	r4, [sp, #84]	; 0x54
  403b78:	4622      	mov	r2, r4
  403b7a:	4620      	mov	r0, r4
  403b7c:	9c14      	ldr	r4, [sp, #80]	; 0x50
  403b7e:	4623      	mov	r3, r4
  403b80:	4621      	mov	r1, r4
  403b82:	f003 fb91 	bl	4072a8 <__aeabi_dcmpun>
  403b86:	2800      	cmp	r0, #0
  403b88:	f040 8286 	bne.w	404098 <_svfprintf_r+0x1360>
  403b8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b8e:	3301      	adds	r3, #1
  403b90:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403b92:	f023 0320 	bic.w	r3, r3, #32
  403b96:	930e      	str	r3, [sp, #56]	; 0x38
  403b98:	f000 81e2 	beq.w	403f60 <_svfprintf_r+0x1228>
  403b9c:	2b47      	cmp	r3, #71	; 0x47
  403b9e:	f000 811e 	beq.w	403dde <_svfprintf_r+0x10a6>
  403ba2:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  403ba6:	9307      	str	r3, [sp, #28]
  403ba8:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403baa:	1e1f      	subs	r7, r3, #0
  403bac:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403bae:	9308      	str	r3, [sp, #32]
  403bb0:	bfbb      	ittet	lt
  403bb2:	463b      	movlt	r3, r7
  403bb4:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  403bb8:	2300      	movge	r3, #0
  403bba:	232d      	movlt	r3, #45	; 0x2d
  403bbc:	9310      	str	r3, [sp, #64]	; 0x40
  403bbe:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403bc0:	2b66      	cmp	r3, #102	; 0x66
  403bc2:	f000 81bb 	beq.w	403f3c <_svfprintf_r+0x1204>
  403bc6:	2b46      	cmp	r3, #70	; 0x46
  403bc8:	f000 80df 	beq.w	403d8a <_svfprintf_r+0x1052>
  403bcc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403bce:	9a08      	ldr	r2, [sp, #32]
  403bd0:	2b45      	cmp	r3, #69	; 0x45
  403bd2:	bf0c      	ite	eq
  403bd4:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  403bd6:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  403bd8:	a823      	add	r0, sp, #140	; 0x8c
  403bda:	a920      	add	r1, sp, #128	; 0x80
  403bdc:	bf08      	it	eq
  403bde:	1c5d      	addeq	r5, r3, #1
  403be0:	9004      	str	r0, [sp, #16]
  403be2:	9103      	str	r1, [sp, #12]
  403be4:	a81f      	add	r0, sp, #124	; 0x7c
  403be6:	2102      	movs	r1, #2
  403be8:	463b      	mov	r3, r7
  403bea:	9002      	str	r0, [sp, #8]
  403bec:	9501      	str	r5, [sp, #4]
  403bee:	9100      	str	r1, [sp, #0]
  403bf0:	980c      	ldr	r0, [sp, #48]	; 0x30
  403bf2:	f000 fb75 	bl	4042e0 <_dtoa_r>
  403bf6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403bf8:	2b67      	cmp	r3, #103	; 0x67
  403bfa:	4606      	mov	r6, r0
  403bfc:	f040 81e0 	bne.w	403fc0 <_svfprintf_r+0x1288>
  403c00:	f01b 0f01 	tst.w	fp, #1
  403c04:	f000 8246 	beq.w	404094 <_svfprintf_r+0x135c>
  403c08:	1974      	adds	r4, r6, r5
  403c0a:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403c0c:	9808      	ldr	r0, [sp, #32]
  403c0e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403c10:	4639      	mov	r1, r7
  403c12:	f003 fb17 	bl	407244 <__aeabi_dcmpeq>
  403c16:	2800      	cmp	r0, #0
  403c18:	f040 8165 	bne.w	403ee6 <_svfprintf_r+0x11ae>
  403c1c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403c1e:	42a3      	cmp	r3, r4
  403c20:	d206      	bcs.n	403c30 <_svfprintf_r+0xef8>
  403c22:	2130      	movs	r1, #48	; 0x30
  403c24:	1c5a      	adds	r2, r3, #1
  403c26:	9223      	str	r2, [sp, #140]	; 0x8c
  403c28:	7019      	strb	r1, [r3, #0]
  403c2a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403c2c:	429c      	cmp	r4, r3
  403c2e:	d8f9      	bhi.n	403c24 <_svfprintf_r+0xeec>
  403c30:	1b9b      	subs	r3, r3, r6
  403c32:	9313      	str	r3, [sp, #76]	; 0x4c
  403c34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403c36:	2b47      	cmp	r3, #71	; 0x47
  403c38:	f000 80e9 	beq.w	403e0e <_svfprintf_r+0x10d6>
  403c3c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403c3e:	2b65      	cmp	r3, #101	; 0x65
  403c40:	f340 81cd 	ble.w	403fde <_svfprintf_r+0x12a6>
  403c44:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403c46:	2b66      	cmp	r3, #102	; 0x66
  403c48:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403c4a:	9312      	str	r3, [sp, #72]	; 0x48
  403c4c:	f000 819e 	beq.w	403f8c <_svfprintf_r+0x1254>
  403c50:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403c52:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403c54:	4619      	mov	r1, r3
  403c56:	4291      	cmp	r1, r2
  403c58:	f300 818a 	bgt.w	403f70 <_svfprintf_r+0x1238>
  403c5c:	f01b 0f01 	tst.w	fp, #1
  403c60:	f040 8213 	bne.w	40408a <_svfprintf_r+0x1352>
  403c64:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403c68:	9308      	str	r3, [sp, #32]
  403c6a:	2367      	movs	r3, #103	; 0x67
  403c6c:	920e      	str	r2, [sp, #56]	; 0x38
  403c6e:	9311      	str	r3, [sp, #68]	; 0x44
  403c70:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403c72:	2b00      	cmp	r3, #0
  403c74:	f040 80c4 	bne.w	403e00 <_svfprintf_r+0x10c8>
  403c78:	930a      	str	r3, [sp, #40]	; 0x28
  403c7a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403c7e:	f7ff b973 	b.w	402f68 <_svfprintf_r+0x230>
  403c82:	4635      	mov	r5, r6
  403c84:	460c      	mov	r4, r1
  403c86:	4646      	mov	r6, r8
  403c88:	4690      	mov	r8, r2
  403c8a:	3301      	adds	r3, #1
  403c8c:	443c      	add	r4, r7
  403c8e:	2b07      	cmp	r3, #7
  403c90:	9427      	str	r4, [sp, #156]	; 0x9c
  403c92:	9326      	str	r3, [sp, #152]	; 0x98
  403c94:	e888 00a0 	stmia.w	r8, {r5, r7}
  403c98:	f73f aed1 	bgt.w	403a3e <_svfprintf_r+0xd06>
  403c9c:	f108 0808 	add.w	r8, r8, #8
  403ca0:	e6d7      	b.n	403a52 <_svfprintf_r+0xd1a>
  403ca2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403ca4:	6813      	ldr	r3, [r2, #0]
  403ca6:	3204      	adds	r2, #4
  403ca8:	920f      	str	r2, [sp, #60]	; 0x3c
  403caa:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403cac:	601a      	str	r2, [r3, #0]
  403cae:	f7ff b86a 	b.w	402d86 <_svfprintf_r+0x4e>
  403cb2:	aa25      	add	r2, sp, #148	; 0x94
  403cb4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403cb6:	980c      	ldr	r0, [sp, #48]	; 0x30
  403cb8:	f002 fa30 	bl	40611c <__ssprint_r>
  403cbc:	2800      	cmp	r0, #0
  403cbe:	f47f a90d 	bne.w	402edc <_svfprintf_r+0x1a4>
  403cc2:	46c8      	mov	r8, r9
  403cc4:	e48d      	b.n	4035e2 <_svfprintf_r+0x8aa>
  403cc6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403cc8:	4a27      	ldr	r2, [pc, #156]	; (403d68 <_svfprintf_r+0x1030>)
  403cca:	f8c8 2000 	str.w	r2, [r8]
  403cce:	3301      	adds	r3, #1
  403cd0:	3401      	adds	r4, #1
  403cd2:	2201      	movs	r2, #1
  403cd4:	2b07      	cmp	r3, #7
  403cd6:	9427      	str	r4, [sp, #156]	; 0x9c
  403cd8:	9326      	str	r3, [sp, #152]	; 0x98
  403cda:	f8c8 2004 	str.w	r2, [r8, #4]
  403cde:	dc72      	bgt.n	403dc6 <_svfprintf_r+0x108e>
  403ce0:	f108 0808 	add.w	r8, r8, #8
  403ce4:	b929      	cbnz	r1, 403cf2 <_svfprintf_r+0xfba>
  403ce6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403ce8:	b91b      	cbnz	r3, 403cf2 <_svfprintf_r+0xfba>
  403cea:	9b07      	ldr	r3, [sp, #28]
  403cec:	07d8      	lsls	r0, r3, #31
  403cee:	f57f aa03 	bpl.w	4030f8 <_svfprintf_r+0x3c0>
  403cf2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403cf4:	9819      	ldr	r0, [sp, #100]	; 0x64
  403cf6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  403cf8:	f8c8 2000 	str.w	r2, [r8]
  403cfc:	3301      	adds	r3, #1
  403cfe:	4602      	mov	r2, r0
  403d00:	4422      	add	r2, r4
  403d02:	2b07      	cmp	r3, #7
  403d04:	9227      	str	r2, [sp, #156]	; 0x9c
  403d06:	f8c8 0004 	str.w	r0, [r8, #4]
  403d0a:	9326      	str	r3, [sp, #152]	; 0x98
  403d0c:	f300 818d 	bgt.w	40402a <_svfprintf_r+0x12f2>
  403d10:	f108 0808 	add.w	r8, r8, #8
  403d14:	2900      	cmp	r1, #0
  403d16:	f2c0 8165 	blt.w	403fe4 <_svfprintf_r+0x12ac>
  403d1a:	9913      	ldr	r1, [sp, #76]	; 0x4c
  403d1c:	f8c8 6000 	str.w	r6, [r8]
  403d20:	3301      	adds	r3, #1
  403d22:	188c      	adds	r4, r1, r2
  403d24:	2b07      	cmp	r3, #7
  403d26:	9427      	str	r4, [sp, #156]	; 0x9c
  403d28:	9326      	str	r3, [sp, #152]	; 0x98
  403d2a:	f8c8 1004 	str.w	r1, [r8, #4]
  403d2e:	f77f a9e1 	ble.w	4030f4 <_svfprintf_r+0x3bc>
  403d32:	e52c      	b.n	40378e <_svfprintf_r+0xa56>
  403d34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403d36:	9909      	ldr	r1, [sp, #36]	; 0x24
  403d38:	6813      	ldr	r3, [r2, #0]
  403d3a:	17cd      	asrs	r5, r1, #31
  403d3c:	4608      	mov	r0, r1
  403d3e:	3204      	adds	r2, #4
  403d40:	4629      	mov	r1, r5
  403d42:	920f      	str	r2, [sp, #60]	; 0x3c
  403d44:	e9c3 0100 	strd	r0, r1, [r3]
  403d48:	f7ff b81d 	b.w	402d86 <_svfprintf_r+0x4e>
  403d4c:	aa25      	add	r2, sp, #148	; 0x94
  403d4e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403d50:	980c      	ldr	r0, [sp, #48]	; 0x30
  403d52:	f002 f9e3 	bl	40611c <__ssprint_r>
  403d56:	2800      	cmp	r0, #0
  403d58:	f47f a8c0 	bne.w	402edc <_svfprintf_r+0x1a4>
  403d5c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403d5e:	46c8      	mov	r8, r9
  403d60:	e458      	b.n	403614 <_svfprintf_r+0x8dc>
  403d62:	bf00      	nop
  403d64:	00407524 	.word	0x00407524
  403d68:	00407510 	.word	0x00407510
  403d6c:	2140      	movs	r1, #64	; 0x40
  403d6e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403d70:	f001 fa0c 	bl	40518c <_malloc_r>
  403d74:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403d76:	6010      	str	r0, [r2, #0]
  403d78:	6110      	str	r0, [r2, #16]
  403d7a:	2800      	cmp	r0, #0
  403d7c:	f000 81f2 	beq.w	404164 <_svfprintf_r+0x142c>
  403d80:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403d82:	2340      	movs	r3, #64	; 0x40
  403d84:	6153      	str	r3, [r2, #20]
  403d86:	f7fe bfee 	b.w	402d66 <_svfprintf_r+0x2e>
  403d8a:	a823      	add	r0, sp, #140	; 0x8c
  403d8c:	a920      	add	r1, sp, #128	; 0x80
  403d8e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403d90:	9004      	str	r0, [sp, #16]
  403d92:	9103      	str	r1, [sp, #12]
  403d94:	a81f      	add	r0, sp, #124	; 0x7c
  403d96:	2103      	movs	r1, #3
  403d98:	9002      	str	r0, [sp, #8]
  403d9a:	9a08      	ldr	r2, [sp, #32]
  403d9c:	9401      	str	r4, [sp, #4]
  403d9e:	463b      	mov	r3, r7
  403da0:	9100      	str	r1, [sp, #0]
  403da2:	980c      	ldr	r0, [sp, #48]	; 0x30
  403da4:	f000 fa9c 	bl	4042e0 <_dtoa_r>
  403da8:	4625      	mov	r5, r4
  403daa:	4606      	mov	r6, r0
  403dac:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403dae:	2b46      	cmp	r3, #70	; 0x46
  403db0:	eb06 0405 	add.w	r4, r6, r5
  403db4:	f47f af29 	bne.w	403c0a <_svfprintf_r+0xed2>
  403db8:	7833      	ldrb	r3, [r6, #0]
  403dba:	2b30      	cmp	r3, #48	; 0x30
  403dbc:	f000 8178 	beq.w	4040b0 <_svfprintf_r+0x1378>
  403dc0:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  403dc2:	442c      	add	r4, r5
  403dc4:	e721      	b.n	403c0a <_svfprintf_r+0xed2>
  403dc6:	aa25      	add	r2, sp, #148	; 0x94
  403dc8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403dca:	980c      	ldr	r0, [sp, #48]	; 0x30
  403dcc:	f002 f9a6 	bl	40611c <__ssprint_r>
  403dd0:	2800      	cmp	r0, #0
  403dd2:	f47f a883 	bne.w	402edc <_svfprintf_r+0x1a4>
  403dd6:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403dd8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403dda:	46c8      	mov	r8, r9
  403ddc:	e782      	b.n	403ce4 <_svfprintf_r+0xfac>
  403dde:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403de0:	2b00      	cmp	r3, #0
  403de2:	bf08      	it	eq
  403de4:	2301      	moveq	r3, #1
  403de6:	930a      	str	r3, [sp, #40]	; 0x28
  403de8:	e6db      	b.n	403ba2 <_svfprintf_r+0xe6a>
  403dea:	4630      	mov	r0, r6
  403dec:	940a      	str	r4, [sp, #40]	; 0x28
  403dee:	f002 f927 	bl	406040 <strlen>
  403df2:	950f      	str	r5, [sp, #60]	; 0x3c
  403df4:	900e      	str	r0, [sp, #56]	; 0x38
  403df6:	f8cd b01c 	str.w	fp, [sp, #28]
  403dfa:	4603      	mov	r3, r0
  403dfc:	f7ff b9f9 	b.w	4031f2 <_svfprintf_r+0x4ba>
  403e00:	272d      	movs	r7, #45	; 0x2d
  403e02:	2300      	movs	r3, #0
  403e04:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403e08:	930a      	str	r3, [sp, #40]	; 0x28
  403e0a:	f7ff b8ae 	b.w	402f6a <_svfprintf_r+0x232>
  403e0e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403e10:	9312      	str	r3, [sp, #72]	; 0x48
  403e12:	461a      	mov	r2, r3
  403e14:	3303      	adds	r3, #3
  403e16:	db04      	blt.n	403e22 <_svfprintf_r+0x10ea>
  403e18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e1a:	4619      	mov	r1, r3
  403e1c:	4291      	cmp	r1, r2
  403e1e:	f6bf af17 	bge.w	403c50 <_svfprintf_r+0xf18>
  403e22:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403e24:	3b02      	subs	r3, #2
  403e26:	9311      	str	r3, [sp, #68]	; 0x44
  403e28:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  403e2c:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  403e30:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403e32:	3b01      	subs	r3, #1
  403e34:	2b00      	cmp	r3, #0
  403e36:	931f      	str	r3, [sp, #124]	; 0x7c
  403e38:	bfbd      	ittte	lt
  403e3a:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  403e3c:	f1c3 0301 	rsblt	r3, r3, #1
  403e40:	222d      	movlt	r2, #45	; 0x2d
  403e42:	222b      	movge	r2, #43	; 0x2b
  403e44:	2b09      	cmp	r3, #9
  403e46:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  403e4a:	f340 8116 	ble.w	40407a <_svfprintf_r+0x1342>
  403e4e:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  403e52:	4620      	mov	r0, r4
  403e54:	4dab      	ldr	r5, [pc, #684]	; (404104 <_svfprintf_r+0x13cc>)
  403e56:	e000      	b.n	403e5a <_svfprintf_r+0x1122>
  403e58:	4610      	mov	r0, r2
  403e5a:	fb85 1203 	smull	r1, r2, r5, r3
  403e5e:	17d9      	asrs	r1, r3, #31
  403e60:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  403e64:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  403e68:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  403e6c:	3230      	adds	r2, #48	; 0x30
  403e6e:	2909      	cmp	r1, #9
  403e70:	f800 2c01 	strb.w	r2, [r0, #-1]
  403e74:	460b      	mov	r3, r1
  403e76:	f100 32ff 	add.w	r2, r0, #4294967295
  403e7a:	dced      	bgt.n	403e58 <_svfprintf_r+0x1120>
  403e7c:	3330      	adds	r3, #48	; 0x30
  403e7e:	3802      	subs	r0, #2
  403e80:	b2d9      	uxtb	r1, r3
  403e82:	4284      	cmp	r4, r0
  403e84:	f802 1c01 	strb.w	r1, [r2, #-1]
  403e88:	f240 8165 	bls.w	404156 <_svfprintf_r+0x141e>
  403e8c:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  403e90:	4613      	mov	r3, r2
  403e92:	e001      	b.n	403e98 <_svfprintf_r+0x1160>
  403e94:	f813 1b01 	ldrb.w	r1, [r3], #1
  403e98:	f800 1b01 	strb.w	r1, [r0], #1
  403e9c:	42a3      	cmp	r3, r4
  403e9e:	d1f9      	bne.n	403e94 <_svfprintf_r+0x115c>
  403ea0:	3301      	adds	r3, #1
  403ea2:	1a9b      	subs	r3, r3, r2
  403ea4:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  403ea8:	4413      	add	r3, r2
  403eaa:	aa21      	add	r2, sp, #132	; 0x84
  403eac:	1a9b      	subs	r3, r3, r2
  403eae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403eb0:	931b      	str	r3, [sp, #108]	; 0x6c
  403eb2:	2a01      	cmp	r2, #1
  403eb4:	4413      	add	r3, r2
  403eb6:	930e      	str	r3, [sp, #56]	; 0x38
  403eb8:	f340 8119 	ble.w	4040ee <_svfprintf_r+0x13b6>
  403ebc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403ebe:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403ec0:	4413      	add	r3, r2
  403ec2:	930e      	str	r3, [sp, #56]	; 0x38
  403ec4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403ec8:	9308      	str	r3, [sp, #32]
  403eca:	2300      	movs	r3, #0
  403ecc:	9312      	str	r3, [sp, #72]	; 0x48
  403ece:	e6cf      	b.n	403c70 <_svfprintf_r+0xf38>
  403ed0:	aa25      	add	r2, sp, #148	; 0x94
  403ed2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403ed4:	980c      	ldr	r0, [sp, #48]	; 0x30
  403ed6:	f002 f921 	bl	40611c <__ssprint_r>
  403eda:	2800      	cmp	r0, #0
  403edc:	f47e affe 	bne.w	402edc <_svfprintf_r+0x1a4>
  403ee0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403ee2:	46c8      	mov	r8, r9
  403ee4:	e4d7      	b.n	403896 <_svfprintf_r+0xb5e>
  403ee6:	4623      	mov	r3, r4
  403ee8:	e6a2      	b.n	403c30 <_svfprintf_r+0xef8>
  403eea:	aa25      	add	r2, sp, #148	; 0x94
  403eec:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403eee:	980c      	ldr	r0, [sp, #48]	; 0x30
  403ef0:	f002 f914 	bl	40611c <__ssprint_r>
  403ef4:	2800      	cmp	r0, #0
  403ef6:	f47e aff1 	bne.w	402edc <_svfprintf_r+0x1a4>
  403efa:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403efc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403efe:	46c8      	mov	r8, r9
  403f00:	e5ae      	b.n	403a60 <_svfprintf_r+0xd28>
  403f02:	aa25      	add	r2, sp, #148	; 0x94
  403f04:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403f06:	980c      	ldr	r0, [sp, #48]	; 0x30
  403f08:	f002 f908 	bl	40611c <__ssprint_r>
  403f0c:	2800      	cmp	r0, #0
  403f0e:	f47e afe5 	bne.w	402edc <_svfprintf_r+0x1a4>
  403f12:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403f14:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403f16:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403f18:	1a9a      	subs	r2, r3, r2
  403f1a:	46c8      	mov	r8, r9
  403f1c:	e5b8      	b.n	403a90 <_svfprintf_r+0xd58>
  403f1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f20:	9612      	str	r6, [sp, #72]	; 0x48
  403f22:	2b06      	cmp	r3, #6
  403f24:	bf28      	it	cs
  403f26:	2306      	movcs	r3, #6
  403f28:	960a      	str	r6, [sp, #40]	; 0x28
  403f2a:	4637      	mov	r7, r6
  403f2c:	9308      	str	r3, [sp, #32]
  403f2e:	950f      	str	r5, [sp, #60]	; 0x3c
  403f30:	f8cd b01c 	str.w	fp, [sp, #28]
  403f34:	930e      	str	r3, [sp, #56]	; 0x38
  403f36:	4e74      	ldr	r6, [pc, #464]	; (404108 <_svfprintf_r+0x13d0>)
  403f38:	f7ff b816 	b.w	402f68 <_svfprintf_r+0x230>
  403f3c:	a823      	add	r0, sp, #140	; 0x8c
  403f3e:	a920      	add	r1, sp, #128	; 0x80
  403f40:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  403f42:	9004      	str	r0, [sp, #16]
  403f44:	9103      	str	r1, [sp, #12]
  403f46:	a81f      	add	r0, sp, #124	; 0x7c
  403f48:	2103      	movs	r1, #3
  403f4a:	9002      	str	r0, [sp, #8]
  403f4c:	9a08      	ldr	r2, [sp, #32]
  403f4e:	9501      	str	r5, [sp, #4]
  403f50:	463b      	mov	r3, r7
  403f52:	9100      	str	r1, [sp, #0]
  403f54:	980c      	ldr	r0, [sp, #48]	; 0x30
  403f56:	f000 f9c3 	bl	4042e0 <_dtoa_r>
  403f5a:	4606      	mov	r6, r0
  403f5c:	1944      	adds	r4, r0, r5
  403f5e:	e72b      	b.n	403db8 <_svfprintf_r+0x1080>
  403f60:	2306      	movs	r3, #6
  403f62:	930a      	str	r3, [sp, #40]	; 0x28
  403f64:	e61d      	b.n	403ba2 <_svfprintf_r+0xe6a>
  403f66:	272d      	movs	r7, #45	; 0x2d
  403f68:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403f6c:	f7ff bacd 	b.w	40350a <_svfprintf_r+0x7d2>
  403f70:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403f72:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403f74:	4413      	add	r3, r2
  403f76:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403f78:	930e      	str	r3, [sp, #56]	; 0x38
  403f7a:	2a00      	cmp	r2, #0
  403f7c:	f340 80b0 	ble.w	4040e0 <_svfprintf_r+0x13a8>
  403f80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403f84:	9308      	str	r3, [sp, #32]
  403f86:	2367      	movs	r3, #103	; 0x67
  403f88:	9311      	str	r3, [sp, #68]	; 0x44
  403f8a:	e671      	b.n	403c70 <_svfprintf_r+0xf38>
  403f8c:	2b00      	cmp	r3, #0
  403f8e:	f340 80c3 	ble.w	404118 <_svfprintf_r+0x13e0>
  403f92:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403f94:	2a00      	cmp	r2, #0
  403f96:	f040 8099 	bne.w	4040cc <_svfprintf_r+0x1394>
  403f9a:	f01b 0f01 	tst.w	fp, #1
  403f9e:	f040 8095 	bne.w	4040cc <_svfprintf_r+0x1394>
  403fa2:	9308      	str	r3, [sp, #32]
  403fa4:	930e      	str	r3, [sp, #56]	; 0x38
  403fa6:	e663      	b.n	403c70 <_svfprintf_r+0xf38>
  403fa8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403faa:	9308      	str	r3, [sp, #32]
  403fac:	930e      	str	r3, [sp, #56]	; 0x38
  403fae:	900a      	str	r0, [sp, #40]	; 0x28
  403fb0:	950f      	str	r5, [sp, #60]	; 0x3c
  403fb2:	f8cd b01c 	str.w	fp, [sp, #28]
  403fb6:	9012      	str	r0, [sp, #72]	; 0x48
  403fb8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403fbc:	f7fe bfd4 	b.w	402f68 <_svfprintf_r+0x230>
  403fc0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403fc2:	2b47      	cmp	r3, #71	; 0x47
  403fc4:	f47f ae20 	bne.w	403c08 <_svfprintf_r+0xed0>
  403fc8:	f01b 0f01 	tst.w	fp, #1
  403fcc:	f47f aeee 	bne.w	403dac <_svfprintf_r+0x1074>
  403fd0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403fd2:	1b9b      	subs	r3, r3, r6
  403fd4:	9313      	str	r3, [sp, #76]	; 0x4c
  403fd6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403fd8:	2b47      	cmp	r3, #71	; 0x47
  403fda:	f43f af18 	beq.w	403e0e <_svfprintf_r+0x10d6>
  403fde:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403fe0:	9312      	str	r3, [sp, #72]	; 0x48
  403fe2:	e721      	b.n	403e28 <_svfprintf_r+0x10f0>
  403fe4:	424f      	negs	r7, r1
  403fe6:	3110      	adds	r1, #16
  403fe8:	4d48      	ldr	r5, [pc, #288]	; (40410c <_svfprintf_r+0x13d4>)
  403fea:	da2f      	bge.n	40404c <_svfprintf_r+0x1314>
  403fec:	2410      	movs	r4, #16
  403fee:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403ff2:	e004      	b.n	403ffe <_svfprintf_r+0x12c6>
  403ff4:	f108 0808 	add.w	r8, r8, #8
  403ff8:	3f10      	subs	r7, #16
  403ffa:	2f10      	cmp	r7, #16
  403ffc:	dd26      	ble.n	40404c <_svfprintf_r+0x1314>
  403ffe:	3301      	adds	r3, #1
  404000:	3210      	adds	r2, #16
  404002:	2b07      	cmp	r3, #7
  404004:	9227      	str	r2, [sp, #156]	; 0x9c
  404006:	9326      	str	r3, [sp, #152]	; 0x98
  404008:	f8c8 5000 	str.w	r5, [r8]
  40400c:	f8c8 4004 	str.w	r4, [r8, #4]
  404010:	ddf0      	ble.n	403ff4 <_svfprintf_r+0x12bc>
  404012:	aa25      	add	r2, sp, #148	; 0x94
  404014:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404016:	4658      	mov	r0, fp
  404018:	f002 f880 	bl	40611c <__ssprint_r>
  40401c:	2800      	cmp	r0, #0
  40401e:	f47e af5d 	bne.w	402edc <_svfprintf_r+0x1a4>
  404022:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404024:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404026:	46c8      	mov	r8, r9
  404028:	e7e6      	b.n	403ff8 <_svfprintf_r+0x12c0>
  40402a:	aa25      	add	r2, sp, #148	; 0x94
  40402c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40402e:	980c      	ldr	r0, [sp, #48]	; 0x30
  404030:	f002 f874 	bl	40611c <__ssprint_r>
  404034:	2800      	cmp	r0, #0
  404036:	f47e af51 	bne.w	402edc <_svfprintf_r+0x1a4>
  40403a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40403c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40403e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404040:	46c8      	mov	r8, r9
  404042:	e667      	b.n	403d14 <_svfprintf_r+0xfdc>
  404044:	2000      	movs	r0, #0
  404046:	900a      	str	r0, [sp, #40]	; 0x28
  404048:	f7fe bed0 	b.w	402dec <_svfprintf_r+0xb4>
  40404c:	3301      	adds	r3, #1
  40404e:	443a      	add	r2, r7
  404050:	2b07      	cmp	r3, #7
  404052:	e888 00a0 	stmia.w	r8, {r5, r7}
  404056:	9227      	str	r2, [sp, #156]	; 0x9c
  404058:	9326      	str	r3, [sp, #152]	; 0x98
  40405a:	f108 0808 	add.w	r8, r8, #8
  40405e:	f77f ae5c 	ble.w	403d1a <_svfprintf_r+0xfe2>
  404062:	aa25      	add	r2, sp, #148	; 0x94
  404064:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404066:	980c      	ldr	r0, [sp, #48]	; 0x30
  404068:	f002 f858 	bl	40611c <__ssprint_r>
  40406c:	2800      	cmp	r0, #0
  40406e:	f47e af35 	bne.w	402edc <_svfprintf_r+0x1a4>
  404072:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404074:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404076:	46c8      	mov	r8, r9
  404078:	e64f      	b.n	403d1a <_svfprintf_r+0xfe2>
  40407a:	3330      	adds	r3, #48	; 0x30
  40407c:	2230      	movs	r2, #48	; 0x30
  40407e:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  404082:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  404086:	ab22      	add	r3, sp, #136	; 0x88
  404088:	e70f      	b.n	403eaa <_svfprintf_r+0x1172>
  40408a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40408c:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40408e:	4413      	add	r3, r2
  404090:	930e      	str	r3, [sp, #56]	; 0x38
  404092:	e775      	b.n	403f80 <_svfprintf_r+0x1248>
  404094:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404096:	e5cb      	b.n	403c30 <_svfprintf_r+0xef8>
  404098:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40409a:	4e1d      	ldr	r6, [pc, #116]	; (404110 <_svfprintf_r+0x13d8>)
  40409c:	2b00      	cmp	r3, #0
  40409e:	bfb6      	itet	lt
  4040a0:	272d      	movlt	r7, #45	; 0x2d
  4040a2:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  4040a6:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  4040aa:	4b1a      	ldr	r3, [pc, #104]	; (404114 <_svfprintf_r+0x13dc>)
  4040ac:	f7ff ba2f 	b.w	40350e <_svfprintf_r+0x7d6>
  4040b0:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4040b2:	9808      	ldr	r0, [sp, #32]
  4040b4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4040b6:	4639      	mov	r1, r7
  4040b8:	f003 f8c4 	bl	407244 <__aeabi_dcmpeq>
  4040bc:	2800      	cmp	r0, #0
  4040be:	f47f ae7f 	bne.w	403dc0 <_svfprintf_r+0x1088>
  4040c2:	f1c5 0501 	rsb	r5, r5, #1
  4040c6:	951f      	str	r5, [sp, #124]	; 0x7c
  4040c8:	442c      	add	r4, r5
  4040ca:	e59e      	b.n	403c0a <_svfprintf_r+0xed2>
  4040cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4040ce:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4040d0:	4413      	add	r3, r2
  4040d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4040d4:	441a      	add	r2, r3
  4040d6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4040da:	920e      	str	r2, [sp, #56]	; 0x38
  4040dc:	9308      	str	r3, [sp, #32]
  4040de:	e5c7      	b.n	403c70 <_svfprintf_r+0xf38>
  4040e0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4040e2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4040e4:	f1c3 0301 	rsb	r3, r3, #1
  4040e8:	441a      	add	r2, r3
  4040ea:	4613      	mov	r3, r2
  4040ec:	e7d0      	b.n	404090 <_svfprintf_r+0x1358>
  4040ee:	f01b 0301 	ands.w	r3, fp, #1
  4040f2:	9312      	str	r3, [sp, #72]	; 0x48
  4040f4:	f47f aee2 	bne.w	403ebc <_svfprintf_r+0x1184>
  4040f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4040fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4040fe:	9308      	str	r3, [sp, #32]
  404100:	e5b6      	b.n	403c70 <_svfprintf_r+0xf38>
  404102:	bf00      	nop
  404104:	66666667 	.word	0x66666667
  404108:	00407508 	.word	0x00407508
  40410c:	00407524 	.word	0x00407524
  404110:	004074dc 	.word	0x004074dc
  404114:	004074d8 	.word	0x004074d8
  404118:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40411a:	b913      	cbnz	r3, 404122 <_svfprintf_r+0x13ea>
  40411c:	f01b 0f01 	tst.w	fp, #1
  404120:	d002      	beq.n	404128 <_svfprintf_r+0x13f0>
  404122:	9b19      	ldr	r3, [sp, #100]	; 0x64
  404124:	3301      	adds	r3, #1
  404126:	e7d4      	b.n	4040d2 <_svfprintf_r+0x139a>
  404128:	2301      	movs	r3, #1
  40412a:	e73a      	b.n	403fa2 <_svfprintf_r+0x126a>
  40412c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40412e:	f89a 3001 	ldrb.w	r3, [sl, #1]
  404132:	6828      	ldr	r0, [r5, #0]
  404134:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  404138:	900a      	str	r0, [sp, #40]	; 0x28
  40413a:	4628      	mov	r0, r5
  40413c:	3004      	adds	r0, #4
  40413e:	46a2      	mov	sl, r4
  404140:	900f      	str	r0, [sp, #60]	; 0x3c
  404142:	f7fe be51 	b.w	402de8 <_svfprintf_r+0xb0>
  404146:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40414a:	f7ff b867 	b.w	40321c <_svfprintf_r+0x4e4>
  40414e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404152:	f7ff ba15 	b.w	403580 <_svfprintf_r+0x848>
  404156:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  40415a:	e6a6      	b.n	403eaa <_svfprintf_r+0x1172>
  40415c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404160:	f7ff b8eb 	b.w	40333a <_svfprintf_r+0x602>
  404164:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  404166:	230c      	movs	r3, #12
  404168:	6013      	str	r3, [r2, #0]
  40416a:	f04f 33ff 	mov.w	r3, #4294967295
  40416e:	9309      	str	r3, [sp, #36]	; 0x24
  404170:	f7fe bebd 	b.w	402eee <_svfprintf_r+0x1b6>
  404174:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404178:	f7ff b99a 	b.w	4034b0 <_svfprintf_r+0x778>
  40417c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404180:	f7ff b976 	b.w	403470 <_svfprintf_r+0x738>
  404184:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404188:	f7ff b959 	b.w	40343e <_svfprintf_r+0x706>
  40418c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404190:	f7ff b912 	b.w	4033b8 <_svfprintf_r+0x680>

00404194 <register_fini>:
  404194:	4b02      	ldr	r3, [pc, #8]	; (4041a0 <register_fini+0xc>)
  404196:	b113      	cbz	r3, 40419e <register_fini+0xa>
  404198:	4802      	ldr	r0, [pc, #8]	; (4041a4 <register_fini+0x10>)
  40419a:	f000 b805 	b.w	4041a8 <atexit>
  40419e:	4770      	bx	lr
  4041a0:	00000000 	.word	0x00000000
  4041a4:	00405135 	.word	0x00405135

004041a8 <atexit>:
  4041a8:	2300      	movs	r3, #0
  4041aa:	4601      	mov	r1, r0
  4041ac:	461a      	mov	r2, r3
  4041ae:	4618      	mov	r0, r3
  4041b0:	f002 b832 	b.w	406218 <__register_exitproc>

004041b4 <quorem>:
  4041b4:	6902      	ldr	r2, [r0, #16]
  4041b6:	690b      	ldr	r3, [r1, #16]
  4041b8:	4293      	cmp	r3, r2
  4041ba:	f300 808d 	bgt.w	4042d8 <quorem+0x124>
  4041be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4041c2:	f103 38ff 	add.w	r8, r3, #4294967295
  4041c6:	f101 0714 	add.w	r7, r1, #20
  4041ca:	f100 0b14 	add.w	fp, r0, #20
  4041ce:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4041d2:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  4041d6:	ea4f 0488 	mov.w	r4, r8, lsl #2
  4041da:	b083      	sub	sp, #12
  4041dc:	3201      	adds	r2, #1
  4041de:	fbb3 f9f2 	udiv	r9, r3, r2
  4041e2:	eb0b 0304 	add.w	r3, fp, r4
  4041e6:	9400      	str	r4, [sp, #0]
  4041e8:	eb07 0a04 	add.w	sl, r7, r4
  4041ec:	9301      	str	r3, [sp, #4]
  4041ee:	f1b9 0f00 	cmp.w	r9, #0
  4041f2:	d039      	beq.n	404268 <quorem+0xb4>
  4041f4:	2500      	movs	r5, #0
  4041f6:	462e      	mov	r6, r5
  4041f8:	46bc      	mov	ip, r7
  4041fa:	46de      	mov	lr, fp
  4041fc:	f85c 4b04 	ldr.w	r4, [ip], #4
  404200:	f8de 3000 	ldr.w	r3, [lr]
  404204:	b2a2      	uxth	r2, r4
  404206:	fb09 5502 	mla	r5, r9, r2, r5
  40420a:	0c22      	lsrs	r2, r4, #16
  40420c:	0c2c      	lsrs	r4, r5, #16
  40420e:	fb09 4202 	mla	r2, r9, r2, r4
  404212:	b2ad      	uxth	r5, r5
  404214:	1b75      	subs	r5, r6, r5
  404216:	b296      	uxth	r6, r2
  404218:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  40421c:	fa15 f383 	uxtah	r3, r5, r3
  404220:	eb06 4623 	add.w	r6, r6, r3, asr #16
  404224:	b29b      	uxth	r3, r3
  404226:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  40422a:	45e2      	cmp	sl, ip
  40422c:	ea4f 4512 	mov.w	r5, r2, lsr #16
  404230:	f84e 3b04 	str.w	r3, [lr], #4
  404234:	ea4f 4626 	mov.w	r6, r6, asr #16
  404238:	d2e0      	bcs.n	4041fc <quorem+0x48>
  40423a:	9b00      	ldr	r3, [sp, #0]
  40423c:	f85b 3003 	ldr.w	r3, [fp, r3]
  404240:	b993      	cbnz	r3, 404268 <quorem+0xb4>
  404242:	9c01      	ldr	r4, [sp, #4]
  404244:	1f23      	subs	r3, r4, #4
  404246:	459b      	cmp	fp, r3
  404248:	d20c      	bcs.n	404264 <quorem+0xb0>
  40424a:	f854 3c04 	ldr.w	r3, [r4, #-4]
  40424e:	b94b      	cbnz	r3, 404264 <quorem+0xb0>
  404250:	f1a4 0308 	sub.w	r3, r4, #8
  404254:	e002      	b.n	40425c <quorem+0xa8>
  404256:	681a      	ldr	r2, [r3, #0]
  404258:	3b04      	subs	r3, #4
  40425a:	b91a      	cbnz	r2, 404264 <quorem+0xb0>
  40425c:	459b      	cmp	fp, r3
  40425e:	f108 38ff 	add.w	r8, r8, #4294967295
  404262:	d3f8      	bcc.n	404256 <quorem+0xa2>
  404264:	f8c0 8010 	str.w	r8, [r0, #16]
  404268:	4604      	mov	r4, r0
  40426a:	f001 fd65 	bl	405d38 <__mcmp>
  40426e:	2800      	cmp	r0, #0
  404270:	db2e      	blt.n	4042d0 <quorem+0x11c>
  404272:	f109 0901 	add.w	r9, r9, #1
  404276:	465d      	mov	r5, fp
  404278:	2300      	movs	r3, #0
  40427a:	f857 1b04 	ldr.w	r1, [r7], #4
  40427e:	6828      	ldr	r0, [r5, #0]
  404280:	b28a      	uxth	r2, r1
  404282:	1a9a      	subs	r2, r3, r2
  404284:	0c0b      	lsrs	r3, r1, #16
  404286:	fa12 f280 	uxtah	r2, r2, r0
  40428a:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  40428e:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404292:	b292      	uxth	r2, r2
  404294:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404298:	45ba      	cmp	sl, r7
  40429a:	f845 2b04 	str.w	r2, [r5], #4
  40429e:	ea4f 4323 	mov.w	r3, r3, asr #16
  4042a2:	d2ea      	bcs.n	40427a <quorem+0xc6>
  4042a4:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4042a8:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4042ac:	b982      	cbnz	r2, 4042d0 <quorem+0x11c>
  4042ae:	1f1a      	subs	r2, r3, #4
  4042b0:	4593      	cmp	fp, r2
  4042b2:	d20b      	bcs.n	4042cc <quorem+0x118>
  4042b4:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4042b8:	b942      	cbnz	r2, 4042cc <quorem+0x118>
  4042ba:	3b08      	subs	r3, #8
  4042bc:	e002      	b.n	4042c4 <quorem+0x110>
  4042be:	681a      	ldr	r2, [r3, #0]
  4042c0:	3b04      	subs	r3, #4
  4042c2:	b91a      	cbnz	r2, 4042cc <quorem+0x118>
  4042c4:	459b      	cmp	fp, r3
  4042c6:	f108 38ff 	add.w	r8, r8, #4294967295
  4042ca:	d3f8      	bcc.n	4042be <quorem+0x10a>
  4042cc:	f8c4 8010 	str.w	r8, [r4, #16]
  4042d0:	4648      	mov	r0, r9
  4042d2:	b003      	add	sp, #12
  4042d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4042d8:	2000      	movs	r0, #0
  4042da:	4770      	bx	lr
  4042dc:	0000      	movs	r0, r0
	...

004042e0 <_dtoa_r>:
  4042e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4042e4:	6c01      	ldr	r1, [r0, #64]	; 0x40
  4042e6:	b09b      	sub	sp, #108	; 0x6c
  4042e8:	4604      	mov	r4, r0
  4042ea:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  4042ec:	4692      	mov	sl, r2
  4042ee:	469b      	mov	fp, r3
  4042f0:	b141      	cbz	r1, 404304 <_dtoa_r+0x24>
  4042f2:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4042f4:	604a      	str	r2, [r1, #4]
  4042f6:	2301      	movs	r3, #1
  4042f8:	4093      	lsls	r3, r2
  4042fa:	608b      	str	r3, [r1, #8]
  4042fc:	f001 fb44 	bl	405988 <_Bfree>
  404300:	2300      	movs	r3, #0
  404302:	6423      	str	r3, [r4, #64]	; 0x40
  404304:	f1bb 0f00 	cmp.w	fp, #0
  404308:	465d      	mov	r5, fp
  40430a:	db35      	blt.n	404378 <_dtoa_r+0x98>
  40430c:	2300      	movs	r3, #0
  40430e:	6033      	str	r3, [r6, #0]
  404310:	4b9d      	ldr	r3, [pc, #628]	; (404588 <_dtoa_r+0x2a8>)
  404312:	43ab      	bics	r3, r5
  404314:	d015      	beq.n	404342 <_dtoa_r+0x62>
  404316:	4650      	mov	r0, sl
  404318:	4659      	mov	r1, fp
  40431a:	2200      	movs	r2, #0
  40431c:	2300      	movs	r3, #0
  40431e:	f002 ff91 	bl	407244 <__aeabi_dcmpeq>
  404322:	4680      	mov	r8, r0
  404324:	2800      	cmp	r0, #0
  404326:	d02d      	beq.n	404384 <_dtoa_r+0xa4>
  404328:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40432a:	2301      	movs	r3, #1
  40432c:	6013      	str	r3, [r2, #0]
  40432e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  404330:	2b00      	cmp	r3, #0
  404332:	f000 80bd 	beq.w	4044b0 <_dtoa_r+0x1d0>
  404336:	4895      	ldr	r0, [pc, #596]	; (40458c <_dtoa_r+0x2ac>)
  404338:	6018      	str	r0, [r3, #0]
  40433a:	3801      	subs	r0, #1
  40433c:	b01b      	add	sp, #108	; 0x6c
  40433e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404342:	9a26      	ldr	r2, [sp, #152]	; 0x98
  404344:	f242 730f 	movw	r3, #9999	; 0x270f
  404348:	6013      	str	r3, [r2, #0]
  40434a:	f1ba 0f00 	cmp.w	sl, #0
  40434e:	d10d      	bne.n	40436c <_dtoa_r+0x8c>
  404350:	f3c5 0513 	ubfx	r5, r5, #0, #20
  404354:	b955      	cbnz	r5, 40436c <_dtoa_r+0x8c>
  404356:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  404358:	488d      	ldr	r0, [pc, #564]	; (404590 <_dtoa_r+0x2b0>)
  40435a:	2b00      	cmp	r3, #0
  40435c:	d0ee      	beq.n	40433c <_dtoa_r+0x5c>
  40435e:	f100 0308 	add.w	r3, r0, #8
  404362:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  404364:	6013      	str	r3, [r2, #0]
  404366:	b01b      	add	sp, #108	; 0x6c
  404368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40436c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40436e:	4889      	ldr	r0, [pc, #548]	; (404594 <_dtoa_r+0x2b4>)
  404370:	2b00      	cmp	r3, #0
  404372:	d0e3      	beq.n	40433c <_dtoa_r+0x5c>
  404374:	1cc3      	adds	r3, r0, #3
  404376:	e7f4      	b.n	404362 <_dtoa_r+0x82>
  404378:	2301      	movs	r3, #1
  40437a:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  40437e:	6033      	str	r3, [r6, #0]
  404380:	46ab      	mov	fp, r5
  404382:	e7c5      	b.n	404310 <_dtoa_r+0x30>
  404384:	aa18      	add	r2, sp, #96	; 0x60
  404386:	ab19      	add	r3, sp, #100	; 0x64
  404388:	9201      	str	r2, [sp, #4]
  40438a:	9300      	str	r3, [sp, #0]
  40438c:	4652      	mov	r2, sl
  40438e:	465b      	mov	r3, fp
  404390:	4620      	mov	r0, r4
  404392:	f001 fd71 	bl	405e78 <__d2b>
  404396:	0d2b      	lsrs	r3, r5, #20
  404398:	4681      	mov	r9, r0
  40439a:	d071      	beq.n	404480 <_dtoa_r+0x1a0>
  40439c:	f3cb 0213 	ubfx	r2, fp, #0, #20
  4043a0:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  4043a4:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4043a6:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4043aa:	4650      	mov	r0, sl
  4043ac:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4043b0:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4043b4:	2200      	movs	r2, #0
  4043b6:	4b78      	ldr	r3, [pc, #480]	; (404598 <_dtoa_r+0x2b8>)
  4043b8:	f002 fb28 	bl	406a0c <__aeabi_dsub>
  4043bc:	a36c      	add	r3, pc, #432	; (adr r3, 404570 <_dtoa_r+0x290>)
  4043be:	e9d3 2300 	ldrd	r2, r3, [r3]
  4043c2:	f002 fcd7 	bl	406d74 <__aeabi_dmul>
  4043c6:	a36c      	add	r3, pc, #432	; (adr r3, 404578 <_dtoa_r+0x298>)
  4043c8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4043cc:	f002 fb20 	bl	406a10 <__adddf3>
  4043d0:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4043d4:	4630      	mov	r0, r6
  4043d6:	f002 fc67 	bl	406ca8 <__aeabi_i2d>
  4043da:	a369      	add	r3, pc, #420	; (adr r3, 404580 <_dtoa_r+0x2a0>)
  4043dc:	e9d3 2300 	ldrd	r2, r3, [r3]
  4043e0:	f002 fcc8 	bl	406d74 <__aeabi_dmul>
  4043e4:	4602      	mov	r2, r0
  4043e6:	460b      	mov	r3, r1
  4043e8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4043ec:	f002 fb10 	bl	406a10 <__adddf3>
  4043f0:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4043f4:	f002 ff6e 	bl	4072d4 <__aeabi_d2iz>
  4043f8:	2200      	movs	r2, #0
  4043fa:	9002      	str	r0, [sp, #8]
  4043fc:	2300      	movs	r3, #0
  4043fe:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  404402:	f002 ff29 	bl	407258 <__aeabi_dcmplt>
  404406:	2800      	cmp	r0, #0
  404408:	f040 8173 	bne.w	4046f2 <_dtoa_r+0x412>
  40440c:	9d02      	ldr	r5, [sp, #8]
  40440e:	2d16      	cmp	r5, #22
  404410:	f200 815d 	bhi.w	4046ce <_dtoa_r+0x3ee>
  404414:	4b61      	ldr	r3, [pc, #388]	; (40459c <_dtoa_r+0x2bc>)
  404416:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40441a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40441e:	4652      	mov	r2, sl
  404420:	465b      	mov	r3, fp
  404422:	f002 ff37 	bl	407294 <__aeabi_dcmpgt>
  404426:	2800      	cmp	r0, #0
  404428:	f000 81c5 	beq.w	4047b6 <_dtoa_r+0x4d6>
  40442c:	1e6b      	subs	r3, r5, #1
  40442e:	9302      	str	r3, [sp, #8]
  404430:	2300      	movs	r3, #0
  404432:	930e      	str	r3, [sp, #56]	; 0x38
  404434:	1bbf      	subs	r7, r7, r6
  404436:	1e7b      	subs	r3, r7, #1
  404438:	9306      	str	r3, [sp, #24]
  40443a:	f100 8154 	bmi.w	4046e6 <_dtoa_r+0x406>
  40443e:	2300      	movs	r3, #0
  404440:	9308      	str	r3, [sp, #32]
  404442:	9b02      	ldr	r3, [sp, #8]
  404444:	2b00      	cmp	r3, #0
  404446:	f2c0 8145 	blt.w	4046d4 <_dtoa_r+0x3f4>
  40444a:	9a06      	ldr	r2, [sp, #24]
  40444c:	930d      	str	r3, [sp, #52]	; 0x34
  40444e:	4611      	mov	r1, r2
  404450:	4419      	add	r1, r3
  404452:	2300      	movs	r3, #0
  404454:	9106      	str	r1, [sp, #24]
  404456:	930c      	str	r3, [sp, #48]	; 0x30
  404458:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40445a:	2b09      	cmp	r3, #9
  40445c:	d82a      	bhi.n	4044b4 <_dtoa_r+0x1d4>
  40445e:	2b05      	cmp	r3, #5
  404460:	f340 865b 	ble.w	40511a <_dtoa_r+0xe3a>
  404464:	3b04      	subs	r3, #4
  404466:	9324      	str	r3, [sp, #144]	; 0x90
  404468:	2500      	movs	r5, #0
  40446a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40446c:	3b02      	subs	r3, #2
  40446e:	2b03      	cmp	r3, #3
  404470:	f200 8642 	bhi.w	4050f8 <_dtoa_r+0xe18>
  404474:	e8df f013 	tbh	[pc, r3, lsl #1]
  404478:	02c903d4 	.word	0x02c903d4
  40447c:	046103df 	.word	0x046103df
  404480:	9f18      	ldr	r7, [sp, #96]	; 0x60
  404482:	9e19      	ldr	r6, [sp, #100]	; 0x64
  404484:	443e      	add	r6, r7
  404486:	f206 4332 	addw	r3, r6, #1074	; 0x432
  40448a:	2b20      	cmp	r3, #32
  40448c:	f340 818e 	ble.w	4047ac <_dtoa_r+0x4cc>
  404490:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  404494:	f206 4012 	addw	r0, r6, #1042	; 0x412
  404498:	409d      	lsls	r5, r3
  40449a:	fa2a f000 	lsr.w	r0, sl, r0
  40449e:	4328      	orrs	r0, r5
  4044a0:	f002 fbf2 	bl	406c88 <__aeabi_ui2d>
  4044a4:	2301      	movs	r3, #1
  4044a6:	3e01      	subs	r6, #1
  4044a8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4044ac:	9314      	str	r3, [sp, #80]	; 0x50
  4044ae:	e781      	b.n	4043b4 <_dtoa_r+0xd4>
  4044b0:	483b      	ldr	r0, [pc, #236]	; (4045a0 <_dtoa_r+0x2c0>)
  4044b2:	e743      	b.n	40433c <_dtoa_r+0x5c>
  4044b4:	2100      	movs	r1, #0
  4044b6:	6461      	str	r1, [r4, #68]	; 0x44
  4044b8:	4620      	mov	r0, r4
  4044ba:	9125      	str	r1, [sp, #148]	; 0x94
  4044bc:	f001 fa3e 	bl	40593c <_Balloc>
  4044c0:	f04f 33ff 	mov.w	r3, #4294967295
  4044c4:	930a      	str	r3, [sp, #40]	; 0x28
  4044c6:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4044c8:	930f      	str	r3, [sp, #60]	; 0x3c
  4044ca:	2301      	movs	r3, #1
  4044cc:	9004      	str	r0, [sp, #16]
  4044ce:	6420      	str	r0, [r4, #64]	; 0x40
  4044d0:	9224      	str	r2, [sp, #144]	; 0x90
  4044d2:	930b      	str	r3, [sp, #44]	; 0x2c
  4044d4:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4044d6:	2b00      	cmp	r3, #0
  4044d8:	f2c0 80d9 	blt.w	40468e <_dtoa_r+0x3ae>
  4044dc:	9a02      	ldr	r2, [sp, #8]
  4044de:	2a0e      	cmp	r2, #14
  4044e0:	f300 80d5 	bgt.w	40468e <_dtoa_r+0x3ae>
  4044e4:	4b2d      	ldr	r3, [pc, #180]	; (40459c <_dtoa_r+0x2bc>)
  4044e6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4044ea:	e9d3 2300 	ldrd	r2, r3, [r3]
  4044ee:	e9cd 2308 	strd	r2, r3, [sp, #32]
  4044f2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4044f4:	2b00      	cmp	r3, #0
  4044f6:	f2c0 83ba 	blt.w	404c6e <_dtoa_r+0x98e>
  4044fa:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  4044fe:	4650      	mov	r0, sl
  404500:	462a      	mov	r2, r5
  404502:	4633      	mov	r3, r6
  404504:	4659      	mov	r1, fp
  404506:	f002 fd5f 	bl	406fc8 <__aeabi_ddiv>
  40450a:	f002 fee3 	bl	4072d4 <__aeabi_d2iz>
  40450e:	4680      	mov	r8, r0
  404510:	f002 fbca 	bl	406ca8 <__aeabi_i2d>
  404514:	462a      	mov	r2, r5
  404516:	4633      	mov	r3, r6
  404518:	f002 fc2c 	bl	406d74 <__aeabi_dmul>
  40451c:	460b      	mov	r3, r1
  40451e:	4602      	mov	r2, r0
  404520:	4659      	mov	r1, fp
  404522:	4650      	mov	r0, sl
  404524:	f002 fa72 	bl	406a0c <__aeabi_dsub>
  404528:	9d04      	ldr	r5, [sp, #16]
  40452a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  40452e:	702b      	strb	r3, [r5, #0]
  404530:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404532:	2b01      	cmp	r3, #1
  404534:	4606      	mov	r6, r0
  404536:	460f      	mov	r7, r1
  404538:	f105 0501 	add.w	r5, r5, #1
  40453c:	d068      	beq.n	404610 <_dtoa_r+0x330>
  40453e:	2200      	movs	r2, #0
  404540:	4b18      	ldr	r3, [pc, #96]	; (4045a4 <_dtoa_r+0x2c4>)
  404542:	f002 fc17 	bl	406d74 <__aeabi_dmul>
  404546:	2200      	movs	r2, #0
  404548:	2300      	movs	r3, #0
  40454a:	4606      	mov	r6, r0
  40454c:	460f      	mov	r7, r1
  40454e:	f002 fe79 	bl	407244 <__aeabi_dcmpeq>
  404552:	2800      	cmp	r0, #0
  404554:	f040 8088 	bne.w	404668 <_dtoa_r+0x388>
  404558:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  40455c:	f04f 0a00 	mov.w	sl, #0
  404560:	f8df b040 	ldr.w	fp, [pc, #64]	; 4045a4 <_dtoa_r+0x2c4>
  404564:	940c      	str	r4, [sp, #48]	; 0x30
  404566:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  40456a:	e028      	b.n	4045be <_dtoa_r+0x2de>
  40456c:	f3af 8000 	nop.w
  404570:	636f4361 	.word	0x636f4361
  404574:	3fd287a7 	.word	0x3fd287a7
  404578:	8b60c8b3 	.word	0x8b60c8b3
  40457c:	3fc68a28 	.word	0x3fc68a28
  404580:	509f79fb 	.word	0x509f79fb
  404584:	3fd34413 	.word	0x3fd34413
  404588:	7ff00000 	.word	0x7ff00000
  40458c:	00407511 	.word	0x00407511
  404590:	00407534 	.word	0x00407534
  404594:	00407540 	.word	0x00407540
  404598:	3ff80000 	.word	0x3ff80000
  40459c:	00407570 	.word	0x00407570
  4045a0:	00407510 	.word	0x00407510
  4045a4:	40240000 	.word	0x40240000
  4045a8:	f002 fbe4 	bl	406d74 <__aeabi_dmul>
  4045ac:	2200      	movs	r2, #0
  4045ae:	2300      	movs	r3, #0
  4045b0:	4606      	mov	r6, r0
  4045b2:	460f      	mov	r7, r1
  4045b4:	f002 fe46 	bl	407244 <__aeabi_dcmpeq>
  4045b8:	2800      	cmp	r0, #0
  4045ba:	f040 83c1 	bne.w	404d40 <_dtoa_r+0xa60>
  4045be:	4642      	mov	r2, r8
  4045c0:	464b      	mov	r3, r9
  4045c2:	4630      	mov	r0, r6
  4045c4:	4639      	mov	r1, r7
  4045c6:	f002 fcff 	bl	406fc8 <__aeabi_ddiv>
  4045ca:	f002 fe83 	bl	4072d4 <__aeabi_d2iz>
  4045ce:	4604      	mov	r4, r0
  4045d0:	f002 fb6a 	bl	406ca8 <__aeabi_i2d>
  4045d4:	4642      	mov	r2, r8
  4045d6:	464b      	mov	r3, r9
  4045d8:	f002 fbcc 	bl	406d74 <__aeabi_dmul>
  4045dc:	4602      	mov	r2, r0
  4045de:	460b      	mov	r3, r1
  4045e0:	4630      	mov	r0, r6
  4045e2:	4639      	mov	r1, r7
  4045e4:	f002 fa12 	bl	406a0c <__aeabi_dsub>
  4045e8:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  4045ec:	9e04      	ldr	r6, [sp, #16]
  4045ee:	f805 eb01 	strb.w	lr, [r5], #1
  4045f2:	eba5 0e06 	sub.w	lr, r5, r6
  4045f6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  4045f8:	45b6      	cmp	lr, r6
  4045fa:	e9cd 0106 	strd	r0, r1, [sp, #24]
  4045fe:	4652      	mov	r2, sl
  404600:	465b      	mov	r3, fp
  404602:	d1d1      	bne.n	4045a8 <_dtoa_r+0x2c8>
  404604:	46a0      	mov	r8, r4
  404606:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40460a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40460c:	4606      	mov	r6, r0
  40460e:	460f      	mov	r7, r1
  404610:	4632      	mov	r2, r6
  404612:	463b      	mov	r3, r7
  404614:	4630      	mov	r0, r6
  404616:	4639      	mov	r1, r7
  404618:	f002 f9fa 	bl	406a10 <__adddf3>
  40461c:	4606      	mov	r6, r0
  40461e:	460f      	mov	r7, r1
  404620:	4602      	mov	r2, r0
  404622:	460b      	mov	r3, r1
  404624:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  404628:	f002 fe16 	bl	407258 <__aeabi_dcmplt>
  40462c:	b948      	cbnz	r0, 404642 <_dtoa_r+0x362>
  40462e:	4632      	mov	r2, r6
  404630:	463b      	mov	r3, r7
  404632:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  404636:	f002 fe05 	bl	407244 <__aeabi_dcmpeq>
  40463a:	b1a8      	cbz	r0, 404668 <_dtoa_r+0x388>
  40463c:	f018 0f01 	tst.w	r8, #1
  404640:	d012      	beq.n	404668 <_dtoa_r+0x388>
  404642:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404646:	9a04      	ldr	r2, [sp, #16]
  404648:	1e6b      	subs	r3, r5, #1
  40464a:	e004      	b.n	404656 <_dtoa_r+0x376>
  40464c:	429a      	cmp	r2, r3
  40464e:	f000 8401 	beq.w	404e54 <_dtoa_r+0xb74>
  404652:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  404656:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  40465a:	f103 0501 	add.w	r5, r3, #1
  40465e:	d0f5      	beq.n	40464c <_dtoa_r+0x36c>
  404660:	f108 0801 	add.w	r8, r8, #1
  404664:	f883 8000 	strb.w	r8, [r3]
  404668:	4649      	mov	r1, r9
  40466a:	4620      	mov	r0, r4
  40466c:	f001 f98c 	bl	405988 <_Bfree>
  404670:	2200      	movs	r2, #0
  404672:	9b02      	ldr	r3, [sp, #8]
  404674:	702a      	strb	r2, [r5, #0]
  404676:	9a26      	ldr	r2, [sp, #152]	; 0x98
  404678:	3301      	adds	r3, #1
  40467a:	6013      	str	r3, [r2, #0]
  40467c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40467e:	2b00      	cmp	r3, #0
  404680:	f000 839e 	beq.w	404dc0 <_dtoa_r+0xae0>
  404684:	9804      	ldr	r0, [sp, #16]
  404686:	601d      	str	r5, [r3, #0]
  404688:	b01b      	add	sp, #108	; 0x6c
  40468a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40468e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  404690:	2a00      	cmp	r2, #0
  404692:	d03e      	beq.n	404712 <_dtoa_r+0x432>
  404694:	9a24      	ldr	r2, [sp, #144]	; 0x90
  404696:	2a01      	cmp	r2, #1
  404698:	f340 8311 	ble.w	404cbe <_dtoa_r+0x9de>
  40469c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40469e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4046a0:	1e5f      	subs	r7, r3, #1
  4046a2:	42ba      	cmp	r2, r7
  4046a4:	f2c0 838f 	blt.w	404dc6 <_dtoa_r+0xae6>
  4046a8:	1bd7      	subs	r7, r2, r7
  4046aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4046ac:	2b00      	cmp	r3, #0
  4046ae:	f2c0 848b 	blt.w	404fc8 <_dtoa_r+0xce8>
  4046b2:	9d08      	ldr	r5, [sp, #32]
  4046b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4046b6:	9a08      	ldr	r2, [sp, #32]
  4046b8:	441a      	add	r2, r3
  4046ba:	9208      	str	r2, [sp, #32]
  4046bc:	9a06      	ldr	r2, [sp, #24]
  4046be:	2101      	movs	r1, #1
  4046c0:	441a      	add	r2, r3
  4046c2:	4620      	mov	r0, r4
  4046c4:	9206      	str	r2, [sp, #24]
  4046c6:	f001 f9f9 	bl	405abc <__i2b>
  4046ca:	4606      	mov	r6, r0
  4046cc:	e024      	b.n	404718 <_dtoa_r+0x438>
  4046ce:	2301      	movs	r3, #1
  4046d0:	930e      	str	r3, [sp, #56]	; 0x38
  4046d2:	e6af      	b.n	404434 <_dtoa_r+0x154>
  4046d4:	9a08      	ldr	r2, [sp, #32]
  4046d6:	9b02      	ldr	r3, [sp, #8]
  4046d8:	1ad2      	subs	r2, r2, r3
  4046da:	425b      	negs	r3, r3
  4046dc:	930c      	str	r3, [sp, #48]	; 0x30
  4046de:	2300      	movs	r3, #0
  4046e0:	9208      	str	r2, [sp, #32]
  4046e2:	930d      	str	r3, [sp, #52]	; 0x34
  4046e4:	e6b8      	b.n	404458 <_dtoa_r+0x178>
  4046e6:	f1c7 0301 	rsb	r3, r7, #1
  4046ea:	9308      	str	r3, [sp, #32]
  4046ec:	2300      	movs	r3, #0
  4046ee:	9306      	str	r3, [sp, #24]
  4046f0:	e6a7      	b.n	404442 <_dtoa_r+0x162>
  4046f2:	9d02      	ldr	r5, [sp, #8]
  4046f4:	4628      	mov	r0, r5
  4046f6:	f002 fad7 	bl	406ca8 <__aeabi_i2d>
  4046fa:	4602      	mov	r2, r0
  4046fc:	460b      	mov	r3, r1
  4046fe:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  404702:	f002 fd9f 	bl	407244 <__aeabi_dcmpeq>
  404706:	2800      	cmp	r0, #0
  404708:	f47f ae80 	bne.w	40440c <_dtoa_r+0x12c>
  40470c:	1e6b      	subs	r3, r5, #1
  40470e:	9302      	str	r3, [sp, #8]
  404710:	e67c      	b.n	40440c <_dtoa_r+0x12c>
  404712:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404714:	9d08      	ldr	r5, [sp, #32]
  404716:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  404718:	2d00      	cmp	r5, #0
  40471a:	dd0c      	ble.n	404736 <_dtoa_r+0x456>
  40471c:	9906      	ldr	r1, [sp, #24]
  40471e:	2900      	cmp	r1, #0
  404720:	460b      	mov	r3, r1
  404722:	dd08      	ble.n	404736 <_dtoa_r+0x456>
  404724:	42a9      	cmp	r1, r5
  404726:	9a08      	ldr	r2, [sp, #32]
  404728:	bfa8      	it	ge
  40472a:	462b      	movge	r3, r5
  40472c:	1ad2      	subs	r2, r2, r3
  40472e:	1aed      	subs	r5, r5, r3
  404730:	1acb      	subs	r3, r1, r3
  404732:	9208      	str	r2, [sp, #32]
  404734:	9306      	str	r3, [sp, #24]
  404736:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404738:	b1d3      	cbz	r3, 404770 <_dtoa_r+0x490>
  40473a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40473c:	2b00      	cmp	r3, #0
  40473e:	f000 82b7 	beq.w	404cb0 <_dtoa_r+0x9d0>
  404742:	2f00      	cmp	r7, #0
  404744:	dd10      	ble.n	404768 <_dtoa_r+0x488>
  404746:	4631      	mov	r1, r6
  404748:	463a      	mov	r2, r7
  40474a:	4620      	mov	r0, r4
  40474c:	f001 fa52 	bl	405bf4 <__pow5mult>
  404750:	464a      	mov	r2, r9
  404752:	4601      	mov	r1, r0
  404754:	4606      	mov	r6, r0
  404756:	4620      	mov	r0, r4
  404758:	f001 f9ba 	bl	405ad0 <__multiply>
  40475c:	4649      	mov	r1, r9
  40475e:	4680      	mov	r8, r0
  404760:	4620      	mov	r0, r4
  404762:	f001 f911 	bl	405988 <_Bfree>
  404766:	46c1      	mov	r9, r8
  404768:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40476a:	1bda      	subs	r2, r3, r7
  40476c:	f040 82a1 	bne.w	404cb2 <_dtoa_r+0x9d2>
  404770:	2101      	movs	r1, #1
  404772:	4620      	mov	r0, r4
  404774:	f001 f9a2 	bl	405abc <__i2b>
  404778:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40477a:	2b00      	cmp	r3, #0
  40477c:	4680      	mov	r8, r0
  40477e:	dd1c      	ble.n	4047ba <_dtoa_r+0x4da>
  404780:	4601      	mov	r1, r0
  404782:	461a      	mov	r2, r3
  404784:	4620      	mov	r0, r4
  404786:	f001 fa35 	bl	405bf4 <__pow5mult>
  40478a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40478c:	2b01      	cmp	r3, #1
  40478e:	4680      	mov	r8, r0
  404790:	f340 8254 	ble.w	404c3c <_dtoa_r+0x95c>
  404794:	2300      	movs	r3, #0
  404796:	930c      	str	r3, [sp, #48]	; 0x30
  404798:	f8d8 3010 	ldr.w	r3, [r8, #16]
  40479c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  4047a0:	6918      	ldr	r0, [r3, #16]
  4047a2:	f001 f93b 	bl	405a1c <__hi0bits>
  4047a6:	f1c0 0020 	rsb	r0, r0, #32
  4047aa:	e010      	b.n	4047ce <_dtoa_r+0x4ee>
  4047ac:	f1c3 0520 	rsb	r5, r3, #32
  4047b0:	fa0a f005 	lsl.w	r0, sl, r5
  4047b4:	e674      	b.n	4044a0 <_dtoa_r+0x1c0>
  4047b6:	900e      	str	r0, [sp, #56]	; 0x38
  4047b8:	e63c      	b.n	404434 <_dtoa_r+0x154>
  4047ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4047bc:	2b01      	cmp	r3, #1
  4047be:	f340 8287 	ble.w	404cd0 <_dtoa_r+0x9f0>
  4047c2:	2300      	movs	r3, #0
  4047c4:	930c      	str	r3, [sp, #48]	; 0x30
  4047c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4047c8:	2001      	movs	r0, #1
  4047ca:	2b00      	cmp	r3, #0
  4047cc:	d1e4      	bne.n	404798 <_dtoa_r+0x4b8>
  4047ce:	9a06      	ldr	r2, [sp, #24]
  4047d0:	4410      	add	r0, r2
  4047d2:	f010 001f 	ands.w	r0, r0, #31
  4047d6:	f000 80a1 	beq.w	40491c <_dtoa_r+0x63c>
  4047da:	f1c0 0320 	rsb	r3, r0, #32
  4047de:	2b04      	cmp	r3, #4
  4047e0:	f340 849e 	ble.w	405120 <_dtoa_r+0xe40>
  4047e4:	9b08      	ldr	r3, [sp, #32]
  4047e6:	f1c0 001c 	rsb	r0, r0, #28
  4047ea:	4403      	add	r3, r0
  4047ec:	9308      	str	r3, [sp, #32]
  4047ee:	4613      	mov	r3, r2
  4047f0:	4403      	add	r3, r0
  4047f2:	4405      	add	r5, r0
  4047f4:	9306      	str	r3, [sp, #24]
  4047f6:	9b08      	ldr	r3, [sp, #32]
  4047f8:	2b00      	cmp	r3, #0
  4047fa:	dd05      	ble.n	404808 <_dtoa_r+0x528>
  4047fc:	4649      	mov	r1, r9
  4047fe:	461a      	mov	r2, r3
  404800:	4620      	mov	r0, r4
  404802:	f001 fa47 	bl	405c94 <__lshift>
  404806:	4681      	mov	r9, r0
  404808:	9b06      	ldr	r3, [sp, #24]
  40480a:	2b00      	cmp	r3, #0
  40480c:	dd05      	ble.n	40481a <_dtoa_r+0x53a>
  40480e:	4641      	mov	r1, r8
  404810:	461a      	mov	r2, r3
  404812:	4620      	mov	r0, r4
  404814:	f001 fa3e 	bl	405c94 <__lshift>
  404818:	4680      	mov	r8, r0
  40481a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40481c:	2b00      	cmp	r3, #0
  40481e:	f040 8086 	bne.w	40492e <_dtoa_r+0x64e>
  404822:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404824:	2b00      	cmp	r3, #0
  404826:	f340 8266 	ble.w	404cf6 <_dtoa_r+0xa16>
  40482a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40482c:	2b00      	cmp	r3, #0
  40482e:	f000 8098 	beq.w	404962 <_dtoa_r+0x682>
  404832:	2d00      	cmp	r5, #0
  404834:	dd05      	ble.n	404842 <_dtoa_r+0x562>
  404836:	4631      	mov	r1, r6
  404838:	462a      	mov	r2, r5
  40483a:	4620      	mov	r0, r4
  40483c:	f001 fa2a 	bl	405c94 <__lshift>
  404840:	4606      	mov	r6, r0
  404842:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404844:	2b00      	cmp	r3, #0
  404846:	f040 8337 	bne.w	404eb8 <_dtoa_r+0xbd8>
  40484a:	9606      	str	r6, [sp, #24]
  40484c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40484e:	9a04      	ldr	r2, [sp, #16]
  404850:	f8dd b018 	ldr.w	fp, [sp, #24]
  404854:	3b01      	subs	r3, #1
  404856:	18d3      	adds	r3, r2, r3
  404858:	930b      	str	r3, [sp, #44]	; 0x2c
  40485a:	f00a 0301 	and.w	r3, sl, #1
  40485e:	930c      	str	r3, [sp, #48]	; 0x30
  404860:	4617      	mov	r7, r2
  404862:	46c2      	mov	sl, r8
  404864:	4651      	mov	r1, sl
  404866:	4648      	mov	r0, r9
  404868:	f7ff fca4 	bl	4041b4 <quorem>
  40486c:	4631      	mov	r1, r6
  40486e:	4605      	mov	r5, r0
  404870:	4648      	mov	r0, r9
  404872:	f001 fa61 	bl	405d38 <__mcmp>
  404876:	465a      	mov	r2, fp
  404878:	900a      	str	r0, [sp, #40]	; 0x28
  40487a:	4651      	mov	r1, sl
  40487c:	4620      	mov	r0, r4
  40487e:	f001 fa77 	bl	405d70 <__mdiff>
  404882:	68c2      	ldr	r2, [r0, #12]
  404884:	4680      	mov	r8, r0
  404886:	f105 0330 	add.w	r3, r5, #48	; 0x30
  40488a:	2a00      	cmp	r2, #0
  40488c:	f040 822b 	bne.w	404ce6 <_dtoa_r+0xa06>
  404890:	4601      	mov	r1, r0
  404892:	4648      	mov	r0, r9
  404894:	9308      	str	r3, [sp, #32]
  404896:	f001 fa4f 	bl	405d38 <__mcmp>
  40489a:	4641      	mov	r1, r8
  40489c:	9006      	str	r0, [sp, #24]
  40489e:	4620      	mov	r0, r4
  4048a0:	f001 f872 	bl	405988 <_Bfree>
  4048a4:	9a06      	ldr	r2, [sp, #24]
  4048a6:	9b08      	ldr	r3, [sp, #32]
  4048a8:	b932      	cbnz	r2, 4048b8 <_dtoa_r+0x5d8>
  4048aa:	9924      	ldr	r1, [sp, #144]	; 0x90
  4048ac:	b921      	cbnz	r1, 4048b8 <_dtoa_r+0x5d8>
  4048ae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4048b0:	2a00      	cmp	r2, #0
  4048b2:	f000 83ef 	beq.w	405094 <_dtoa_r+0xdb4>
  4048b6:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4048b8:	990a      	ldr	r1, [sp, #40]	; 0x28
  4048ba:	2900      	cmp	r1, #0
  4048bc:	f2c0 829f 	blt.w	404dfe <_dtoa_r+0xb1e>
  4048c0:	d105      	bne.n	4048ce <_dtoa_r+0x5ee>
  4048c2:	9924      	ldr	r1, [sp, #144]	; 0x90
  4048c4:	b919      	cbnz	r1, 4048ce <_dtoa_r+0x5ee>
  4048c6:	990c      	ldr	r1, [sp, #48]	; 0x30
  4048c8:	2900      	cmp	r1, #0
  4048ca:	f000 8298 	beq.w	404dfe <_dtoa_r+0xb1e>
  4048ce:	2a00      	cmp	r2, #0
  4048d0:	f300 8306 	bgt.w	404ee0 <_dtoa_r+0xc00>
  4048d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4048d6:	703b      	strb	r3, [r7, #0]
  4048d8:	f107 0801 	add.w	r8, r7, #1
  4048dc:	4297      	cmp	r7, r2
  4048de:	4645      	mov	r5, r8
  4048e0:	f000 830c 	beq.w	404efc <_dtoa_r+0xc1c>
  4048e4:	4649      	mov	r1, r9
  4048e6:	2300      	movs	r3, #0
  4048e8:	220a      	movs	r2, #10
  4048ea:	4620      	mov	r0, r4
  4048ec:	f001 f856 	bl	40599c <__multadd>
  4048f0:	455e      	cmp	r6, fp
  4048f2:	4681      	mov	r9, r0
  4048f4:	4631      	mov	r1, r6
  4048f6:	f04f 0300 	mov.w	r3, #0
  4048fa:	f04f 020a 	mov.w	r2, #10
  4048fe:	4620      	mov	r0, r4
  404900:	f000 81eb 	beq.w	404cda <_dtoa_r+0x9fa>
  404904:	f001 f84a 	bl	40599c <__multadd>
  404908:	4659      	mov	r1, fp
  40490a:	4606      	mov	r6, r0
  40490c:	2300      	movs	r3, #0
  40490e:	220a      	movs	r2, #10
  404910:	4620      	mov	r0, r4
  404912:	f001 f843 	bl	40599c <__multadd>
  404916:	4647      	mov	r7, r8
  404918:	4683      	mov	fp, r0
  40491a:	e7a3      	b.n	404864 <_dtoa_r+0x584>
  40491c:	201c      	movs	r0, #28
  40491e:	9b08      	ldr	r3, [sp, #32]
  404920:	4403      	add	r3, r0
  404922:	9308      	str	r3, [sp, #32]
  404924:	9b06      	ldr	r3, [sp, #24]
  404926:	4403      	add	r3, r0
  404928:	4405      	add	r5, r0
  40492a:	9306      	str	r3, [sp, #24]
  40492c:	e763      	b.n	4047f6 <_dtoa_r+0x516>
  40492e:	4641      	mov	r1, r8
  404930:	4648      	mov	r0, r9
  404932:	f001 fa01 	bl	405d38 <__mcmp>
  404936:	2800      	cmp	r0, #0
  404938:	f6bf af73 	bge.w	404822 <_dtoa_r+0x542>
  40493c:	9f02      	ldr	r7, [sp, #8]
  40493e:	4649      	mov	r1, r9
  404940:	2300      	movs	r3, #0
  404942:	220a      	movs	r2, #10
  404944:	4620      	mov	r0, r4
  404946:	3f01      	subs	r7, #1
  404948:	9702      	str	r7, [sp, #8]
  40494a:	f001 f827 	bl	40599c <__multadd>
  40494e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404950:	4681      	mov	r9, r0
  404952:	2b00      	cmp	r3, #0
  404954:	f040 83b6 	bne.w	4050c4 <_dtoa_r+0xde4>
  404958:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40495a:	2b00      	cmp	r3, #0
  40495c:	f340 83bf 	ble.w	4050de <_dtoa_r+0xdfe>
  404960:	930a      	str	r3, [sp, #40]	; 0x28
  404962:	f8dd b010 	ldr.w	fp, [sp, #16]
  404966:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  404968:	465d      	mov	r5, fp
  40496a:	e002      	b.n	404972 <_dtoa_r+0x692>
  40496c:	f001 f816 	bl	40599c <__multadd>
  404970:	4681      	mov	r9, r0
  404972:	4641      	mov	r1, r8
  404974:	4648      	mov	r0, r9
  404976:	f7ff fc1d 	bl	4041b4 <quorem>
  40497a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  40497e:	f805 ab01 	strb.w	sl, [r5], #1
  404982:	eba5 030b 	sub.w	r3, r5, fp
  404986:	42bb      	cmp	r3, r7
  404988:	f04f 020a 	mov.w	r2, #10
  40498c:	f04f 0300 	mov.w	r3, #0
  404990:	4649      	mov	r1, r9
  404992:	4620      	mov	r0, r4
  404994:	dbea      	blt.n	40496c <_dtoa_r+0x68c>
  404996:	9b04      	ldr	r3, [sp, #16]
  404998:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40499a:	2a01      	cmp	r2, #1
  40499c:	bfac      	ite	ge
  40499e:	189b      	addge	r3, r3, r2
  4049a0:	3301      	addlt	r3, #1
  4049a2:	461d      	mov	r5, r3
  4049a4:	f04f 0b00 	mov.w	fp, #0
  4049a8:	4649      	mov	r1, r9
  4049aa:	2201      	movs	r2, #1
  4049ac:	4620      	mov	r0, r4
  4049ae:	f001 f971 	bl	405c94 <__lshift>
  4049b2:	4641      	mov	r1, r8
  4049b4:	4681      	mov	r9, r0
  4049b6:	f001 f9bf 	bl	405d38 <__mcmp>
  4049ba:	2800      	cmp	r0, #0
  4049bc:	f340 823d 	ble.w	404e3a <_dtoa_r+0xb5a>
  4049c0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4049c4:	9904      	ldr	r1, [sp, #16]
  4049c6:	1e6b      	subs	r3, r5, #1
  4049c8:	e004      	b.n	4049d4 <_dtoa_r+0x6f4>
  4049ca:	428b      	cmp	r3, r1
  4049cc:	f000 81ae 	beq.w	404d2c <_dtoa_r+0xa4c>
  4049d0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  4049d4:	2a39      	cmp	r2, #57	; 0x39
  4049d6:	f103 0501 	add.w	r5, r3, #1
  4049da:	d0f6      	beq.n	4049ca <_dtoa_r+0x6ea>
  4049dc:	3201      	adds	r2, #1
  4049de:	701a      	strb	r2, [r3, #0]
  4049e0:	4641      	mov	r1, r8
  4049e2:	4620      	mov	r0, r4
  4049e4:	f000 ffd0 	bl	405988 <_Bfree>
  4049e8:	2e00      	cmp	r6, #0
  4049ea:	f43f ae3d 	beq.w	404668 <_dtoa_r+0x388>
  4049ee:	f1bb 0f00 	cmp.w	fp, #0
  4049f2:	d005      	beq.n	404a00 <_dtoa_r+0x720>
  4049f4:	45b3      	cmp	fp, r6
  4049f6:	d003      	beq.n	404a00 <_dtoa_r+0x720>
  4049f8:	4659      	mov	r1, fp
  4049fa:	4620      	mov	r0, r4
  4049fc:	f000 ffc4 	bl	405988 <_Bfree>
  404a00:	4631      	mov	r1, r6
  404a02:	4620      	mov	r0, r4
  404a04:	f000 ffc0 	bl	405988 <_Bfree>
  404a08:	e62e      	b.n	404668 <_dtoa_r+0x388>
  404a0a:	2300      	movs	r3, #0
  404a0c:	930b      	str	r3, [sp, #44]	; 0x2c
  404a0e:	9b02      	ldr	r3, [sp, #8]
  404a10:	9a25      	ldr	r2, [sp, #148]	; 0x94
  404a12:	4413      	add	r3, r2
  404a14:	930f      	str	r3, [sp, #60]	; 0x3c
  404a16:	3301      	adds	r3, #1
  404a18:	2b01      	cmp	r3, #1
  404a1a:	461f      	mov	r7, r3
  404a1c:	461e      	mov	r6, r3
  404a1e:	930a      	str	r3, [sp, #40]	; 0x28
  404a20:	bfb8      	it	lt
  404a22:	2701      	movlt	r7, #1
  404a24:	2100      	movs	r1, #0
  404a26:	2f17      	cmp	r7, #23
  404a28:	6461      	str	r1, [r4, #68]	; 0x44
  404a2a:	d90a      	bls.n	404a42 <_dtoa_r+0x762>
  404a2c:	2201      	movs	r2, #1
  404a2e:	2304      	movs	r3, #4
  404a30:	005b      	lsls	r3, r3, #1
  404a32:	f103 0014 	add.w	r0, r3, #20
  404a36:	4287      	cmp	r7, r0
  404a38:	4611      	mov	r1, r2
  404a3a:	f102 0201 	add.w	r2, r2, #1
  404a3e:	d2f7      	bcs.n	404a30 <_dtoa_r+0x750>
  404a40:	6461      	str	r1, [r4, #68]	; 0x44
  404a42:	4620      	mov	r0, r4
  404a44:	f000 ff7a 	bl	40593c <_Balloc>
  404a48:	2e0e      	cmp	r6, #14
  404a4a:	9004      	str	r0, [sp, #16]
  404a4c:	6420      	str	r0, [r4, #64]	; 0x40
  404a4e:	f63f ad41 	bhi.w	4044d4 <_dtoa_r+0x1f4>
  404a52:	2d00      	cmp	r5, #0
  404a54:	f43f ad3e 	beq.w	4044d4 <_dtoa_r+0x1f4>
  404a58:	9902      	ldr	r1, [sp, #8]
  404a5a:	2900      	cmp	r1, #0
  404a5c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  404a60:	f340 8202 	ble.w	404e68 <_dtoa_r+0xb88>
  404a64:	4bb8      	ldr	r3, [pc, #736]	; (404d48 <_dtoa_r+0xa68>)
  404a66:	f001 020f 	and.w	r2, r1, #15
  404a6a:	110d      	asrs	r5, r1, #4
  404a6c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404a70:	06e9      	lsls	r1, r5, #27
  404a72:	e9d3 6700 	ldrd	r6, r7, [r3]
  404a76:	f140 81ae 	bpl.w	404dd6 <_dtoa_r+0xaf6>
  404a7a:	4bb4      	ldr	r3, [pc, #720]	; (404d4c <_dtoa_r+0xa6c>)
  404a7c:	4650      	mov	r0, sl
  404a7e:	4659      	mov	r1, fp
  404a80:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  404a84:	f002 faa0 	bl	406fc8 <__aeabi_ddiv>
  404a88:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  404a8c:	f005 050f 	and.w	r5, r5, #15
  404a90:	f04f 0a03 	mov.w	sl, #3
  404a94:	b18d      	cbz	r5, 404aba <_dtoa_r+0x7da>
  404a96:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 404d4c <_dtoa_r+0xa6c>
  404a9a:	07ea      	lsls	r2, r5, #31
  404a9c:	d509      	bpl.n	404ab2 <_dtoa_r+0x7d2>
  404a9e:	4630      	mov	r0, r6
  404aa0:	4639      	mov	r1, r7
  404aa2:	e9d8 2300 	ldrd	r2, r3, [r8]
  404aa6:	f002 f965 	bl	406d74 <__aeabi_dmul>
  404aaa:	f10a 0a01 	add.w	sl, sl, #1
  404aae:	4606      	mov	r6, r0
  404ab0:	460f      	mov	r7, r1
  404ab2:	106d      	asrs	r5, r5, #1
  404ab4:	f108 0808 	add.w	r8, r8, #8
  404ab8:	d1ef      	bne.n	404a9a <_dtoa_r+0x7ba>
  404aba:	463b      	mov	r3, r7
  404abc:	4632      	mov	r2, r6
  404abe:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  404ac2:	f002 fa81 	bl	406fc8 <__aeabi_ddiv>
  404ac6:	4607      	mov	r7, r0
  404ac8:	4688      	mov	r8, r1
  404aca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404acc:	b143      	cbz	r3, 404ae0 <_dtoa_r+0x800>
  404ace:	2200      	movs	r2, #0
  404ad0:	4b9f      	ldr	r3, [pc, #636]	; (404d50 <_dtoa_r+0xa70>)
  404ad2:	4638      	mov	r0, r7
  404ad4:	4641      	mov	r1, r8
  404ad6:	f002 fbbf 	bl	407258 <__aeabi_dcmplt>
  404ada:	2800      	cmp	r0, #0
  404adc:	f040 8286 	bne.w	404fec <_dtoa_r+0xd0c>
  404ae0:	4650      	mov	r0, sl
  404ae2:	f002 f8e1 	bl	406ca8 <__aeabi_i2d>
  404ae6:	463a      	mov	r2, r7
  404ae8:	4643      	mov	r3, r8
  404aea:	f002 f943 	bl	406d74 <__aeabi_dmul>
  404aee:	4b99      	ldr	r3, [pc, #612]	; (404d54 <_dtoa_r+0xa74>)
  404af0:	2200      	movs	r2, #0
  404af2:	f001 ff8d 	bl	406a10 <__adddf3>
  404af6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404af8:	4605      	mov	r5, r0
  404afa:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404afe:	2b00      	cmp	r3, #0
  404b00:	f000 813e 	beq.w	404d80 <_dtoa_r+0xaa0>
  404b04:	9b02      	ldr	r3, [sp, #8]
  404b06:	9315      	str	r3, [sp, #84]	; 0x54
  404b08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404b0a:	9312      	str	r3, [sp, #72]	; 0x48
  404b0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404b0e:	2b00      	cmp	r3, #0
  404b10:	f000 81fa 	beq.w	404f08 <_dtoa_r+0xc28>
  404b14:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404b16:	4b8c      	ldr	r3, [pc, #560]	; (404d48 <_dtoa_r+0xa68>)
  404b18:	498f      	ldr	r1, [pc, #572]	; (404d58 <_dtoa_r+0xa78>)
  404b1a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404b1e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  404b22:	2000      	movs	r0, #0
  404b24:	f002 fa50 	bl	406fc8 <__aeabi_ddiv>
  404b28:	462a      	mov	r2, r5
  404b2a:	4633      	mov	r3, r6
  404b2c:	f001 ff6e 	bl	406a0c <__aeabi_dsub>
  404b30:	4682      	mov	sl, r0
  404b32:	468b      	mov	fp, r1
  404b34:	4638      	mov	r0, r7
  404b36:	4641      	mov	r1, r8
  404b38:	f002 fbcc 	bl	4072d4 <__aeabi_d2iz>
  404b3c:	4605      	mov	r5, r0
  404b3e:	f002 f8b3 	bl	406ca8 <__aeabi_i2d>
  404b42:	4602      	mov	r2, r0
  404b44:	460b      	mov	r3, r1
  404b46:	4638      	mov	r0, r7
  404b48:	4641      	mov	r1, r8
  404b4a:	f001 ff5f 	bl	406a0c <__aeabi_dsub>
  404b4e:	3530      	adds	r5, #48	; 0x30
  404b50:	fa5f f885 	uxtb.w	r8, r5
  404b54:	9d04      	ldr	r5, [sp, #16]
  404b56:	4606      	mov	r6, r0
  404b58:	460f      	mov	r7, r1
  404b5a:	f885 8000 	strb.w	r8, [r5]
  404b5e:	4602      	mov	r2, r0
  404b60:	460b      	mov	r3, r1
  404b62:	4650      	mov	r0, sl
  404b64:	4659      	mov	r1, fp
  404b66:	3501      	adds	r5, #1
  404b68:	f002 fb94 	bl	407294 <__aeabi_dcmpgt>
  404b6c:	2800      	cmp	r0, #0
  404b6e:	d154      	bne.n	404c1a <_dtoa_r+0x93a>
  404b70:	4632      	mov	r2, r6
  404b72:	463b      	mov	r3, r7
  404b74:	2000      	movs	r0, #0
  404b76:	4976      	ldr	r1, [pc, #472]	; (404d50 <_dtoa_r+0xa70>)
  404b78:	f001 ff48 	bl	406a0c <__aeabi_dsub>
  404b7c:	4602      	mov	r2, r0
  404b7e:	460b      	mov	r3, r1
  404b80:	4650      	mov	r0, sl
  404b82:	4659      	mov	r1, fp
  404b84:	f002 fb86 	bl	407294 <__aeabi_dcmpgt>
  404b88:	2800      	cmp	r0, #0
  404b8a:	f040 8270 	bne.w	40506e <_dtoa_r+0xd8e>
  404b8e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404b90:	2a01      	cmp	r2, #1
  404b92:	f000 8111 	beq.w	404db8 <_dtoa_r+0xad8>
  404b96:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404b98:	9a04      	ldr	r2, [sp, #16]
  404b9a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  404b9e:	4413      	add	r3, r2
  404ba0:	4699      	mov	r9, r3
  404ba2:	e00d      	b.n	404bc0 <_dtoa_r+0x8e0>
  404ba4:	2000      	movs	r0, #0
  404ba6:	496a      	ldr	r1, [pc, #424]	; (404d50 <_dtoa_r+0xa70>)
  404ba8:	f001 ff30 	bl	406a0c <__aeabi_dsub>
  404bac:	4652      	mov	r2, sl
  404bae:	465b      	mov	r3, fp
  404bb0:	f002 fb52 	bl	407258 <__aeabi_dcmplt>
  404bb4:	2800      	cmp	r0, #0
  404bb6:	f040 8258 	bne.w	40506a <_dtoa_r+0xd8a>
  404bba:	454d      	cmp	r5, r9
  404bbc:	f000 80fa 	beq.w	404db4 <_dtoa_r+0xad4>
  404bc0:	4650      	mov	r0, sl
  404bc2:	4659      	mov	r1, fp
  404bc4:	2200      	movs	r2, #0
  404bc6:	4b65      	ldr	r3, [pc, #404]	; (404d5c <_dtoa_r+0xa7c>)
  404bc8:	f002 f8d4 	bl	406d74 <__aeabi_dmul>
  404bcc:	2200      	movs	r2, #0
  404bce:	4b63      	ldr	r3, [pc, #396]	; (404d5c <_dtoa_r+0xa7c>)
  404bd0:	4682      	mov	sl, r0
  404bd2:	468b      	mov	fp, r1
  404bd4:	4630      	mov	r0, r6
  404bd6:	4639      	mov	r1, r7
  404bd8:	f002 f8cc 	bl	406d74 <__aeabi_dmul>
  404bdc:	460f      	mov	r7, r1
  404bde:	4606      	mov	r6, r0
  404be0:	f002 fb78 	bl	4072d4 <__aeabi_d2iz>
  404be4:	4680      	mov	r8, r0
  404be6:	f002 f85f 	bl	406ca8 <__aeabi_i2d>
  404bea:	4602      	mov	r2, r0
  404bec:	460b      	mov	r3, r1
  404bee:	4630      	mov	r0, r6
  404bf0:	4639      	mov	r1, r7
  404bf2:	f001 ff0b 	bl	406a0c <__aeabi_dsub>
  404bf6:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404bfa:	fa5f f888 	uxtb.w	r8, r8
  404bfe:	4652      	mov	r2, sl
  404c00:	465b      	mov	r3, fp
  404c02:	f805 8b01 	strb.w	r8, [r5], #1
  404c06:	4606      	mov	r6, r0
  404c08:	460f      	mov	r7, r1
  404c0a:	f002 fb25 	bl	407258 <__aeabi_dcmplt>
  404c0e:	4632      	mov	r2, r6
  404c10:	463b      	mov	r3, r7
  404c12:	2800      	cmp	r0, #0
  404c14:	d0c6      	beq.n	404ba4 <_dtoa_r+0x8c4>
  404c16:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404c1a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404c1c:	9302      	str	r3, [sp, #8]
  404c1e:	e523      	b.n	404668 <_dtoa_r+0x388>
  404c20:	2300      	movs	r3, #0
  404c22:	930b      	str	r3, [sp, #44]	; 0x2c
  404c24:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404c26:	2b00      	cmp	r3, #0
  404c28:	f340 80dc 	ble.w	404de4 <_dtoa_r+0xb04>
  404c2c:	461f      	mov	r7, r3
  404c2e:	461e      	mov	r6, r3
  404c30:	930f      	str	r3, [sp, #60]	; 0x3c
  404c32:	930a      	str	r3, [sp, #40]	; 0x28
  404c34:	e6f6      	b.n	404a24 <_dtoa_r+0x744>
  404c36:	2301      	movs	r3, #1
  404c38:	930b      	str	r3, [sp, #44]	; 0x2c
  404c3a:	e7f3      	b.n	404c24 <_dtoa_r+0x944>
  404c3c:	f1ba 0f00 	cmp.w	sl, #0
  404c40:	f47f ada8 	bne.w	404794 <_dtoa_r+0x4b4>
  404c44:	f3cb 0313 	ubfx	r3, fp, #0, #20
  404c48:	2b00      	cmp	r3, #0
  404c4a:	f47f adba 	bne.w	4047c2 <_dtoa_r+0x4e2>
  404c4e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  404c52:	0d3f      	lsrs	r7, r7, #20
  404c54:	053f      	lsls	r7, r7, #20
  404c56:	2f00      	cmp	r7, #0
  404c58:	f000 820d 	beq.w	405076 <_dtoa_r+0xd96>
  404c5c:	9b08      	ldr	r3, [sp, #32]
  404c5e:	3301      	adds	r3, #1
  404c60:	9308      	str	r3, [sp, #32]
  404c62:	9b06      	ldr	r3, [sp, #24]
  404c64:	3301      	adds	r3, #1
  404c66:	9306      	str	r3, [sp, #24]
  404c68:	2301      	movs	r3, #1
  404c6a:	930c      	str	r3, [sp, #48]	; 0x30
  404c6c:	e5ab      	b.n	4047c6 <_dtoa_r+0x4e6>
  404c6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404c70:	2b00      	cmp	r3, #0
  404c72:	f73f ac42 	bgt.w	4044fa <_dtoa_r+0x21a>
  404c76:	f040 8221 	bne.w	4050bc <_dtoa_r+0xddc>
  404c7a:	2200      	movs	r2, #0
  404c7c:	4b38      	ldr	r3, [pc, #224]	; (404d60 <_dtoa_r+0xa80>)
  404c7e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  404c82:	f002 f877 	bl	406d74 <__aeabi_dmul>
  404c86:	4652      	mov	r2, sl
  404c88:	465b      	mov	r3, fp
  404c8a:	f002 faf9 	bl	407280 <__aeabi_dcmpge>
  404c8e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  404c92:	4646      	mov	r6, r8
  404c94:	2800      	cmp	r0, #0
  404c96:	d041      	beq.n	404d1c <_dtoa_r+0xa3c>
  404c98:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404c9a:	9d04      	ldr	r5, [sp, #16]
  404c9c:	43db      	mvns	r3, r3
  404c9e:	9302      	str	r3, [sp, #8]
  404ca0:	4641      	mov	r1, r8
  404ca2:	4620      	mov	r0, r4
  404ca4:	f000 fe70 	bl	405988 <_Bfree>
  404ca8:	2e00      	cmp	r6, #0
  404caa:	f43f acdd 	beq.w	404668 <_dtoa_r+0x388>
  404cae:	e6a7      	b.n	404a00 <_dtoa_r+0x720>
  404cb0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  404cb2:	4649      	mov	r1, r9
  404cb4:	4620      	mov	r0, r4
  404cb6:	f000 ff9d 	bl	405bf4 <__pow5mult>
  404cba:	4681      	mov	r9, r0
  404cbc:	e558      	b.n	404770 <_dtoa_r+0x490>
  404cbe:	9a14      	ldr	r2, [sp, #80]	; 0x50
  404cc0:	2a00      	cmp	r2, #0
  404cc2:	f000 8187 	beq.w	404fd4 <_dtoa_r+0xcf4>
  404cc6:	f203 4333 	addw	r3, r3, #1075	; 0x433
  404cca:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404ccc:	9d08      	ldr	r5, [sp, #32]
  404cce:	e4f2      	b.n	4046b6 <_dtoa_r+0x3d6>
  404cd0:	f1ba 0f00 	cmp.w	sl, #0
  404cd4:	f47f ad75 	bne.w	4047c2 <_dtoa_r+0x4e2>
  404cd8:	e7b4      	b.n	404c44 <_dtoa_r+0x964>
  404cda:	f000 fe5f 	bl	40599c <__multadd>
  404cde:	4647      	mov	r7, r8
  404ce0:	4606      	mov	r6, r0
  404ce2:	4683      	mov	fp, r0
  404ce4:	e5be      	b.n	404864 <_dtoa_r+0x584>
  404ce6:	4601      	mov	r1, r0
  404ce8:	4620      	mov	r0, r4
  404cea:	9306      	str	r3, [sp, #24]
  404cec:	f000 fe4c 	bl	405988 <_Bfree>
  404cf0:	2201      	movs	r2, #1
  404cf2:	9b06      	ldr	r3, [sp, #24]
  404cf4:	e5e0      	b.n	4048b8 <_dtoa_r+0x5d8>
  404cf6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404cf8:	2b02      	cmp	r3, #2
  404cfa:	f77f ad96 	ble.w	40482a <_dtoa_r+0x54a>
  404cfe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404d00:	2b00      	cmp	r3, #0
  404d02:	d1c9      	bne.n	404c98 <_dtoa_r+0x9b8>
  404d04:	4641      	mov	r1, r8
  404d06:	2205      	movs	r2, #5
  404d08:	4620      	mov	r0, r4
  404d0a:	f000 fe47 	bl	40599c <__multadd>
  404d0e:	4601      	mov	r1, r0
  404d10:	4680      	mov	r8, r0
  404d12:	4648      	mov	r0, r9
  404d14:	f001 f810 	bl	405d38 <__mcmp>
  404d18:	2800      	cmp	r0, #0
  404d1a:	ddbd      	ble.n	404c98 <_dtoa_r+0x9b8>
  404d1c:	9a02      	ldr	r2, [sp, #8]
  404d1e:	9904      	ldr	r1, [sp, #16]
  404d20:	2331      	movs	r3, #49	; 0x31
  404d22:	3201      	adds	r2, #1
  404d24:	9202      	str	r2, [sp, #8]
  404d26:	700b      	strb	r3, [r1, #0]
  404d28:	1c4d      	adds	r5, r1, #1
  404d2a:	e7b9      	b.n	404ca0 <_dtoa_r+0x9c0>
  404d2c:	9a02      	ldr	r2, [sp, #8]
  404d2e:	3201      	adds	r2, #1
  404d30:	9202      	str	r2, [sp, #8]
  404d32:	9a04      	ldr	r2, [sp, #16]
  404d34:	2331      	movs	r3, #49	; 0x31
  404d36:	7013      	strb	r3, [r2, #0]
  404d38:	e652      	b.n	4049e0 <_dtoa_r+0x700>
  404d3a:	2301      	movs	r3, #1
  404d3c:	930b      	str	r3, [sp, #44]	; 0x2c
  404d3e:	e666      	b.n	404a0e <_dtoa_r+0x72e>
  404d40:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  404d44:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404d46:	e48f      	b.n	404668 <_dtoa_r+0x388>
  404d48:	00407570 	.word	0x00407570
  404d4c:	00407548 	.word	0x00407548
  404d50:	3ff00000 	.word	0x3ff00000
  404d54:	401c0000 	.word	0x401c0000
  404d58:	3fe00000 	.word	0x3fe00000
  404d5c:	40240000 	.word	0x40240000
  404d60:	40140000 	.word	0x40140000
  404d64:	4650      	mov	r0, sl
  404d66:	f001 ff9f 	bl	406ca8 <__aeabi_i2d>
  404d6a:	463a      	mov	r2, r7
  404d6c:	4643      	mov	r3, r8
  404d6e:	f002 f801 	bl	406d74 <__aeabi_dmul>
  404d72:	2200      	movs	r2, #0
  404d74:	4bc1      	ldr	r3, [pc, #772]	; (40507c <_dtoa_r+0xd9c>)
  404d76:	f001 fe4b 	bl	406a10 <__adddf3>
  404d7a:	4605      	mov	r5, r0
  404d7c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404d80:	4641      	mov	r1, r8
  404d82:	2200      	movs	r2, #0
  404d84:	4bbe      	ldr	r3, [pc, #760]	; (405080 <_dtoa_r+0xda0>)
  404d86:	4638      	mov	r0, r7
  404d88:	f001 fe40 	bl	406a0c <__aeabi_dsub>
  404d8c:	462a      	mov	r2, r5
  404d8e:	4633      	mov	r3, r6
  404d90:	4682      	mov	sl, r0
  404d92:	468b      	mov	fp, r1
  404d94:	f002 fa7e 	bl	407294 <__aeabi_dcmpgt>
  404d98:	4680      	mov	r8, r0
  404d9a:	2800      	cmp	r0, #0
  404d9c:	f040 8110 	bne.w	404fc0 <_dtoa_r+0xce0>
  404da0:	462a      	mov	r2, r5
  404da2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  404da6:	4650      	mov	r0, sl
  404da8:	4659      	mov	r1, fp
  404daa:	f002 fa55 	bl	407258 <__aeabi_dcmplt>
  404dae:	b118      	cbz	r0, 404db8 <_dtoa_r+0xad8>
  404db0:	4646      	mov	r6, r8
  404db2:	e771      	b.n	404c98 <_dtoa_r+0x9b8>
  404db4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404db8:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  404dbc:	f7ff bb8a 	b.w	4044d4 <_dtoa_r+0x1f4>
  404dc0:	9804      	ldr	r0, [sp, #16]
  404dc2:	f7ff babb 	b.w	40433c <_dtoa_r+0x5c>
  404dc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404dc8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  404dca:	970c      	str	r7, [sp, #48]	; 0x30
  404dcc:	1afb      	subs	r3, r7, r3
  404dce:	441a      	add	r2, r3
  404dd0:	920d      	str	r2, [sp, #52]	; 0x34
  404dd2:	2700      	movs	r7, #0
  404dd4:	e469      	b.n	4046aa <_dtoa_r+0x3ca>
  404dd6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  404dda:	f04f 0a02 	mov.w	sl, #2
  404dde:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  404de2:	e657      	b.n	404a94 <_dtoa_r+0x7b4>
  404de4:	2100      	movs	r1, #0
  404de6:	2301      	movs	r3, #1
  404de8:	6461      	str	r1, [r4, #68]	; 0x44
  404dea:	4620      	mov	r0, r4
  404dec:	9325      	str	r3, [sp, #148]	; 0x94
  404dee:	f000 fda5 	bl	40593c <_Balloc>
  404df2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404df4:	9004      	str	r0, [sp, #16]
  404df6:	6420      	str	r0, [r4, #64]	; 0x40
  404df8:	930a      	str	r3, [sp, #40]	; 0x28
  404dfa:	930f      	str	r3, [sp, #60]	; 0x3c
  404dfc:	e629      	b.n	404a52 <_dtoa_r+0x772>
  404dfe:	2a00      	cmp	r2, #0
  404e00:	46d0      	mov	r8, sl
  404e02:	f8cd b018 	str.w	fp, [sp, #24]
  404e06:	469a      	mov	sl, r3
  404e08:	dd11      	ble.n	404e2e <_dtoa_r+0xb4e>
  404e0a:	4649      	mov	r1, r9
  404e0c:	2201      	movs	r2, #1
  404e0e:	4620      	mov	r0, r4
  404e10:	f000 ff40 	bl	405c94 <__lshift>
  404e14:	4641      	mov	r1, r8
  404e16:	4681      	mov	r9, r0
  404e18:	f000 ff8e 	bl	405d38 <__mcmp>
  404e1c:	2800      	cmp	r0, #0
  404e1e:	f340 8146 	ble.w	4050ae <_dtoa_r+0xdce>
  404e22:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  404e26:	f000 8106 	beq.w	405036 <_dtoa_r+0xd56>
  404e2a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  404e2e:	46b3      	mov	fp, r6
  404e30:	f887 a000 	strb.w	sl, [r7]
  404e34:	1c7d      	adds	r5, r7, #1
  404e36:	9e06      	ldr	r6, [sp, #24]
  404e38:	e5d2      	b.n	4049e0 <_dtoa_r+0x700>
  404e3a:	d104      	bne.n	404e46 <_dtoa_r+0xb66>
  404e3c:	f01a 0f01 	tst.w	sl, #1
  404e40:	d001      	beq.n	404e46 <_dtoa_r+0xb66>
  404e42:	e5bd      	b.n	4049c0 <_dtoa_r+0x6e0>
  404e44:	4615      	mov	r5, r2
  404e46:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404e4a:	2b30      	cmp	r3, #48	; 0x30
  404e4c:	f105 32ff 	add.w	r2, r5, #4294967295
  404e50:	d0f8      	beq.n	404e44 <_dtoa_r+0xb64>
  404e52:	e5c5      	b.n	4049e0 <_dtoa_r+0x700>
  404e54:	9904      	ldr	r1, [sp, #16]
  404e56:	2230      	movs	r2, #48	; 0x30
  404e58:	700a      	strb	r2, [r1, #0]
  404e5a:	9a02      	ldr	r2, [sp, #8]
  404e5c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404e60:	3201      	adds	r2, #1
  404e62:	9202      	str	r2, [sp, #8]
  404e64:	f7ff bbfc 	b.w	404660 <_dtoa_r+0x380>
  404e68:	f000 80bb 	beq.w	404fe2 <_dtoa_r+0xd02>
  404e6c:	9b02      	ldr	r3, [sp, #8]
  404e6e:	425d      	negs	r5, r3
  404e70:	4b84      	ldr	r3, [pc, #528]	; (405084 <_dtoa_r+0xda4>)
  404e72:	f005 020f 	and.w	r2, r5, #15
  404e76:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404e7a:	e9d3 2300 	ldrd	r2, r3, [r3]
  404e7e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  404e82:	f001 ff77 	bl	406d74 <__aeabi_dmul>
  404e86:	112d      	asrs	r5, r5, #4
  404e88:	4607      	mov	r7, r0
  404e8a:	4688      	mov	r8, r1
  404e8c:	f000 812c 	beq.w	4050e8 <_dtoa_r+0xe08>
  404e90:	4e7d      	ldr	r6, [pc, #500]	; (405088 <_dtoa_r+0xda8>)
  404e92:	f04f 0a02 	mov.w	sl, #2
  404e96:	07eb      	lsls	r3, r5, #31
  404e98:	d509      	bpl.n	404eae <_dtoa_r+0xbce>
  404e9a:	4638      	mov	r0, r7
  404e9c:	4641      	mov	r1, r8
  404e9e:	e9d6 2300 	ldrd	r2, r3, [r6]
  404ea2:	f001 ff67 	bl	406d74 <__aeabi_dmul>
  404ea6:	f10a 0a01 	add.w	sl, sl, #1
  404eaa:	4607      	mov	r7, r0
  404eac:	4688      	mov	r8, r1
  404eae:	106d      	asrs	r5, r5, #1
  404eb0:	f106 0608 	add.w	r6, r6, #8
  404eb4:	d1ef      	bne.n	404e96 <_dtoa_r+0xbb6>
  404eb6:	e608      	b.n	404aca <_dtoa_r+0x7ea>
  404eb8:	6871      	ldr	r1, [r6, #4]
  404eba:	4620      	mov	r0, r4
  404ebc:	f000 fd3e 	bl	40593c <_Balloc>
  404ec0:	6933      	ldr	r3, [r6, #16]
  404ec2:	3302      	adds	r3, #2
  404ec4:	009a      	lsls	r2, r3, #2
  404ec6:	4605      	mov	r5, r0
  404ec8:	f106 010c 	add.w	r1, r6, #12
  404ecc:	300c      	adds	r0, #12
  404ece:	f000 fc8f 	bl	4057f0 <memcpy>
  404ed2:	4629      	mov	r1, r5
  404ed4:	2201      	movs	r2, #1
  404ed6:	4620      	mov	r0, r4
  404ed8:	f000 fedc 	bl	405c94 <__lshift>
  404edc:	9006      	str	r0, [sp, #24]
  404ede:	e4b5      	b.n	40484c <_dtoa_r+0x56c>
  404ee0:	2b39      	cmp	r3, #57	; 0x39
  404ee2:	f8cd b018 	str.w	fp, [sp, #24]
  404ee6:	46d0      	mov	r8, sl
  404ee8:	f000 80a5 	beq.w	405036 <_dtoa_r+0xd56>
  404eec:	f103 0a01 	add.w	sl, r3, #1
  404ef0:	46b3      	mov	fp, r6
  404ef2:	f887 a000 	strb.w	sl, [r7]
  404ef6:	1c7d      	adds	r5, r7, #1
  404ef8:	9e06      	ldr	r6, [sp, #24]
  404efa:	e571      	b.n	4049e0 <_dtoa_r+0x700>
  404efc:	465a      	mov	r2, fp
  404efe:	46d0      	mov	r8, sl
  404f00:	46b3      	mov	fp, r6
  404f02:	469a      	mov	sl, r3
  404f04:	4616      	mov	r6, r2
  404f06:	e54f      	b.n	4049a8 <_dtoa_r+0x6c8>
  404f08:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404f0a:	495e      	ldr	r1, [pc, #376]	; (405084 <_dtoa_r+0xda4>)
  404f0c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404f10:	462a      	mov	r2, r5
  404f12:	4633      	mov	r3, r6
  404f14:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404f18:	f001 ff2c 	bl	406d74 <__aeabi_dmul>
  404f1c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404f20:	4638      	mov	r0, r7
  404f22:	4641      	mov	r1, r8
  404f24:	f002 f9d6 	bl	4072d4 <__aeabi_d2iz>
  404f28:	4605      	mov	r5, r0
  404f2a:	f001 febd 	bl	406ca8 <__aeabi_i2d>
  404f2e:	460b      	mov	r3, r1
  404f30:	4602      	mov	r2, r0
  404f32:	4641      	mov	r1, r8
  404f34:	4638      	mov	r0, r7
  404f36:	f001 fd69 	bl	406a0c <__aeabi_dsub>
  404f3a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404f3c:	460f      	mov	r7, r1
  404f3e:	9904      	ldr	r1, [sp, #16]
  404f40:	3530      	adds	r5, #48	; 0x30
  404f42:	2b01      	cmp	r3, #1
  404f44:	700d      	strb	r5, [r1, #0]
  404f46:	4606      	mov	r6, r0
  404f48:	f101 0501 	add.w	r5, r1, #1
  404f4c:	d026      	beq.n	404f9c <_dtoa_r+0xcbc>
  404f4e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404f50:	9a04      	ldr	r2, [sp, #16]
  404f52:	f8df b13c 	ldr.w	fp, [pc, #316]	; 405090 <_dtoa_r+0xdb0>
  404f56:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  404f5a:	4413      	add	r3, r2
  404f5c:	f04f 0a00 	mov.w	sl, #0
  404f60:	4699      	mov	r9, r3
  404f62:	4652      	mov	r2, sl
  404f64:	465b      	mov	r3, fp
  404f66:	4630      	mov	r0, r6
  404f68:	4639      	mov	r1, r7
  404f6a:	f001 ff03 	bl	406d74 <__aeabi_dmul>
  404f6e:	460f      	mov	r7, r1
  404f70:	4606      	mov	r6, r0
  404f72:	f002 f9af 	bl	4072d4 <__aeabi_d2iz>
  404f76:	4680      	mov	r8, r0
  404f78:	f001 fe96 	bl	406ca8 <__aeabi_i2d>
  404f7c:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404f80:	4602      	mov	r2, r0
  404f82:	460b      	mov	r3, r1
  404f84:	4630      	mov	r0, r6
  404f86:	4639      	mov	r1, r7
  404f88:	f001 fd40 	bl	406a0c <__aeabi_dsub>
  404f8c:	f805 8b01 	strb.w	r8, [r5], #1
  404f90:	454d      	cmp	r5, r9
  404f92:	4606      	mov	r6, r0
  404f94:	460f      	mov	r7, r1
  404f96:	d1e4      	bne.n	404f62 <_dtoa_r+0xc82>
  404f98:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404f9c:	4b3b      	ldr	r3, [pc, #236]	; (40508c <_dtoa_r+0xdac>)
  404f9e:	2200      	movs	r2, #0
  404fa0:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  404fa4:	f001 fd34 	bl	406a10 <__adddf3>
  404fa8:	4632      	mov	r2, r6
  404faa:	463b      	mov	r3, r7
  404fac:	f002 f954 	bl	407258 <__aeabi_dcmplt>
  404fb0:	2800      	cmp	r0, #0
  404fb2:	d046      	beq.n	405042 <_dtoa_r+0xd62>
  404fb4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404fb6:	9302      	str	r3, [sp, #8]
  404fb8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404fbc:	f7ff bb43 	b.w	404646 <_dtoa_r+0x366>
  404fc0:	f04f 0800 	mov.w	r8, #0
  404fc4:	4646      	mov	r6, r8
  404fc6:	e6a9      	b.n	404d1c <_dtoa_r+0xa3c>
  404fc8:	9b08      	ldr	r3, [sp, #32]
  404fca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404fcc:	1a9d      	subs	r5, r3, r2
  404fce:	2300      	movs	r3, #0
  404fd0:	f7ff bb71 	b.w	4046b6 <_dtoa_r+0x3d6>
  404fd4:	9b18      	ldr	r3, [sp, #96]	; 0x60
  404fd6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404fd8:	9d08      	ldr	r5, [sp, #32]
  404fda:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  404fde:	f7ff bb6a 	b.w	4046b6 <_dtoa_r+0x3d6>
  404fe2:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  404fe6:	f04f 0a02 	mov.w	sl, #2
  404fea:	e56e      	b.n	404aca <_dtoa_r+0x7ea>
  404fec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404fee:	2b00      	cmp	r3, #0
  404ff0:	f43f aeb8 	beq.w	404d64 <_dtoa_r+0xa84>
  404ff4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404ff6:	2b00      	cmp	r3, #0
  404ff8:	f77f aede 	ble.w	404db8 <_dtoa_r+0xad8>
  404ffc:	2200      	movs	r2, #0
  404ffe:	4b24      	ldr	r3, [pc, #144]	; (405090 <_dtoa_r+0xdb0>)
  405000:	4638      	mov	r0, r7
  405002:	4641      	mov	r1, r8
  405004:	f001 feb6 	bl	406d74 <__aeabi_dmul>
  405008:	4607      	mov	r7, r0
  40500a:	4688      	mov	r8, r1
  40500c:	f10a 0001 	add.w	r0, sl, #1
  405010:	f001 fe4a 	bl	406ca8 <__aeabi_i2d>
  405014:	463a      	mov	r2, r7
  405016:	4643      	mov	r3, r8
  405018:	f001 feac 	bl	406d74 <__aeabi_dmul>
  40501c:	2200      	movs	r2, #0
  40501e:	4b17      	ldr	r3, [pc, #92]	; (40507c <_dtoa_r+0xd9c>)
  405020:	f001 fcf6 	bl	406a10 <__adddf3>
  405024:	9a02      	ldr	r2, [sp, #8]
  405026:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405028:	9312      	str	r3, [sp, #72]	; 0x48
  40502a:	3a01      	subs	r2, #1
  40502c:	4605      	mov	r5, r0
  40502e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405032:	9215      	str	r2, [sp, #84]	; 0x54
  405034:	e56a      	b.n	404b0c <_dtoa_r+0x82c>
  405036:	2239      	movs	r2, #57	; 0x39
  405038:	46b3      	mov	fp, r6
  40503a:	703a      	strb	r2, [r7, #0]
  40503c:	9e06      	ldr	r6, [sp, #24]
  40503e:	1c7d      	adds	r5, r7, #1
  405040:	e4c0      	b.n	4049c4 <_dtoa_r+0x6e4>
  405042:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  405046:	2000      	movs	r0, #0
  405048:	4910      	ldr	r1, [pc, #64]	; (40508c <_dtoa_r+0xdac>)
  40504a:	f001 fcdf 	bl	406a0c <__aeabi_dsub>
  40504e:	4632      	mov	r2, r6
  405050:	463b      	mov	r3, r7
  405052:	f002 f91f 	bl	407294 <__aeabi_dcmpgt>
  405056:	b908      	cbnz	r0, 40505c <_dtoa_r+0xd7c>
  405058:	e6ae      	b.n	404db8 <_dtoa_r+0xad8>
  40505a:	4615      	mov	r5, r2
  40505c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  405060:	2b30      	cmp	r3, #48	; 0x30
  405062:	f105 32ff 	add.w	r2, r5, #4294967295
  405066:	d0f8      	beq.n	40505a <_dtoa_r+0xd7a>
  405068:	e5d7      	b.n	404c1a <_dtoa_r+0x93a>
  40506a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40506e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405070:	9302      	str	r3, [sp, #8]
  405072:	f7ff bae8 	b.w	404646 <_dtoa_r+0x366>
  405076:	970c      	str	r7, [sp, #48]	; 0x30
  405078:	f7ff bba5 	b.w	4047c6 <_dtoa_r+0x4e6>
  40507c:	401c0000 	.word	0x401c0000
  405080:	40140000 	.word	0x40140000
  405084:	00407570 	.word	0x00407570
  405088:	00407548 	.word	0x00407548
  40508c:	3fe00000 	.word	0x3fe00000
  405090:	40240000 	.word	0x40240000
  405094:	2b39      	cmp	r3, #57	; 0x39
  405096:	f8cd b018 	str.w	fp, [sp, #24]
  40509a:	46d0      	mov	r8, sl
  40509c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4050a0:	469a      	mov	sl, r3
  4050a2:	d0c8      	beq.n	405036 <_dtoa_r+0xd56>
  4050a4:	f1bb 0f00 	cmp.w	fp, #0
  4050a8:	f73f aebf 	bgt.w	404e2a <_dtoa_r+0xb4a>
  4050ac:	e6bf      	b.n	404e2e <_dtoa_r+0xb4e>
  4050ae:	f47f aebe 	bne.w	404e2e <_dtoa_r+0xb4e>
  4050b2:	f01a 0f01 	tst.w	sl, #1
  4050b6:	f43f aeba 	beq.w	404e2e <_dtoa_r+0xb4e>
  4050ba:	e6b2      	b.n	404e22 <_dtoa_r+0xb42>
  4050bc:	f04f 0800 	mov.w	r8, #0
  4050c0:	4646      	mov	r6, r8
  4050c2:	e5e9      	b.n	404c98 <_dtoa_r+0x9b8>
  4050c4:	4631      	mov	r1, r6
  4050c6:	2300      	movs	r3, #0
  4050c8:	220a      	movs	r2, #10
  4050ca:	4620      	mov	r0, r4
  4050cc:	f000 fc66 	bl	40599c <__multadd>
  4050d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4050d2:	2b00      	cmp	r3, #0
  4050d4:	4606      	mov	r6, r0
  4050d6:	dd0a      	ble.n	4050ee <_dtoa_r+0xe0e>
  4050d8:	930a      	str	r3, [sp, #40]	; 0x28
  4050da:	f7ff bbaa 	b.w	404832 <_dtoa_r+0x552>
  4050de:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4050e0:	2b02      	cmp	r3, #2
  4050e2:	dc23      	bgt.n	40512c <_dtoa_r+0xe4c>
  4050e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4050e6:	e43b      	b.n	404960 <_dtoa_r+0x680>
  4050e8:	f04f 0a02 	mov.w	sl, #2
  4050ec:	e4ed      	b.n	404aca <_dtoa_r+0x7ea>
  4050ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4050f0:	2b02      	cmp	r3, #2
  4050f2:	dc1b      	bgt.n	40512c <_dtoa_r+0xe4c>
  4050f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4050f6:	e7ef      	b.n	4050d8 <_dtoa_r+0xdf8>
  4050f8:	2500      	movs	r5, #0
  4050fa:	6465      	str	r5, [r4, #68]	; 0x44
  4050fc:	4629      	mov	r1, r5
  4050fe:	4620      	mov	r0, r4
  405100:	f000 fc1c 	bl	40593c <_Balloc>
  405104:	f04f 33ff 	mov.w	r3, #4294967295
  405108:	930a      	str	r3, [sp, #40]	; 0x28
  40510a:	930f      	str	r3, [sp, #60]	; 0x3c
  40510c:	2301      	movs	r3, #1
  40510e:	9004      	str	r0, [sp, #16]
  405110:	9525      	str	r5, [sp, #148]	; 0x94
  405112:	6420      	str	r0, [r4, #64]	; 0x40
  405114:	930b      	str	r3, [sp, #44]	; 0x2c
  405116:	f7ff b9dd 	b.w	4044d4 <_dtoa_r+0x1f4>
  40511a:	2501      	movs	r5, #1
  40511c:	f7ff b9a5 	b.w	40446a <_dtoa_r+0x18a>
  405120:	f43f ab69 	beq.w	4047f6 <_dtoa_r+0x516>
  405124:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  405128:	f7ff bbf9 	b.w	40491e <_dtoa_r+0x63e>
  40512c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40512e:	930a      	str	r3, [sp, #40]	; 0x28
  405130:	e5e5      	b.n	404cfe <_dtoa_r+0xa1e>
  405132:	bf00      	nop

00405134 <__libc_fini_array>:
  405134:	b538      	push	{r3, r4, r5, lr}
  405136:	4c0a      	ldr	r4, [pc, #40]	; (405160 <__libc_fini_array+0x2c>)
  405138:	4d0a      	ldr	r5, [pc, #40]	; (405164 <__libc_fini_array+0x30>)
  40513a:	1b64      	subs	r4, r4, r5
  40513c:	10a4      	asrs	r4, r4, #2
  40513e:	d00a      	beq.n	405156 <__libc_fini_array+0x22>
  405140:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  405144:	3b01      	subs	r3, #1
  405146:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40514a:	3c01      	subs	r4, #1
  40514c:	f855 3904 	ldr.w	r3, [r5], #-4
  405150:	4798      	blx	r3
  405152:	2c00      	cmp	r4, #0
  405154:	d1f9      	bne.n	40514a <__libc_fini_array+0x16>
  405156:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40515a:	f002 bb07 	b.w	40776c <_fini>
  40515e:	bf00      	nop
  405160:	0040777c 	.word	0x0040777c
  405164:	00407778 	.word	0x00407778

00405168 <_localeconv_r>:
  405168:	4a04      	ldr	r2, [pc, #16]	; (40517c <_localeconv_r+0x14>)
  40516a:	4b05      	ldr	r3, [pc, #20]	; (405180 <_localeconv_r+0x18>)
  40516c:	6812      	ldr	r2, [r2, #0]
  40516e:	6b50      	ldr	r0, [r2, #52]	; 0x34
  405170:	2800      	cmp	r0, #0
  405172:	bf08      	it	eq
  405174:	4618      	moveq	r0, r3
  405176:	30f0      	adds	r0, #240	; 0xf0
  405178:	4770      	bx	lr
  40517a:	bf00      	nop
  40517c:	200061b8 	.word	0x200061b8
  405180:	200069fc 	.word	0x200069fc

00405184 <__retarget_lock_acquire_recursive>:
  405184:	4770      	bx	lr
  405186:	bf00      	nop

00405188 <__retarget_lock_release_recursive>:
  405188:	4770      	bx	lr
  40518a:	bf00      	nop

0040518c <_malloc_r>:
  40518c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405190:	f101 060b 	add.w	r6, r1, #11
  405194:	2e16      	cmp	r6, #22
  405196:	b083      	sub	sp, #12
  405198:	4605      	mov	r5, r0
  40519a:	f240 809e 	bls.w	4052da <_malloc_r+0x14e>
  40519e:	f036 0607 	bics.w	r6, r6, #7
  4051a2:	f100 80bd 	bmi.w	405320 <_malloc_r+0x194>
  4051a6:	42b1      	cmp	r1, r6
  4051a8:	f200 80ba 	bhi.w	405320 <_malloc_r+0x194>
  4051ac:	f000 fbba 	bl	405924 <__malloc_lock>
  4051b0:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4051b4:	f0c0 8293 	bcc.w	4056de <_malloc_r+0x552>
  4051b8:	0a73      	lsrs	r3, r6, #9
  4051ba:	f000 80b8 	beq.w	40532e <_malloc_r+0x1a2>
  4051be:	2b04      	cmp	r3, #4
  4051c0:	f200 8179 	bhi.w	4054b6 <_malloc_r+0x32a>
  4051c4:	09b3      	lsrs	r3, r6, #6
  4051c6:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4051ca:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4051ce:	00c3      	lsls	r3, r0, #3
  4051d0:	4fbf      	ldr	r7, [pc, #764]	; (4054d0 <_malloc_r+0x344>)
  4051d2:	443b      	add	r3, r7
  4051d4:	f1a3 0108 	sub.w	r1, r3, #8
  4051d8:	685c      	ldr	r4, [r3, #4]
  4051da:	42a1      	cmp	r1, r4
  4051dc:	d106      	bne.n	4051ec <_malloc_r+0x60>
  4051de:	e00c      	b.n	4051fa <_malloc_r+0x6e>
  4051e0:	2a00      	cmp	r2, #0
  4051e2:	f280 80aa 	bge.w	40533a <_malloc_r+0x1ae>
  4051e6:	68e4      	ldr	r4, [r4, #12]
  4051e8:	42a1      	cmp	r1, r4
  4051ea:	d006      	beq.n	4051fa <_malloc_r+0x6e>
  4051ec:	6863      	ldr	r3, [r4, #4]
  4051ee:	f023 0303 	bic.w	r3, r3, #3
  4051f2:	1b9a      	subs	r2, r3, r6
  4051f4:	2a0f      	cmp	r2, #15
  4051f6:	ddf3      	ble.n	4051e0 <_malloc_r+0x54>
  4051f8:	4670      	mov	r0, lr
  4051fa:	693c      	ldr	r4, [r7, #16]
  4051fc:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4054e4 <_malloc_r+0x358>
  405200:	4574      	cmp	r4, lr
  405202:	f000 81ab 	beq.w	40555c <_malloc_r+0x3d0>
  405206:	6863      	ldr	r3, [r4, #4]
  405208:	f023 0303 	bic.w	r3, r3, #3
  40520c:	1b9a      	subs	r2, r3, r6
  40520e:	2a0f      	cmp	r2, #15
  405210:	f300 8190 	bgt.w	405534 <_malloc_r+0x3a8>
  405214:	2a00      	cmp	r2, #0
  405216:	f8c7 e014 	str.w	lr, [r7, #20]
  40521a:	f8c7 e010 	str.w	lr, [r7, #16]
  40521e:	f280 809d 	bge.w	40535c <_malloc_r+0x1d0>
  405222:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  405226:	f080 8161 	bcs.w	4054ec <_malloc_r+0x360>
  40522a:	08db      	lsrs	r3, r3, #3
  40522c:	f103 0c01 	add.w	ip, r3, #1
  405230:	1099      	asrs	r1, r3, #2
  405232:	687a      	ldr	r2, [r7, #4]
  405234:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  405238:	f8c4 8008 	str.w	r8, [r4, #8]
  40523c:	2301      	movs	r3, #1
  40523e:	408b      	lsls	r3, r1
  405240:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  405244:	4313      	orrs	r3, r2
  405246:	3908      	subs	r1, #8
  405248:	60e1      	str	r1, [r4, #12]
  40524a:	607b      	str	r3, [r7, #4]
  40524c:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  405250:	f8c8 400c 	str.w	r4, [r8, #12]
  405254:	1082      	asrs	r2, r0, #2
  405256:	2401      	movs	r4, #1
  405258:	4094      	lsls	r4, r2
  40525a:	429c      	cmp	r4, r3
  40525c:	f200 808b 	bhi.w	405376 <_malloc_r+0x1ea>
  405260:	421c      	tst	r4, r3
  405262:	d106      	bne.n	405272 <_malloc_r+0xe6>
  405264:	f020 0003 	bic.w	r0, r0, #3
  405268:	0064      	lsls	r4, r4, #1
  40526a:	421c      	tst	r4, r3
  40526c:	f100 0004 	add.w	r0, r0, #4
  405270:	d0fa      	beq.n	405268 <_malloc_r+0xdc>
  405272:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  405276:	46cc      	mov	ip, r9
  405278:	4680      	mov	r8, r0
  40527a:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40527e:	459c      	cmp	ip, r3
  405280:	d107      	bne.n	405292 <_malloc_r+0x106>
  405282:	e16d      	b.n	405560 <_malloc_r+0x3d4>
  405284:	2a00      	cmp	r2, #0
  405286:	f280 817b 	bge.w	405580 <_malloc_r+0x3f4>
  40528a:	68db      	ldr	r3, [r3, #12]
  40528c:	459c      	cmp	ip, r3
  40528e:	f000 8167 	beq.w	405560 <_malloc_r+0x3d4>
  405292:	6859      	ldr	r1, [r3, #4]
  405294:	f021 0103 	bic.w	r1, r1, #3
  405298:	1b8a      	subs	r2, r1, r6
  40529a:	2a0f      	cmp	r2, #15
  40529c:	ddf2      	ble.n	405284 <_malloc_r+0xf8>
  40529e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4052a2:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4052a6:	9300      	str	r3, [sp, #0]
  4052a8:	199c      	adds	r4, r3, r6
  4052aa:	4628      	mov	r0, r5
  4052ac:	f046 0601 	orr.w	r6, r6, #1
  4052b0:	f042 0501 	orr.w	r5, r2, #1
  4052b4:	605e      	str	r6, [r3, #4]
  4052b6:	f8c8 c00c 	str.w	ip, [r8, #12]
  4052ba:	f8cc 8008 	str.w	r8, [ip, #8]
  4052be:	617c      	str	r4, [r7, #20]
  4052c0:	613c      	str	r4, [r7, #16]
  4052c2:	f8c4 e00c 	str.w	lr, [r4, #12]
  4052c6:	f8c4 e008 	str.w	lr, [r4, #8]
  4052ca:	6065      	str	r5, [r4, #4]
  4052cc:	505a      	str	r2, [r3, r1]
  4052ce:	f000 fb2f 	bl	405930 <__malloc_unlock>
  4052d2:	9b00      	ldr	r3, [sp, #0]
  4052d4:	f103 0408 	add.w	r4, r3, #8
  4052d8:	e01e      	b.n	405318 <_malloc_r+0x18c>
  4052da:	2910      	cmp	r1, #16
  4052dc:	d820      	bhi.n	405320 <_malloc_r+0x194>
  4052de:	f000 fb21 	bl	405924 <__malloc_lock>
  4052e2:	2610      	movs	r6, #16
  4052e4:	2318      	movs	r3, #24
  4052e6:	2002      	movs	r0, #2
  4052e8:	4f79      	ldr	r7, [pc, #484]	; (4054d0 <_malloc_r+0x344>)
  4052ea:	443b      	add	r3, r7
  4052ec:	f1a3 0208 	sub.w	r2, r3, #8
  4052f0:	685c      	ldr	r4, [r3, #4]
  4052f2:	4294      	cmp	r4, r2
  4052f4:	f000 813d 	beq.w	405572 <_malloc_r+0x3e6>
  4052f8:	6863      	ldr	r3, [r4, #4]
  4052fa:	68e1      	ldr	r1, [r4, #12]
  4052fc:	68a6      	ldr	r6, [r4, #8]
  4052fe:	f023 0303 	bic.w	r3, r3, #3
  405302:	4423      	add	r3, r4
  405304:	4628      	mov	r0, r5
  405306:	685a      	ldr	r2, [r3, #4]
  405308:	60f1      	str	r1, [r6, #12]
  40530a:	f042 0201 	orr.w	r2, r2, #1
  40530e:	608e      	str	r6, [r1, #8]
  405310:	605a      	str	r2, [r3, #4]
  405312:	f000 fb0d 	bl	405930 <__malloc_unlock>
  405316:	3408      	adds	r4, #8
  405318:	4620      	mov	r0, r4
  40531a:	b003      	add	sp, #12
  40531c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405320:	2400      	movs	r4, #0
  405322:	230c      	movs	r3, #12
  405324:	4620      	mov	r0, r4
  405326:	602b      	str	r3, [r5, #0]
  405328:	b003      	add	sp, #12
  40532a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40532e:	2040      	movs	r0, #64	; 0x40
  405330:	f44f 7300 	mov.w	r3, #512	; 0x200
  405334:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  405338:	e74a      	b.n	4051d0 <_malloc_r+0x44>
  40533a:	4423      	add	r3, r4
  40533c:	68e1      	ldr	r1, [r4, #12]
  40533e:	685a      	ldr	r2, [r3, #4]
  405340:	68a6      	ldr	r6, [r4, #8]
  405342:	f042 0201 	orr.w	r2, r2, #1
  405346:	60f1      	str	r1, [r6, #12]
  405348:	4628      	mov	r0, r5
  40534a:	608e      	str	r6, [r1, #8]
  40534c:	605a      	str	r2, [r3, #4]
  40534e:	f000 faef 	bl	405930 <__malloc_unlock>
  405352:	3408      	adds	r4, #8
  405354:	4620      	mov	r0, r4
  405356:	b003      	add	sp, #12
  405358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40535c:	4423      	add	r3, r4
  40535e:	4628      	mov	r0, r5
  405360:	685a      	ldr	r2, [r3, #4]
  405362:	f042 0201 	orr.w	r2, r2, #1
  405366:	605a      	str	r2, [r3, #4]
  405368:	f000 fae2 	bl	405930 <__malloc_unlock>
  40536c:	3408      	adds	r4, #8
  40536e:	4620      	mov	r0, r4
  405370:	b003      	add	sp, #12
  405372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405376:	68bc      	ldr	r4, [r7, #8]
  405378:	6863      	ldr	r3, [r4, #4]
  40537a:	f023 0803 	bic.w	r8, r3, #3
  40537e:	45b0      	cmp	r8, r6
  405380:	d304      	bcc.n	40538c <_malloc_r+0x200>
  405382:	eba8 0306 	sub.w	r3, r8, r6
  405386:	2b0f      	cmp	r3, #15
  405388:	f300 8085 	bgt.w	405496 <_malloc_r+0x30a>
  40538c:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4054e8 <_malloc_r+0x35c>
  405390:	4b50      	ldr	r3, [pc, #320]	; (4054d4 <_malloc_r+0x348>)
  405392:	f8d9 2000 	ldr.w	r2, [r9]
  405396:	681b      	ldr	r3, [r3, #0]
  405398:	3201      	adds	r2, #1
  40539a:	4433      	add	r3, r6
  40539c:	eb04 0a08 	add.w	sl, r4, r8
  4053a0:	f000 8155 	beq.w	40564e <_malloc_r+0x4c2>
  4053a4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4053a8:	330f      	adds	r3, #15
  4053aa:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4053ae:	f02b 0b0f 	bic.w	fp, fp, #15
  4053b2:	4659      	mov	r1, fp
  4053b4:	4628      	mov	r0, r5
  4053b6:	f000 fdbb 	bl	405f30 <_sbrk_r>
  4053ba:	1c41      	adds	r1, r0, #1
  4053bc:	4602      	mov	r2, r0
  4053be:	f000 80fc 	beq.w	4055ba <_malloc_r+0x42e>
  4053c2:	4582      	cmp	sl, r0
  4053c4:	f200 80f7 	bhi.w	4055b6 <_malloc_r+0x42a>
  4053c8:	4b43      	ldr	r3, [pc, #268]	; (4054d8 <_malloc_r+0x34c>)
  4053ca:	6819      	ldr	r1, [r3, #0]
  4053cc:	4459      	add	r1, fp
  4053ce:	6019      	str	r1, [r3, #0]
  4053d0:	f000 814d 	beq.w	40566e <_malloc_r+0x4e2>
  4053d4:	f8d9 0000 	ldr.w	r0, [r9]
  4053d8:	3001      	adds	r0, #1
  4053da:	bf1b      	ittet	ne
  4053dc:	eba2 0a0a 	subne.w	sl, r2, sl
  4053e0:	4451      	addne	r1, sl
  4053e2:	f8c9 2000 	streq.w	r2, [r9]
  4053e6:	6019      	strne	r1, [r3, #0]
  4053e8:	f012 0107 	ands.w	r1, r2, #7
  4053ec:	f000 8115 	beq.w	40561a <_malloc_r+0x48e>
  4053f0:	f1c1 0008 	rsb	r0, r1, #8
  4053f4:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4053f8:	4402      	add	r2, r0
  4053fa:	3108      	adds	r1, #8
  4053fc:	eb02 090b 	add.w	r9, r2, fp
  405400:	f3c9 090b 	ubfx	r9, r9, #0, #12
  405404:	eba1 0909 	sub.w	r9, r1, r9
  405408:	4649      	mov	r1, r9
  40540a:	4628      	mov	r0, r5
  40540c:	9301      	str	r3, [sp, #4]
  40540e:	9200      	str	r2, [sp, #0]
  405410:	f000 fd8e 	bl	405f30 <_sbrk_r>
  405414:	1c43      	adds	r3, r0, #1
  405416:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40541a:	f000 8143 	beq.w	4056a4 <_malloc_r+0x518>
  40541e:	1a80      	subs	r0, r0, r2
  405420:	4448      	add	r0, r9
  405422:	f040 0001 	orr.w	r0, r0, #1
  405426:	6819      	ldr	r1, [r3, #0]
  405428:	60ba      	str	r2, [r7, #8]
  40542a:	4449      	add	r1, r9
  40542c:	42bc      	cmp	r4, r7
  40542e:	6050      	str	r0, [r2, #4]
  405430:	6019      	str	r1, [r3, #0]
  405432:	d017      	beq.n	405464 <_malloc_r+0x2d8>
  405434:	f1b8 0f0f 	cmp.w	r8, #15
  405438:	f240 80fb 	bls.w	405632 <_malloc_r+0x4a6>
  40543c:	6860      	ldr	r0, [r4, #4]
  40543e:	f1a8 020c 	sub.w	r2, r8, #12
  405442:	f022 0207 	bic.w	r2, r2, #7
  405446:	eb04 0e02 	add.w	lr, r4, r2
  40544a:	f000 0001 	and.w	r0, r0, #1
  40544e:	f04f 0c05 	mov.w	ip, #5
  405452:	4310      	orrs	r0, r2
  405454:	2a0f      	cmp	r2, #15
  405456:	6060      	str	r0, [r4, #4]
  405458:	f8ce c004 	str.w	ip, [lr, #4]
  40545c:	f8ce c008 	str.w	ip, [lr, #8]
  405460:	f200 8117 	bhi.w	405692 <_malloc_r+0x506>
  405464:	4b1d      	ldr	r3, [pc, #116]	; (4054dc <_malloc_r+0x350>)
  405466:	68bc      	ldr	r4, [r7, #8]
  405468:	681a      	ldr	r2, [r3, #0]
  40546a:	4291      	cmp	r1, r2
  40546c:	bf88      	it	hi
  40546e:	6019      	strhi	r1, [r3, #0]
  405470:	4b1b      	ldr	r3, [pc, #108]	; (4054e0 <_malloc_r+0x354>)
  405472:	681a      	ldr	r2, [r3, #0]
  405474:	4291      	cmp	r1, r2
  405476:	6862      	ldr	r2, [r4, #4]
  405478:	bf88      	it	hi
  40547a:	6019      	strhi	r1, [r3, #0]
  40547c:	f022 0203 	bic.w	r2, r2, #3
  405480:	4296      	cmp	r6, r2
  405482:	eba2 0306 	sub.w	r3, r2, r6
  405486:	d801      	bhi.n	40548c <_malloc_r+0x300>
  405488:	2b0f      	cmp	r3, #15
  40548a:	dc04      	bgt.n	405496 <_malloc_r+0x30a>
  40548c:	4628      	mov	r0, r5
  40548e:	f000 fa4f 	bl	405930 <__malloc_unlock>
  405492:	2400      	movs	r4, #0
  405494:	e740      	b.n	405318 <_malloc_r+0x18c>
  405496:	19a2      	adds	r2, r4, r6
  405498:	f043 0301 	orr.w	r3, r3, #1
  40549c:	f046 0601 	orr.w	r6, r6, #1
  4054a0:	6066      	str	r6, [r4, #4]
  4054a2:	4628      	mov	r0, r5
  4054a4:	60ba      	str	r2, [r7, #8]
  4054a6:	6053      	str	r3, [r2, #4]
  4054a8:	f000 fa42 	bl	405930 <__malloc_unlock>
  4054ac:	3408      	adds	r4, #8
  4054ae:	4620      	mov	r0, r4
  4054b0:	b003      	add	sp, #12
  4054b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4054b6:	2b14      	cmp	r3, #20
  4054b8:	d971      	bls.n	40559e <_malloc_r+0x412>
  4054ba:	2b54      	cmp	r3, #84	; 0x54
  4054bc:	f200 80a3 	bhi.w	405606 <_malloc_r+0x47a>
  4054c0:	0b33      	lsrs	r3, r6, #12
  4054c2:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4054c6:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4054ca:	00c3      	lsls	r3, r0, #3
  4054cc:	e680      	b.n	4051d0 <_malloc_r+0x44>
  4054ce:	bf00      	nop
  4054d0:	200065ec 	.word	0x200065ec
  4054d4:	20006c4c 	.word	0x20006c4c
  4054d8:	20006c1c 	.word	0x20006c1c
  4054dc:	20006c44 	.word	0x20006c44
  4054e0:	20006c48 	.word	0x20006c48
  4054e4:	200065f4 	.word	0x200065f4
  4054e8:	200069f4 	.word	0x200069f4
  4054ec:	0a5a      	lsrs	r2, r3, #9
  4054ee:	2a04      	cmp	r2, #4
  4054f0:	d95b      	bls.n	4055aa <_malloc_r+0x41e>
  4054f2:	2a14      	cmp	r2, #20
  4054f4:	f200 80ae 	bhi.w	405654 <_malloc_r+0x4c8>
  4054f8:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4054fc:	00c9      	lsls	r1, r1, #3
  4054fe:	325b      	adds	r2, #91	; 0x5b
  405500:	eb07 0c01 	add.w	ip, r7, r1
  405504:	5879      	ldr	r1, [r7, r1]
  405506:	f1ac 0c08 	sub.w	ip, ip, #8
  40550a:	458c      	cmp	ip, r1
  40550c:	f000 8088 	beq.w	405620 <_malloc_r+0x494>
  405510:	684a      	ldr	r2, [r1, #4]
  405512:	f022 0203 	bic.w	r2, r2, #3
  405516:	4293      	cmp	r3, r2
  405518:	d273      	bcs.n	405602 <_malloc_r+0x476>
  40551a:	6889      	ldr	r1, [r1, #8]
  40551c:	458c      	cmp	ip, r1
  40551e:	d1f7      	bne.n	405510 <_malloc_r+0x384>
  405520:	f8dc 200c 	ldr.w	r2, [ip, #12]
  405524:	687b      	ldr	r3, [r7, #4]
  405526:	60e2      	str	r2, [r4, #12]
  405528:	f8c4 c008 	str.w	ip, [r4, #8]
  40552c:	6094      	str	r4, [r2, #8]
  40552e:	f8cc 400c 	str.w	r4, [ip, #12]
  405532:	e68f      	b.n	405254 <_malloc_r+0xc8>
  405534:	19a1      	adds	r1, r4, r6
  405536:	f046 0c01 	orr.w	ip, r6, #1
  40553a:	f042 0601 	orr.w	r6, r2, #1
  40553e:	f8c4 c004 	str.w	ip, [r4, #4]
  405542:	4628      	mov	r0, r5
  405544:	6179      	str	r1, [r7, #20]
  405546:	6139      	str	r1, [r7, #16]
  405548:	f8c1 e00c 	str.w	lr, [r1, #12]
  40554c:	f8c1 e008 	str.w	lr, [r1, #8]
  405550:	604e      	str	r6, [r1, #4]
  405552:	50e2      	str	r2, [r4, r3]
  405554:	f000 f9ec 	bl	405930 <__malloc_unlock>
  405558:	3408      	adds	r4, #8
  40555a:	e6dd      	b.n	405318 <_malloc_r+0x18c>
  40555c:	687b      	ldr	r3, [r7, #4]
  40555e:	e679      	b.n	405254 <_malloc_r+0xc8>
  405560:	f108 0801 	add.w	r8, r8, #1
  405564:	f018 0f03 	tst.w	r8, #3
  405568:	f10c 0c08 	add.w	ip, ip, #8
  40556c:	f47f ae85 	bne.w	40527a <_malloc_r+0xee>
  405570:	e02d      	b.n	4055ce <_malloc_r+0x442>
  405572:	68dc      	ldr	r4, [r3, #12]
  405574:	42a3      	cmp	r3, r4
  405576:	bf08      	it	eq
  405578:	3002      	addeq	r0, #2
  40557a:	f43f ae3e 	beq.w	4051fa <_malloc_r+0x6e>
  40557e:	e6bb      	b.n	4052f8 <_malloc_r+0x16c>
  405580:	4419      	add	r1, r3
  405582:	461c      	mov	r4, r3
  405584:	684a      	ldr	r2, [r1, #4]
  405586:	68db      	ldr	r3, [r3, #12]
  405588:	f854 6f08 	ldr.w	r6, [r4, #8]!
  40558c:	f042 0201 	orr.w	r2, r2, #1
  405590:	604a      	str	r2, [r1, #4]
  405592:	4628      	mov	r0, r5
  405594:	60f3      	str	r3, [r6, #12]
  405596:	609e      	str	r6, [r3, #8]
  405598:	f000 f9ca 	bl	405930 <__malloc_unlock>
  40559c:	e6bc      	b.n	405318 <_malloc_r+0x18c>
  40559e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4055a2:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4055a6:	00c3      	lsls	r3, r0, #3
  4055a8:	e612      	b.n	4051d0 <_malloc_r+0x44>
  4055aa:	099a      	lsrs	r2, r3, #6
  4055ac:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4055b0:	00c9      	lsls	r1, r1, #3
  4055b2:	3238      	adds	r2, #56	; 0x38
  4055b4:	e7a4      	b.n	405500 <_malloc_r+0x374>
  4055b6:	42bc      	cmp	r4, r7
  4055b8:	d054      	beq.n	405664 <_malloc_r+0x4d8>
  4055ba:	68bc      	ldr	r4, [r7, #8]
  4055bc:	6862      	ldr	r2, [r4, #4]
  4055be:	f022 0203 	bic.w	r2, r2, #3
  4055c2:	e75d      	b.n	405480 <_malloc_r+0x2f4>
  4055c4:	f859 3908 	ldr.w	r3, [r9], #-8
  4055c8:	4599      	cmp	r9, r3
  4055ca:	f040 8086 	bne.w	4056da <_malloc_r+0x54e>
  4055ce:	f010 0f03 	tst.w	r0, #3
  4055d2:	f100 30ff 	add.w	r0, r0, #4294967295
  4055d6:	d1f5      	bne.n	4055c4 <_malloc_r+0x438>
  4055d8:	687b      	ldr	r3, [r7, #4]
  4055da:	ea23 0304 	bic.w	r3, r3, r4
  4055de:	607b      	str	r3, [r7, #4]
  4055e0:	0064      	lsls	r4, r4, #1
  4055e2:	429c      	cmp	r4, r3
  4055e4:	f63f aec7 	bhi.w	405376 <_malloc_r+0x1ea>
  4055e8:	2c00      	cmp	r4, #0
  4055ea:	f43f aec4 	beq.w	405376 <_malloc_r+0x1ea>
  4055ee:	421c      	tst	r4, r3
  4055f0:	4640      	mov	r0, r8
  4055f2:	f47f ae3e 	bne.w	405272 <_malloc_r+0xe6>
  4055f6:	0064      	lsls	r4, r4, #1
  4055f8:	421c      	tst	r4, r3
  4055fa:	f100 0004 	add.w	r0, r0, #4
  4055fe:	d0fa      	beq.n	4055f6 <_malloc_r+0x46a>
  405600:	e637      	b.n	405272 <_malloc_r+0xe6>
  405602:	468c      	mov	ip, r1
  405604:	e78c      	b.n	405520 <_malloc_r+0x394>
  405606:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40560a:	d815      	bhi.n	405638 <_malloc_r+0x4ac>
  40560c:	0bf3      	lsrs	r3, r6, #15
  40560e:	f103 0078 	add.w	r0, r3, #120	; 0x78
  405612:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  405616:	00c3      	lsls	r3, r0, #3
  405618:	e5da      	b.n	4051d0 <_malloc_r+0x44>
  40561a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40561e:	e6ed      	b.n	4053fc <_malloc_r+0x270>
  405620:	687b      	ldr	r3, [r7, #4]
  405622:	1092      	asrs	r2, r2, #2
  405624:	2101      	movs	r1, #1
  405626:	fa01 f202 	lsl.w	r2, r1, r2
  40562a:	4313      	orrs	r3, r2
  40562c:	607b      	str	r3, [r7, #4]
  40562e:	4662      	mov	r2, ip
  405630:	e779      	b.n	405526 <_malloc_r+0x39a>
  405632:	2301      	movs	r3, #1
  405634:	6053      	str	r3, [r2, #4]
  405636:	e729      	b.n	40548c <_malloc_r+0x300>
  405638:	f240 5254 	movw	r2, #1364	; 0x554
  40563c:	4293      	cmp	r3, r2
  40563e:	d822      	bhi.n	405686 <_malloc_r+0x4fa>
  405640:	0cb3      	lsrs	r3, r6, #18
  405642:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  405646:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40564a:	00c3      	lsls	r3, r0, #3
  40564c:	e5c0      	b.n	4051d0 <_malloc_r+0x44>
  40564e:	f103 0b10 	add.w	fp, r3, #16
  405652:	e6ae      	b.n	4053b2 <_malloc_r+0x226>
  405654:	2a54      	cmp	r2, #84	; 0x54
  405656:	d829      	bhi.n	4056ac <_malloc_r+0x520>
  405658:	0b1a      	lsrs	r2, r3, #12
  40565a:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40565e:	00c9      	lsls	r1, r1, #3
  405660:	326e      	adds	r2, #110	; 0x6e
  405662:	e74d      	b.n	405500 <_malloc_r+0x374>
  405664:	4b20      	ldr	r3, [pc, #128]	; (4056e8 <_malloc_r+0x55c>)
  405666:	6819      	ldr	r1, [r3, #0]
  405668:	4459      	add	r1, fp
  40566a:	6019      	str	r1, [r3, #0]
  40566c:	e6b2      	b.n	4053d4 <_malloc_r+0x248>
  40566e:	f3ca 000b 	ubfx	r0, sl, #0, #12
  405672:	2800      	cmp	r0, #0
  405674:	f47f aeae 	bne.w	4053d4 <_malloc_r+0x248>
  405678:	eb08 030b 	add.w	r3, r8, fp
  40567c:	68ba      	ldr	r2, [r7, #8]
  40567e:	f043 0301 	orr.w	r3, r3, #1
  405682:	6053      	str	r3, [r2, #4]
  405684:	e6ee      	b.n	405464 <_malloc_r+0x2d8>
  405686:	207f      	movs	r0, #127	; 0x7f
  405688:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  40568c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  405690:	e59e      	b.n	4051d0 <_malloc_r+0x44>
  405692:	f104 0108 	add.w	r1, r4, #8
  405696:	4628      	mov	r0, r5
  405698:	9300      	str	r3, [sp, #0]
  40569a:	f000 fe9f 	bl	4063dc <_free_r>
  40569e:	9b00      	ldr	r3, [sp, #0]
  4056a0:	6819      	ldr	r1, [r3, #0]
  4056a2:	e6df      	b.n	405464 <_malloc_r+0x2d8>
  4056a4:	2001      	movs	r0, #1
  4056a6:	f04f 0900 	mov.w	r9, #0
  4056aa:	e6bc      	b.n	405426 <_malloc_r+0x29a>
  4056ac:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4056b0:	d805      	bhi.n	4056be <_malloc_r+0x532>
  4056b2:	0bda      	lsrs	r2, r3, #15
  4056b4:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4056b8:	00c9      	lsls	r1, r1, #3
  4056ba:	3277      	adds	r2, #119	; 0x77
  4056bc:	e720      	b.n	405500 <_malloc_r+0x374>
  4056be:	f240 5154 	movw	r1, #1364	; 0x554
  4056c2:	428a      	cmp	r2, r1
  4056c4:	d805      	bhi.n	4056d2 <_malloc_r+0x546>
  4056c6:	0c9a      	lsrs	r2, r3, #18
  4056c8:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4056cc:	00c9      	lsls	r1, r1, #3
  4056ce:	327c      	adds	r2, #124	; 0x7c
  4056d0:	e716      	b.n	405500 <_malloc_r+0x374>
  4056d2:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4056d6:	227e      	movs	r2, #126	; 0x7e
  4056d8:	e712      	b.n	405500 <_malloc_r+0x374>
  4056da:	687b      	ldr	r3, [r7, #4]
  4056dc:	e780      	b.n	4055e0 <_malloc_r+0x454>
  4056de:	08f0      	lsrs	r0, r6, #3
  4056e0:	f106 0308 	add.w	r3, r6, #8
  4056e4:	e600      	b.n	4052e8 <_malloc_r+0x15c>
  4056e6:	bf00      	nop
  4056e8:	20006c1c 	.word	0x20006c1c
  4056ec:	00000000 	.word	0x00000000

004056f0 <memchr>:
  4056f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4056f4:	2a10      	cmp	r2, #16
  4056f6:	db2b      	blt.n	405750 <memchr+0x60>
  4056f8:	f010 0f07 	tst.w	r0, #7
  4056fc:	d008      	beq.n	405710 <memchr+0x20>
  4056fe:	f810 3b01 	ldrb.w	r3, [r0], #1
  405702:	3a01      	subs	r2, #1
  405704:	428b      	cmp	r3, r1
  405706:	d02d      	beq.n	405764 <memchr+0x74>
  405708:	f010 0f07 	tst.w	r0, #7
  40570c:	b342      	cbz	r2, 405760 <memchr+0x70>
  40570e:	d1f6      	bne.n	4056fe <memchr+0xe>
  405710:	b4f0      	push	{r4, r5, r6, r7}
  405712:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  405716:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40571a:	f022 0407 	bic.w	r4, r2, #7
  40571e:	f07f 0700 	mvns.w	r7, #0
  405722:	2300      	movs	r3, #0
  405724:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  405728:	3c08      	subs	r4, #8
  40572a:	ea85 0501 	eor.w	r5, r5, r1
  40572e:	ea86 0601 	eor.w	r6, r6, r1
  405732:	fa85 f547 	uadd8	r5, r5, r7
  405736:	faa3 f587 	sel	r5, r3, r7
  40573a:	fa86 f647 	uadd8	r6, r6, r7
  40573e:	faa5 f687 	sel	r6, r5, r7
  405742:	b98e      	cbnz	r6, 405768 <memchr+0x78>
  405744:	d1ee      	bne.n	405724 <memchr+0x34>
  405746:	bcf0      	pop	{r4, r5, r6, r7}
  405748:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40574c:	f002 0207 	and.w	r2, r2, #7
  405750:	b132      	cbz	r2, 405760 <memchr+0x70>
  405752:	f810 3b01 	ldrb.w	r3, [r0], #1
  405756:	3a01      	subs	r2, #1
  405758:	ea83 0301 	eor.w	r3, r3, r1
  40575c:	b113      	cbz	r3, 405764 <memchr+0x74>
  40575e:	d1f8      	bne.n	405752 <memchr+0x62>
  405760:	2000      	movs	r0, #0
  405762:	4770      	bx	lr
  405764:	3801      	subs	r0, #1
  405766:	4770      	bx	lr
  405768:	2d00      	cmp	r5, #0
  40576a:	bf06      	itte	eq
  40576c:	4635      	moveq	r5, r6
  40576e:	3803      	subeq	r0, #3
  405770:	3807      	subne	r0, #7
  405772:	f015 0f01 	tst.w	r5, #1
  405776:	d107      	bne.n	405788 <memchr+0x98>
  405778:	3001      	adds	r0, #1
  40577a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40577e:	bf02      	ittt	eq
  405780:	3001      	addeq	r0, #1
  405782:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  405786:	3001      	addeq	r0, #1
  405788:	bcf0      	pop	{r4, r5, r6, r7}
  40578a:	3801      	subs	r0, #1
  40578c:	4770      	bx	lr
  40578e:	bf00      	nop

00405790 <memcmp>:
  405790:	2a03      	cmp	r2, #3
  405792:	b470      	push	{r4, r5, r6}
  405794:	d922      	bls.n	4057dc <memcmp+0x4c>
  405796:	ea40 0301 	orr.w	r3, r0, r1
  40579a:	079b      	lsls	r3, r3, #30
  40579c:	d011      	beq.n	4057c2 <memcmp+0x32>
  40579e:	7803      	ldrb	r3, [r0, #0]
  4057a0:	780c      	ldrb	r4, [r1, #0]
  4057a2:	42a3      	cmp	r3, r4
  4057a4:	d11d      	bne.n	4057e2 <memcmp+0x52>
  4057a6:	440a      	add	r2, r1
  4057a8:	3101      	adds	r1, #1
  4057aa:	e005      	b.n	4057b8 <memcmp+0x28>
  4057ac:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  4057b0:	f811 4b01 	ldrb.w	r4, [r1], #1
  4057b4:	42a3      	cmp	r3, r4
  4057b6:	d114      	bne.n	4057e2 <memcmp+0x52>
  4057b8:	4291      	cmp	r1, r2
  4057ba:	d1f7      	bne.n	4057ac <memcmp+0x1c>
  4057bc:	2000      	movs	r0, #0
  4057be:	bc70      	pop	{r4, r5, r6}
  4057c0:	4770      	bx	lr
  4057c2:	680d      	ldr	r5, [r1, #0]
  4057c4:	6806      	ldr	r6, [r0, #0]
  4057c6:	42ae      	cmp	r6, r5
  4057c8:	460c      	mov	r4, r1
  4057ca:	4603      	mov	r3, r0
  4057cc:	f101 0104 	add.w	r1, r1, #4
  4057d0:	f100 0004 	add.w	r0, r0, #4
  4057d4:	d108      	bne.n	4057e8 <memcmp+0x58>
  4057d6:	3a04      	subs	r2, #4
  4057d8:	2a03      	cmp	r2, #3
  4057da:	d8f2      	bhi.n	4057c2 <memcmp+0x32>
  4057dc:	2a00      	cmp	r2, #0
  4057de:	d1de      	bne.n	40579e <memcmp+0xe>
  4057e0:	e7ec      	b.n	4057bc <memcmp+0x2c>
  4057e2:	1b18      	subs	r0, r3, r4
  4057e4:	bc70      	pop	{r4, r5, r6}
  4057e6:	4770      	bx	lr
  4057e8:	4621      	mov	r1, r4
  4057ea:	4618      	mov	r0, r3
  4057ec:	e7d7      	b.n	40579e <memcmp+0xe>
  4057ee:	bf00      	nop

004057f0 <memcpy>:
  4057f0:	4684      	mov	ip, r0
  4057f2:	ea41 0300 	orr.w	r3, r1, r0
  4057f6:	f013 0303 	ands.w	r3, r3, #3
  4057fa:	d16d      	bne.n	4058d8 <memcpy+0xe8>
  4057fc:	3a40      	subs	r2, #64	; 0x40
  4057fe:	d341      	bcc.n	405884 <memcpy+0x94>
  405800:	f851 3b04 	ldr.w	r3, [r1], #4
  405804:	f840 3b04 	str.w	r3, [r0], #4
  405808:	f851 3b04 	ldr.w	r3, [r1], #4
  40580c:	f840 3b04 	str.w	r3, [r0], #4
  405810:	f851 3b04 	ldr.w	r3, [r1], #4
  405814:	f840 3b04 	str.w	r3, [r0], #4
  405818:	f851 3b04 	ldr.w	r3, [r1], #4
  40581c:	f840 3b04 	str.w	r3, [r0], #4
  405820:	f851 3b04 	ldr.w	r3, [r1], #4
  405824:	f840 3b04 	str.w	r3, [r0], #4
  405828:	f851 3b04 	ldr.w	r3, [r1], #4
  40582c:	f840 3b04 	str.w	r3, [r0], #4
  405830:	f851 3b04 	ldr.w	r3, [r1], #4
  405834:	f840 3b04 	str.w	r3, [r0], #4
  405838:	f851 3b04 	ldr.w	r3, [r1], #4
  40583c:	f840 3b04 	str.w	r3, [r0], #4
  405840:	f851 3b04 	ldr.w	r3, [r1], #4
  405844:	f840 3b04 	str.w	r3, [r0], #4
  405848:	f851 3b04 	ldr.w	r3, [r1], #4
  40584c:	f840 3b04 	str.w	r3, [r0], #4
  405850:	f851 3b04 	ldr.w	r3, [r1], #4
  405854:	f840 3b04 	str.w	r3, [r0], #4
  405858:	f851 3b04 	ldr.w	r3, [r1], #4
  40585c:	f840 3b04 	str.w	r3, [r0], #4
  405860:	f851 3b04 	ldr.w	r3, [r1], #4
  405864:	f840 3b04 	str.w	r3, [r0], #4
  405868:	f851 3b04 	ldr.w	r3, [r1], #4
  40586c:	f840 3b04 	str.w	r3, [r0], #4
  405870:	f851 3b04 	ldr.w	r3, [r1], #4
  405874:	f840 3b04 	str.w	r3, [r0], #4
  405878:	f851 3b04 	ldr.w	r3, [r1], #4
  40587c:	f840 3b04 	str.w	r3, [r0], #4
  405880:	3a40      	subs	r2, #64	; 0x40
  405882:	d2bd      	bcs.n	405800 <memcpy+0x10>
  405884:	3230      	adds	r2, #48	; 0x30
  405886:	d311      	bcc.n	4058ac <memcpy+0xbc>
  405888:	f851 3b04 	ldr.w	r3, [r1], #4
  40588c:	f840 3b04 	str.w	r3, [r0], #4
  405890:	f851 3b04 	ldr.w	r3, [r1], #4
  405894:	f840 3b04 	str.w	r3, [r0], #4
  405898:	f851 3b04 	ldr.w	r3, [r1], #4
  40589c:	f840 3b04 	str.w	r3, [r0], #4
  4058a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4058a4:	f840 3b04 	str.w	r3, [r0], #4
  4058a8:	3a10      	subs	r2, #16
  4058aa:	d2ed      	bcs.n	405888 <memcpy+0x98>
  4058ac:	320c      	adds	r2, #12
  4058ae:	d305      	bcc.n	4058bc <memcpy+0xcc>
  4058b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4058b4:	f840 3b04 	str.w	r3, [r0], #4
  4058b8:	3a04      	subs	r2, #4
  4058ba:	d2f9      	bcs.n	4058b0 <memcpy+0xc0>
  4058bc:	3204      	adds	r2, #4
  4058be:	d008      	beq.n	4058d2 <memcpy+0xe2>
  4058c0:	07d2      	lsls	r2, r2, #31
  4058c2:	bf1c      	itt	ne
  4058c4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4058c8:	f800 3b01 	strbne.w	r3, [r0], #1
  4058cc:	d301      	bcc.n	4058d2 <memcpy+0xe2>
  4058ce:	880b      	ldrh	r3, [r1, #0]
  4058d0:	8003      	strh	r3, [r0, #0]
  4058d2:	4660      	mov	r0, ip
  4058d4:	4770      	bx	lr
  4058d6:	bf00      	nop
  4058d8:	2a08      	cmp	r2, #8
  4058da:	d313      	bcc.n	405904 <memcpy+0x114>
  4058dc:	078b      	lsls	r3, r1, #30
  4058de:	d08d      	beq.n	4057fc <memcpy+0xc>
  4058e0:	f010 0303 	ands.w	r3, r0, #3
  4058e4:	d08a      	beq.n	4057fc <memcpy+0xc>
  4058e6:	f1c3 0304 	rsb	r3, r3, #4
  4058ea:	1ad2      	subs	r2, r2, r3
  4058ec:	07db      	lsls	r3, r3, #31
  4058ee:	bf1c      	itt	ne
  4058f0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4058f4:	f800 3b01 	strbne.w	r3, [r0], #1
  4058f8:	d380      	bcc.n	4057fc <memcpy+0xc>
  4058fa:	f831 3b02 	ldrh.w	r3, [r1], #2
  4058fe:	f820 3b02 	strh.w	r3, [r0], #2
  405902:	e77b      	b.n	4057fc <memcpy+0xc>
  405904:	3a04      	subs	r2, #4
  405906:	d3d9      	bcc.n	4058bc <memcpy+0xcc>
  405908:	3a01      	subs	r2, #1
  40590a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40590e:	f800 3b01 	strb.w	r3, [r0], #1
  405912:	d2f9      	bcs.n	405908 <memcpy+0x118>
  405914:	780b      	ldrb	r3, [r1, #0]
  405916:	7003      	strb	r3, [r0, #0]
  405918:	784b      	ldrb	r3, [r1, #1]
  40591a:	7043      	strb	r3, [r0, #1]
  40591c:	788b      	ldrb	r3, [r1, #2]
  40591e:	7083      	strb	r3, [r0, #2]
  405920:	4660      	mov	r0, ip
  405922:	4770      	bx	lr

00405924 <__malloc_lock>:
  405924:	4801      	ldr	r0, [pc, #4]	; (40592c <__malloc_lock+0x8>)
  405926:	f7ff bc2d 	b.w	405184 <__retarget_lock_acquire_recursive>
  40592a:	bf00      	nop
  40592c:	20007088 	.word	0x20007088

00405930 <__malloc_unlock>:
  405930:	4801      	ldr	r0, [pc, #4]	; (405938 <__malloc_unlock+0x8>)
  405932:	f7ff bc29 	b.w	405188 <__retarget_lock_release_recursive>
  405936:	bf00      	nop
  405938:	20007088 	.word	0x20007088

0040593c <_Balloc>:
  40593c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40593e:	b570      	push	{r4, r5, r6, lr}
  405940:	4605      	mov	r5, r0
  405942:	460c      	mov	r4, r1
  405944:	b14b      	cbz	r3, 40595a <_Balloc+0x1e>
  405946:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40594a:	b180      	cbz	r0, 40596e <_Balloc+0x32>
  40594c:	6802      	ldr	r2, [r0, #0]
  40594e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  405952:	2300      	movs	r3, #0
  405954:	6103      	str	r3, [r0, #16]
  405956:	60c3      	str	r3, [r0, #12]
  405958:	bd70      	pop	{r4, r5, r6, pc}
  40595a:	2221      	movs	r2, #33	; 0x21
  40595c:	2104      	movs	r1, #4
  40595e:	f000 fcbd 	bl	4062dc <_calloc_r>
  405962:	64e8      	str	r0, [r5, #76]	; 0x4c
  405964:	4603      	mov	r3, r0
  405966:	2800      	cmp	r0, #0
  405968:	d1ed      	bne.n	405946 <_Balloc+0xa>
  40596a:	2000      	movs	r0, #0
  40596c:	bd70      	pop	{r4, r5, r6, pc}
  40596e:	2101      	movs	r1, #1
  405970:	fa01 f604 	lsl.w	r6, r1, r4
  405974:	1d72      	adds	r2, r6, #5
  405976:	4628      	mov	r0, r5
  405978:	0092      	lsls	r2, r2, #2
  40597a:	f000 fcaf 	bl	4062dc <_calloc_r>
  40597e:	2800      	cmp	r0, #0
  405980:	d0f3      	beq.n	40596a <_Balloc+0x2e>
  405982:	6044      	str	r4, [r0, #4]
  405984:	6086      	str	r6, [r0, #8]
  405986:	e7e4      	b.n	405952 <_Balloc+0x16>

00405988 <_Bfree>:
  405988:	b131      	cbz	r1, 405998 <_Bfree+0x10>
  40598a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40598c:	684a      	ldr	r2, [r1, #4]
  40598e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  405992:	6008      	str	r0, [r1, #0]
  405994:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  405998:	4770      	bx	lr
  40599a:	bf00      	nop

0040599c <__multadd>:
  40599c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40599e:	690c      	ldr	r4, [r1, #16]
  4059a0:	b083      	sub	sp, #12
  4059a2:	460d      	mov	r5, r1
  4059a4:	4606      	mov	r6, r0
  4059a6:	f101 0e14 	add.w	lr, r1, #20
  4059aa:	2700      	movs	r7, #0
  4059ac:	f8de 0000 	ldr.w	r0, [lr]
  4059b0:	b281      	uxth	r1, r0
  4059b2:	fb02 3301 	mla	r3, r2, r1, r3
  4059b6:	0c01      	lsrs	r1, r0, #16
  4059b8:	0c18      	lsrs	r0, r3, #16
  4059ba:	fb02 0101 	mla	r1, r2, r1, r0
  4059be:	b29b      	uxth	r3, r3
  4059c0:	3701      	adds	r7, #1
  4059c2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  4059c6:	42bc      	cmp	r4, r7
  4059c8:	f84e 3b04 	str.w	r3, [lr], #4
  4059cc:	ea4f 4311 	mov.w	r3, r1, lsr #16
  4059d0:	dcec      	bgt.n	4059ac <__multadd+0x10>
  4059d2:	b13b      	cbz	r3, 4059e4 <__multadd+0x48>
  4059d4:	68aa      	ldr	r2, [r5, #8]
  4059d6:	4294      	cmp	r4, r2
  4059d8:	da07      	bge.n	4059ea <__multadd+0x4e>
  4059da:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  4059de:	3401      	adds	r4, #1
  4059e0:	6153      	str	r3, [r2, #20]
  4059e2:	612c      	str	r4, [r5, #16]
  4059e4:	4628      	mov	r0, r5
  4059e6:	b003      	add	sp, #12
  4059e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4059ea:	6869      	ldr	r1, [r5, #4]
  4059ec:	9301      	str	r3, [sp, #4]
  4059ee:	3101      	adds	r1, #1
  4059f0:	4630      	mov	r0, r6
  4059f2:	f7ff ffa3 	bl	40593c <_Balloc>
  4059f6:	692a      	ldr	r2, [r5, #16]
  4059f8:	3202      	adds	r2, #2
  4059fa:	f105 010c 	add.w	r1, r5, #12
  4059fe:	4607      	mov	r7, r0
  405a00:	0092      	lsls	r2, r2, #2
  405a02:	300c      	adds	r0, #12
  405a04:	f7ff fef4 	bl	4057f0 <memcpy>
  405a08:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  405a0a:	6869      	ldr	r1, [r5, #4]
  405a0c:	9b01      	ldr	r3, [sp, #4]
  405a0e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  405a12:	6028      	str	r0, [r5, #0]
  405a14:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  405a18:	463d      	mov	r5, r7
  405a1a:	e7de      	b.n	4059da <__multadd+0x3e>

00405a1c <__hi0bits>:
  405a1c:	0c02      	lsrs	r2, r0, #16
  405a1e:	0412      	lsls	r2, r2, #16
  405a20:	4603      	mov	r3, r0
  405a22:	b9b2      	cbnz	r2, 405a52 <__hi0bits+0x36>
  405a24:	0403      	lsls	r3, r0, #16
  405a26:	2010      	movs	r0, #16
  405a28:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  405a2c:	bf04      	itt	eq
  405a2e:	021b      	lsleq	r3, r3, #8
  405a30:	3008      	addeq	r0, #8
  405a32:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  405a36:	bf04      	itt	eq
  405a38:	011b      	lsleq	r3, r3, #4
  405a3a:	3004      	addeq	r0, #4
  405a3c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  405a40:	bf04      	itt	eq
  405a42:	009b      	lsleq	r3, r3, #2
  405a44:	3002      	addeq	r0, #2
  405a46:	2b00      	cmp	r3, #0
  405a48:	db02      	blt.n	405a50 <__hi0bits+0x34>
  405a4a:	005b      	lsls	r3, r3, #1
  405a4c:	d403      	bmi.n	405a56 <__hi0bits+0x3a>
  405a4e:	2020      	movs	r0, #32
  405a50:	4770      	bx	lr
  405a52:	2000      	movs	r0, #0
  405a54:	e7e8      	b.n	405a28 <__hi0bits+0xc>
  405a56:	3001      	adds	r0, #1
  405a58:	4770      	bx	lr
  405a5a:	bf00      	nop

00405a5c <__lo0bits>:
  405a5c:	6803      	ldr	r3, [r0, #0]
  405a5e:	f013 0207 	ands.w	r2, r3, #7
  405a62:	4601      	mov	r1, r0
  405a64:	d007      	beq.n	405a76 <__lo0bits+0x1a>
  405a66:	07da      	lsls	r2, r3, #31
  405a68:	d421      	bmi.n	405aae <__lo0bits+0x52>
  405a6a:	0798      	lsls	r0, r3, #30
  405a6c:	d421      	bmi.n	405ab2 <__lo0bits+0x56>
  405a6e:	089b      	lsrs	r3, r3, #2
  405a70:	600b      	str	r3, [r1, #0]
  405a72:	2002      	movs	r0, #2
  405a74:	4770      	bx	lr
  405a76:	b298      	uxth	r0, r3
  405a78:	b198      	cbz	r0, 405aa2 <__lo0bits+0x46>
  405a7a:	4610      	mov	r0, r2
  405a7c:	f013 0fff 	tst.w	r3, #255	; 0xff
  405a80:	bf04      	itt	eq
  405a82:	0a1b      	lsreq	r3, r3, #8
  405a84:	3008      	addeq	r0, #8
  405a86:	071a      	lsls	r2, r3, #28
  405a88:	bf04      	itt	eq
  405a8a:	091b      	lsreq	r3, r3, #4
  405a8c:	3004      	addeq	r0, #4
  405a8e:	079a      	lsls	r2, r3, #30
  405a90:	bf04      	itt	eq
  405a92:	089b      	lsreq	r3, r3, #2
  405a94:	3002      	addeq	r0, #2
  405a96:	07da      	lsls	r2, r3, #31
  405a98:	d407      	bmi.n	405aaa <__lo0bits+0x4e>
  405a9a:	085b      	lsrs	r3, r3, #1
  405a9c:	d104      	bne.n	405aa8 <__lo0bits+0x4c>
  405a9e:	2020      	movs	r0, #32
  405aa0:	4770      	bx	lr
  405aa2:	0c1b      	lsrs	r3, r3, #16
  405aa4:	2010      	movs	r0, #16
  405aa6:	e7e9      	b.n	405a7c <__lo0bits+0x20>
  405aa8:	3001      	adds	r0, #1
  405aaa:	600b      	str	r3, [r1, #0]
  405aac:	4770      	bx	lr
  405aae:	2000      	movs	r0, #0
  405ab0:	4770      	bx	lr
  405ab2:	085b      	lsrs	r3, r3, #1
  405ab4:	600b      	str	r3, [r1, #0]
  405ab6:	2001      	movs	r0, #1
  405ab8:	4770      	bx	lr
  405aba:	bf00      	nop

00405abc <__i2b>:
  405abc:	b510      	push	{r4, lr}
  405abe:	460c      	mov	r4, r1
  405ac0:	2101      	movs	r1, #1
  405ac2:	f7ff ff3b 	bl	40593c <_Balloc>
  405ac6:	2201      	movs	r2, #1
  405ac8:	6144      	str	r4, [r0, #20]
  405aca:	6102      	str	r2, [r0, #16]
  405acc:	bd10      	pop	{r4, pc}
  405ace:	bf00      	nop

00405ad0 <__multiply>:
  405ad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405ad4:	690c      	ldr	r4, [r1, #16]
  405ad6:	6915      	ldr	r5, [r2, #16]
  405ad8:	42ac      	cmp	r4, r5
  405ada:	b083      	sub	sp, #12
  405adc:	468b      	mov	fp, r1
  405ade:	4616      	mov	r6, r2
  405ae0:	da04      	bge.n	405aec <__multiply+0x1c>
  405ae2:	4622      	mov	r2, r4
  405ae4:	46b3      	mov	fp, r6
  405ae6:	462c      	mov	r4, r5
  405ae8:	460e      	mov	r6, r1
  405aea:	4615      	mov	r5, r2
  405aec:	f8db 3008 	ldr.w	r3, [fp, #8]
  405af0:	f8db 1004 	ldr.w	r1, [fp, #4]
  405af4:	eb04 0805 	add.w	r8, r4, r5
  405af8:	4598      	cmp	r8, r3
  405afa:	bfc8      	it	gt
  405afc:	3101      	addgt	r1, #1
  405afe:	f7ff ff1d 	bl	40593c <_Balloc>
  405b02:	f100 0914 	add.w	r9, r0, #20
  405b06:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  405b0a:	45d1      	cmp	r9, sl
  405b0c:	9000      	str	r0, [sp, #0]
  405b0e:	d205      	bcs.n	405b1c <__multiply+0x4c>
  405b10:	464b      	mov	r3, r9
  405b12:	2100      	movs	r1, #0
  405b14:	f843 1b04 	str.w	r1, [r3], #4
  405b18:	459a      	cmp	sl, r3
  405b1a:	d8fb      	bhi.n	405b14 <__multiply+0x44>
  405b1c:	f106 0c14 	add.w	ip, r6, #20
  405b20:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  405b24:	f10b 0b14 	add.w	fp, fp, #20
  405b28:	459c      	cmp	ip, r3
  405b2a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  405b2e:	d24c      	bcs.n	405bca <__multiply+0xfa>
  405b30:	f8cd a004 	str.w	sl, [sp, #4]
  405b34:	469a      	mov	sl, r3
  405b36:	f8dc 5000 	ldr.w	r5, [ip]
  405b3a:	b2af      	uxth	r7, r5
  405b3c:	b1ef      	cbz	r7, 405b7a <__multiply+0xaa>
  405b3e:	2100      	movs	r1, #0
  405b40:	464d      	mov	r5, r9
  405b42:	465e      	mov	r6, fp
  405b44:	460c      	mov	r4, r1
  405b46:	f856 2b04 	ldr.w	r2, [r6], #4
  405b4a:	6828      	ldr	r0, [r5, #0]
  405b4c:	b293      	uxth	r3, r2
  405b4e:	b281      	uxth	r1, r0
  405b50:	fb07 1303 	mla	r3, r7, r3, r1
  405b54:	0c12      	lsrs	r2, r2, #16
  405b56:	0c01      	lsrs	r1, r0, #16
  405b58:	4423      	add	r3, r4
  405b5a:	fb07 1102 	mla	r1, r7, r2, r1
  405b5e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  405b62:	b29b      	uxth	r3, r3
  405b64:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  405b68:	45b6      	cmp	lr, r6
  405b6a:	f845 3b04 	str.w	r3, [r5], #4
  405b6e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  405b72:	d8e8      	bhi.n	405b46 <__multiply+0x76>
  405b74:	602c      	str	r4, [r5, #0]
  405b76:	f8dc 5000 	ldr.w	r5, [ip]
  405b7a:	0c2d      	lsrs	r5, r5, #16
  405b7c:	d01d      	beq.n	405bba <__multiply+0xea>
  405b7e:	f8d9 3000 	ldr.w	r3, [r9]
  405b82:	4648      	mov	r0, r9
  405b84:	461c      	mov	r4, r3
  405b86:	4659      	mov	r1, fp
  405b88:	2200      	movs	r2, #0
  405b8a:	880e      	ldrh	r6, [r1, #0]
  405b8c:	0c24      	lsrs	r4, r4, #16
  405b8e:	fb05 4406 	mla	r4, r5, r6, r4
  405b92:	4422      	add	r2, r4
  405b94:	b29b      	uxth	r3, r3
  405b96:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  405b9a:	f840 3b04 	str.w	r3, [r0], #4
  405b9e:	f851 3b04 	ldr.w	r3, [r1], #4
  405ba2:	6804      	ldr	r4, [r0, #0]
  405ba4:	0c1b      	lsrs	r3, r3, #16
  405ba6:	b2a6      	uxth	r6, r4
  405ba8:	fb05 6303 	mla	r3, r5, r3, r6
  405bac:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  405bb0:	458e      	cmp	lr, r1
  405bb2:	ea4f 4213 	mov.w	r2, r3, lsr #16
  405bb6:	d8e8      	bhi.n	405b8a <__multiply+0xba>
  405bb8:	6003      	str	r3, [r0, #0]
  405bba:	f10c 0c04 	add.w	ip, ip, #4
  405bbe:	45e2      	cmp	sl, ip
  405bc0:	f109 0904 	add.w	r9, r9, #4
  405bc4:	d8b7      	bhi.n	405b36 <__multiply+0x66>
  405bc6:	f8dd a004 	ldr.w	sl, [sp, #4]
  405bca:	f1b8 0f00 	cmp.w	r8, #0
  405bce:	dd0b      	ble.n	405be8 <__multiply+0x118>
  405bd0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  405bd4:	f1aa 0a04 	sub.w	sl, sl, #4
  405bd8:	b11b      	cbz	r3, 405be2 <__multiply+0x112>
  405bda:	e005      	b.n	405be8 <__multiply+0x118>
  405bdc:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  405be0:	b913      	cbnz	r3, 405be8 <__multiply+0x118>
  405be2:	f1b8 0801 	subs.w	r8, r8, #1
  405be6:	d1f9      	bne.n	405bdc <__multiply+0x10c>
  405be8:	9800      	ldr	r0, [sp, #0]
  405bea:	f8c0 8010 	str.w	r8, [r0, #16]
  405bee:	b003      	add	sp, #12
  405bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405bf4 <__pow5mult>:
  405bf4:	f012 0303 	ands.w	r3, r2, #3
  405bf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405bfc:	4614      	mov	r4, r2
  405bfe:	4607      	mov	r7, r0
  405c00:	d12e      	bne.n	405c60 <__pow5mult+0x6c>
  405c02:	460d      	mov	r5, r1
  405c04:	10a4      	asrs	r4, r4, #2
  405c06:	d01c      	beq.n	405c42 <__pow5mult+0x4e>
  405c08:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  405c0a:	b396      	cbz	r6, 405c72 <__pow5mult+0x7e>
  405c0c:	07e3      	lsls	r3, r4, #31
  405c0e:	f04f 0800 	mov.w	r8, #0
  405c12:	d406      	bmi.n	405c22 <__pow5mult+0x2e>
  405c14:	1064      	asrs	r4, r4, #1
  405c16:	d014      	beq.n	405c42 <__pow5mult+0x4e>
  405c18:	6830      	ldr	r0, [r6, #0]
  405c1a:	b1a8      	cbz	r0, 405c48 <__pow5mult+0x54>
  405c1c:	4606      	mov	r6, r0
  405c1e:	07e3      	lsls	r3, r4, #31
  405c20:	d5f8      	bpl.n	405c14 <__pow5mult+0x20>
  405c22:	4632      	mov	r2, r6
  405c24:	4629      	mov	r1, r5
  405c26:	4638      	mov	r0, r7
  405c28:	f7ff ff52 	bl	405ad0 <__multiply>
  405c2c:	b1b5      	cbz	r5, 405c5c <__pow5mult+0x68>
  405c2e:	686a      	ldr	r2, [r5, #4]
  405c30:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405c32:	1064      	asrs	r4, r4, #1
  405c34:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405c38:	6029      	str	r1, [r5, #0]
  405c3a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  405c3e:	4605      	mov	r5, r0
  405c40:	d1ea      	bne.n	405c18 <__pow5mult+0x24>
  405c42:	4628      	mov	r0, r5
  405c44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405c48:	4632      	mov	r2, r6
  405c4a:	4631      	mov	r1, r6
  405c4c:	4638      	mov	r0, r7
  405c4e:	f7ff ff3f 	bl	405ad0 <__multiply>
  405c52:	6030      	str	r0, [r6, #0]
  405c54:	f8c0 8000 	str.w	r8, [r0]
  405c58:	4606      	mov	r6, r0
  405c5a:	e7e0      	b.n	405c1e <__pow5mult+0x2a>
  405c5c:	4605      	mov	r5, r0
  405c5e:	e7d9      	b.n	405c14 <__pow5mult+0x20>
  405c60:	1e5a      	subs	r2, r3, #1
  405c62:	4d0b      	ldr	r5, [pc, #44]	; (405c90 <__pow5mult+0x9c>)
  405c64:	2300      	movs	r3, #0
  405c66:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  405c6a:	f7ff fe97 	bl	40599c <__multadd>
  405c6e:	4605      	mov	r5, r0
  405c70:	e7c8      	b.n	405c04 <__pow5mult+0x10>
  405c72:	2101      	movs	r1, #1
  405c74:	4638      	mov	r0, r7
  405c76:	f7ff fe61 	bl	40593c <_Balloc>
  405c7a:	f240 2171 	movw	r1, #625	; 0x271
  405c7e:	2201      	movs	r2, #1
  405c80:	2300      	movs	r3, #0
  405c82:	6141      	str	r1, [r0, #20]
  405c84:	6102      	str	r2, [r0, #16]
  405c86:	4606      	mov	r6, r0
  405c88:	64b8      	str	r0, [r7, #72]	; 0x48
  405c8a:	6003      	str	r3, [r0, #0]
  405c8c:	e7be      	b.n	405c0c <__pow5mult+0x18>
  405c8e:	bf00      	nop
  405c90:	00407638 	.word	0x00407638

00405c94 <__lshift>:
  405c94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405c98:	4691      	mov	r9, r2
  405c9a:	690a      	ldr	r2, [r1, #16]
  405c9c:	688b      	ldr	r3, [r1, #8]
  405c9e:	ea4f 1469 	mov.w	r4, r9, asr #5
  405ca2:	eb04 0802 	add.w	r8, r4, r2
  405ca6:	f108 0501 	add.w	r5, r8, #1
  405caa:	429d      	cmp	r5, r3
  405cac:	460e      	mov	r6, r1
  405cae:	4607      	mov	r7, r0
  405cb0:	6849      	ldr	r1, [r1, #4]
  405cb2:	dd04      	ble.n	405cbe <__lshift+0x2a>
  405cb4:	005b      	lsls	r3, r3, #1
  405cb6:	429d      	cmp	r5, r3
  405cb8:	f101 0101 	add.w	r1, r1, #1
  405cbc:	dcfa      	bgt.n	405cb4 <__lshift+0x20>
  405cbe:	4638      	mov	r0, r7
  405cc0:	f7ff fe3c 	bl	40593c <_Balloc>
  405cc4:	2c00      	cmp	r4, #0
  405cc6:	f100 0314 	add.w	r3, r0, #20
  405cca:	dd06      	ble.n	405cda <__lshift+0x46>
  405ccc:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  405cd0:	2100      	movs	r1, #0
  405cd2:	f843 1b04 	str.w	r1, [r3], #4
  405cd6:	429a      	cmp	r2, r3
  405cd8:	d1fb      	bne.n	405cd2 <__lshift+0x3e>
  405cda:	6934      	ldr	r4, [r6, #16]
  405cdc:	f106 0114 	add.w	r1, r6, #20
  405ce0:	f019 091f 	ands.w	r9, r9, #31
  405ce4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  405ce8:	d01d      	beq.n	405d26 <__lshift+0x92>
  405cea:	f1c9 0c20 	rsb	ip, r9, #32
  405cee:	2200      	movs	r2, #0
  405cf0:	680c      	ldr	r4, [r1, #0]
  405cf2:	fa04 f409 	lsl.w	r4, r4, r9
  405cf6:	4314      	orrs	r4, r2
  405cf8:	f843 4b04 	str.w	r4, [r3], #4
  405cfc:	f851 2b04 	ldr.w	r2, [r1], #4
  405d00:	458e      	cmp	lr, r1
  405d02:	fa22 f20c 	lsr.w	r2, r2, ip
  405d06:	d8f3      	bhi.n	405cf0 <__lshift+0x5c>
  405d08:	601a      	str	r2, [r3, #0]
  405d0a:	b10a      	cbz	r2, 405d10 <__lshift+0x7c>
  405d0c:	f108 0502 	add.w	r5, r8, #2
  405d10:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405d12:	6872      	ldr	r2, [r6, #4]
  405d14:	3d01      	subs	r5, #1
  405d16:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405d1a:	6105      	str	r5, [r0, #16]
  405d1c:	6031      	str	r1, [r6, #0]
  405d1e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  405d22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405d26:	3b04      	subs	r3, #4
  405d28:	f851 2b04 	ldr.w	r2, [r1], #4
  405d2c:	f843 2f04 	str.w	r2, [r3, #4]!
  405d30:	458e      	cmp	lr, r1
  405d32:	d8f9      	bhi.n	405d28 <__lshift+0x94>
  405d34:	e7ec      	b.n	405d10 <__lshift+0x7c>
  405d36:	bf00      	nop

00405d38 <__mcmp>:
  405d38:	b430      	push	{r4, r5}
  405d3a:	690b      	ldr	r3, [r1, #16]
  405d3c:	4605      	mov	r5, r0
  405d3e:	6900      	ldr	r0, [r0, #16]
  405d40:	1ac0      	subs	r0, r0, r3
  405d42:	d10f      	bne.n	405d64 <__mcmp+0x2c>
  405d44:	009b      	lsls	r3, r3, #2
  405d46:	3514      	adds	r5, #20
  405d48:	3114      	adds	r1, #20
  405d4a:	4419      	add	r1, r3
  405d4c:	442b      	add	r3, r5
  405d4e:	e001      	b.n	405d54 <__mcmp+0x1c>
  405d50:	429d      	cmp	r5, r3
  405d52:	d207      	bcs.n	405d64 <__mcmp+0x2c>
  405d54:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  405d58:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  405d5c:	4294      	cmp	r4, r2
  405d5e:	d0f7      	beq.n	405d50 <__mcmp+0x18>
  405d60:	d302      	bcc.n	405d68 <__mcmp+0x30>
  405d62:	2001      	movs	r0, #1
  405d64:	bc30      	pop	{r4, r5}
  405d66:	4770      	bx	lr
  405d68:	f04f 30ff 	mov.w	r0, #4294967295
  405d6c:	e7fa      	b.n	405d64 <__mcmp+0x2c>
  405d6e:	bf00      	nop

00405d70 <__mdiff>:
  405d70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405d74:	690f      	ldr	r7, [r1, #16]
  405d76:	460e      	mov	r6, r1
  405d78:	6911      	ldr	r1, [r2, #16]
  405d7a:	1a7f      	subs	r7, r7, r1
  405d7c:	2f00      	cmp	r7, #0
  405d7e:	4690      	mov	r8, r2
  405d80:	d117      	bne.n	405db2 <__mdiff+0x42>
  405d82:	0089      	lsls	r1, r1, #2
  405d84:	f106 0514 	add.w	r5, r6, #20
  405d88:	f102 0e14 	add.w	lr, r2, #20
  405d8c:	186b      	adds	r3, r5, r1
  405d8e:	4471      	add	r1, lr
  405d90:	e001      	b.n	405d96 <__mdiff+0x26>
  405d92:	429d      	cmp	r5, r3
  405d94:	d25c      	bcs.n	405e50 <__mdiff+0xe0>
  405d96:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  405d9a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  405d9e:	42a2      	cmp	r2, r4
  405da0:	d0f7      	beq.n	405d92 <__mdiff+0x22>
  405da2:	d25e      	bcs.n	405e62 <__mdiff+0xf2>
  405da4:	4633      	mov	r3, r6
  405da6:	462c      	mov	r4, r5
  405da8:	4646      	mov	r6, r8
  405daa:	4675      	mov	r5, lr
  405dac:	4698      	mov	r8, r3
  405dae:	2701      	movs	r7, #1
  405db0:	e005      	b.n	405dbe <__mdiff+0x4e>
  405db2:	db58      	blt.n	405e66 <__mdiff+0xf6>
  405db4:	f106 0514 	add.w	r5, r6, #20
  405db8:	f108 0414 	add.w	r4, r8, #20
  405dbc:	2700      	movs	r7, #0
  405dbe:	6871      	ldr	r1, [r6, #4]
  405dc0:	f7ff fdbc 	bl	40593c <_Balloc>
  405dc4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  405dc8:	6936      	ldr	r6, [r6, #16]
  405dca:	60c7      	str	r7, [r0, #12]
  405dcc:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  405dd0:	46a6      	mov	lr, r4
  405dd2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  405dd6:	f100 0414 	add.w	r4, r0, #20
  405dda:	2300      	movs	r3, #0
  405ddc:	f85e 1b04 	ldr.w	r1, [lr], #4
  405de0:	f855 8b04 	ldr.w	r8, [r5], #4
  405de4:	b28a      	uxth	r2, r1
  405de6:	fa13 f388 	uxtah	r3, r3, r8
  405dea:	0c09      	lsrs	r1, r1, #16
  405dec:	1a9a      	subs	r2, r3, r2
  405dee:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  405df2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405df6:	b292      	uxth	r2, r2
  405df8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  405dfc:	45f4      	cmp	ip, lr
  405dfe:	f844 2b04 	str.w	r2, [r4], #4
  405e02:	ea4f 4323 	mov.w	r3, r3, asr #16
  405e06:	d8e9      	bhi.n	405ddc <__mdiff+0x6c>
  405e08:	42af      	cmp	r7, r5
  405e0a:	d917      	bls.n	405e3c <__mdiff+0xcc>
  405e0c:	46a4      	mov	ip, r4
  405e0e:	46ae      	mov	lr, r5
  405e10:	f85e 2b04 	ldr.w	r2, [lr], #4
  405e14:	fa13 f382 	uxtah	r3, r3, r2
  405e18:	1419      	asrs	r1, r3, #16
  405e1a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  405e1e:	b29b      	uxth	r3, r3
  405e20:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405e24:	4577      	cmp	r7, lr
  405e26:	f84c 2b04 	str.w	r2, [ip], #4
  405e2a:	ea4f 4321 	mov.w	r3, r1, asr #16
  405e2e:	d8ef      	bhi.n	405e10 <__mdiff+0xa0>
  405e30:	43ed      	mvns	r5, r5
  405e32:	442f      	add	r7, r5
  405e34:	f027 0703 	bic.w	r7, r7, #3
  405e38:	3704      	adds	r7, #4
  405e3a:	443c      	add	r4, r7
  405e3c:	3c04      	subs	r4, #4
  405e3e:	b922      	cbnz	r2, 405e4a <__mdiff+0xda>
  405e40:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405e44:	3e01      	subs	r6, #1
  405e46:	2b00      	cmp	r3, #0
  405e48:	d0fa      	beq.n	405e40 <__mdiff+0xd0>
  405e4a:	6106      	str	r6, [r0, #16]
  405e4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405e50:	2100      	movs	r1, #0
  405e52:	f7ff fd73 	bl	40593c <_Balloc>
  405e56:	2201      	movs	r2, #1
  405e58:	2300      	movs	r3, #0
  405e5a:	6102      	str	r2, [r0, #16]
  405e5c:	6143      	str	r3, [r0, #20]
  405e5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405e62:	4674      	mov	r4, lr
  405e64:	e7ab      	b.n	405dbe <__mdiff+0x4e>
  405e66:	4633      	mov	r3, r6
  405e68:	f106 0414 	add.w	r4, r6, #20
  405e6c:	f102 0514 	add.w	r5, r2, #20
  405e70:	4616      	mov	r6, r2
  405e72:	2701      	movs	r7, #1
  405e74:	4698      	mov	r8, r3
  405e76:	e7a2      	b.n	405dbe <__mdiff+0x4e>

00405e78 <__d2b>:
  405e78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405e7c:	b082      	sub	sp, #8
  405e7e:	2101      	movs	r1, #1
  405e80:	461c      	mov	r4, r3
  405e82:	f3c3 570a 	ubfx	r7, r3, #20, #11
  405e86:	4615      	mov	r5, r2
  405e88:	9e08      	ldr	r6, [sp, #32]
  405e8a:	f7ff fd57 	bl	40593c <_Balloc>
  405e8e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  405e92:	4680      	mov	r8, r0
  405e94:	b10f      	cbz	r7, 405e9a <__d2b+0x22>
  405e96:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  405e9a:	9401      	str	r4, [sp, #4]
  405e9c:	b31d      	cbz	r5, 405ee6 <__d2b+0x6e>
  405e9e:	a802      	add	r0, sp, #8
  405ea0:	f840 5d08 	str.w	r5, [r0, #-8]!
  405ea4:	f7ff fdda 	bl	405a5c <__lo0bits>
  405ea8:	2800      	cmp	r0, #0
  405eaa:	d134      	bne.n	405f16 <__d2b+0x9e>
  405eac:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405eb0:	f8c8 2014 	str.w	r2, [r8, #20]
  405eb4:	2b00      	cmp	r3, #0
  405eb6:	bf0c      	ite	eq
  405eb8:	2101      	moveq	r1, #1
  405eba:	2102      	movne	r1, #2
  405ebc:	f8c8 3018 	str.w	r3, [r8, #24]
  405ec0:	f8c8 1010 	str.w	r1, [r8, #16]
  405ec4:	b9df      	cbnz	r7, 405efe <__d2b+0x86>
  405ec6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  405eca:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  405ece:	6030      	str	r0, [r6, #0]
  405ed0:	6918      	ldr	r0, [r3, #16]
  405ed2:	f7ff fda3 	bl	405a1c <__hi0bits>
  405ed6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405ed8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  405edc:	6018      	str	r0, [r3, #0]
  405ede:	4640      	mov	r0, r8
  405ee0:	b002      	add	sp, #8
  405ee2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405ee6:	a801      	add	r0, sp, #4
  405ee8:	f7ff fdb8 	bl	405a5c <__lo0bits>
  405eec:	9b01      	ldr	r3, [sp, #4]
  405eee:	f8c8 3014 	str.w	r3, [r8, #20]
  405ef2:	2101      	movs	r1, #1
  405ef4:	3020      	adds	r0, #32
  405ef6:	f8c8 1010 	str.w	r1, [r8, #16]
  405efa:	2f00      	cmp	r7, #0
  405efc:	d0e3      	beq.n	405ec6 <__d2b+0x4e>
  405efe:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405f00:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  405f04:	4407      	add	r7, r0
  405f06:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  405f0a:	6037      	str	r7, [r6, #0]
  405f0c:	6018      	str	r0, [r3, #0]
  405f0e:	4640      	mov	r0, r8
  405f10:	b002      	add	sp, #8
  405f12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405f16:	e89d 000a 	ldmia.w	sp, {r1, r3}
  405f1a:	f1c0 0220 	rsb	r2, r0, #32
  405f1e:	fa03 f202 	lsl.w	r2, r3, r2
  405f22:	430a      	orrs	r2, r1
  405f24:	40c3      	lsrs	r3, r0
  405f26:	9301      	str	r3, [sp, #4]
  405f28:	f8c8 2014 	str.w	r2, [r8, #20]
  405f2c:	e7c2      	b.n	405eb4 <__d2b+0x3c>
  405f2e:	bf00      	nop

00405f30 <_sbrk_r>:
  405f30:	b538      	push	{r3, r4, r5, lr}
  405f32:	4c07      	ldr	r4, [pc, #28]	; (405f50 <_sbrk_r+0x20>)
  405f34:	2300      	movs	r3, #0
  405f36:	4605      	mov	r5, r0
  405f38:	4608      	mov	r0, r1
  405f3a:	6023      	str	r3, [r4, #0]
  405f3c:	f7fc f8d4 	bl	4020e8 <_sbrk>
  405f40:	1c43      	adds	r3, r0, #1
  405f42:	d000      	beq.n	405f46 <_sbrk_r+0x16>
  405f44:	bd38      	pop	{r3, r4, r5, pc}
  405f46:	6823      	ldr	r3, [r4, #0]
  405f48:	2b00      	cmp	r3, #0
  405f4a:	d0fb      	beq.n	405f44 <_sbrk_r+0x14>
  405f4c:	602b      	str	r3, [r5, #0]
  405f4e:	bd38      	pop	{r3, r4, r5, pc}
  405f50:	2000709c 	.word	0x2000709c

00405f54 <strchr>:
  405f54:	b2c9      	uxtb	r1, r1
  405f56:	2900      	cmp	r1, #0
  405f58:	d041      	beq.n	405fde <strchr+0x8a>
  405f5a:	0782      	lsls	r2, r0, #30
  405f5c:	b4f0      	push	{r4, r5, r6, r7}
  405f5e:	d067      	beq.n	406030 <strchr+0xdc>
  405f60:	7803      	ldrb	r3, [r0, #0]
  405f62:	2b00      	cmp	r3, #0
  405f64:	d068      	beq.n	406038 <strchr+0xe4>
  405f66:	4299      	cmp	r1, r3
  405f68:	d037      	beq.n	405fda <strchr+0x86>
  405f6a:	1c43      	adds	r3, r0, #1
  405f6c:	e004      	b.n	405f78 <strchr+0x24>
  405f6e:	f813 0b01 	ldrb.w	r0, [r3], #1
  405f72:	b390      	cbz	r0, 405fda <strchr+0x86>
  405f74:	4281      	cmp	r1, r0
  405f76:	d02f      	beq.n	405fd8 <strchr+0x84>
  405f78:	079a      	lsls	r2, r3, #30
  405f7a:	461c      	mov	r4, r3
  405f7c:	d1f7      	bne.n	405f6e <strchr+0x1a>
  405f7e:	6825      	ldr	r5, [r4, #0]
  405f80:	ea41 2301 	orr.w	r3, r1, r1, lsl #8
  405f84:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
  405f88:	ea83 0605 	eor.w	r6, r3, r5
  405f8c:	f1a6 3001 	sub.w	r0, r6, #16843009	; 0x1010101
  405f90:	f1a5 3201 	sub.w	r2, r5, #16843009	; 0x1010101
  405f94:	ea20 0006 	bic.w	r0, r0, r6
  405f98:	ea22 0205 	bic.w	r2, r2, r5
  405f9c:	4302      	orrs	r2, r0
  405f9e:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  405fa2:	d111      	bne.n	405fc8 <strchr+0x74>
  405fa4:	4620      	mov	r0, r4
  405fa6:	f850 6f04 	ldr.w	r6, [r0, #4]!
  405faa:	ea83 0706 	eor.w	r7, r3, r6
  405fae:	f1a7 3501 	sub.w	r5, r7, #16843009	; 0x1010101
  405fb2:	f1a6 3201 	sub.w	r2, r6, #16843009	; 0x1010101
  405fb6:	ea25 0507 	bic.w	r5, r5, r7
  405fba:	ea22 0206 	bic.w	r2, r2, r6
  405fbe:	432a      	orrs	r2, r5
  405fc0:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  405fc4:	d0ef      	beq.n	405fa6 <strchr+0x52>
  405fc6:	4604      	mov	r4, r0
  405fc8:	7820      	ldrb	r0, [r4, #0]
  405fca:	b918      	cbnz	r0, 405fd4 <strchr+0x80>
  405fcc:	e005      	b.n	405fda <strchr+0x86>
  405fce:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  405fd2:	b110      	cbz	r0, 405fda <strchr+0x86>
  405fd4:	4281      	cmp	r1, r0
  405fd6:	d1fa      	bne.n	405fce <strchr+0x7a>
  405fd8:	4620      	mov	r0, r4
  405fda:	bcf0      	pop	{r4, r5, r6, r7}
  405fdc:	4770      	bx	lr
  405fde:	0783      	lsls	r3, r0, #30
  405fe0:	d024      	beq.n	40602c <strchr+0xd8>
  405fe2:	7803      	ldrb	r3, [r0, #0]
  405fe4:	2b00      	cmp	r3, #0
  405fe6:	d0f9      	beq.n	405fdc <strchr+0x88>
  405fe8:	1c43      	adds	r3, r0, #1
  405fea:	e003      	b.n	405ff4 <strchr+0xa0>
  405fec:	7802      	ldrb	r2, [r0, #0]
  405fee:	3301      	adds	r3, #1
  405ff0:	2a00      	cmp	r2, #0
  405ff2:	d0f3      	beq.n	405fdc <strchr+0x88>
  405ff4:	0799      	lsls	r1, r3, #30
  405ff6:	4618      	mov	r0, r3
  405ff8:	d1f8      	bne.n	405fec <strchr+0x98>
  405ffa:	6819      	ldr	r1, [r3, #0]
  405ffc:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  406000:	ea22 0201 	bic.w	r2, r2, r1
  406004:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  406008:	d108      	bne.n	40601c <strchr+0xc8>
  40600a:	f853 1f04 	ldr.w	r1, [r3, #4]!
  40600e:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  406012:	ea22 0201 	bic.w	r2, r2, r1
  406016:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  40601a:	d0f6      	beq.n	40600a <strchr+0xb6>
  40601c:	781a      	ldrb	r2, [r3, #0]
  40601e:	4618      	mov	r0, r3
  406020:	b142      	cbz	r2, 406034 <strchr+0xe0>
  406022:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  406026:	2b00      	cmp	r3, #0
  406028:	d1fb      	bne.n	406022 <strchr+0xce>
  40602a:	4770      	bx	lr
  40602c:	4603      	mov	r3, r0
  40602e:	e7e4      	b.n	405ffa <strchr+0xa6>
  406030:	4604      	mov	r4, r0
  406032:	e7a4      	b.n	405f7e <strchr+0x2a>
  406034:	4618      	mov	r0, r3
  406036:	4770      	bx	lr
  406038:	4618      	mov	r0, r3
  40603a:	e7ce      	b.n	405fda <strchr+0x86>
  40603c:	0000      	movs	r0, r0
	...

00406040 <strlen>:
  406040:	f890 f000 	pld	[r0]
  406044:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  406048:	f020 0107 	bic.w	r1, r0, #7
  40604c:	f06f 0c00 	mvn.w	ip, #0
  406050:	f010 0407 	ands.w	r4, r0, #7
  406054:	f891 f020 	pld	[r1, #32]
  406058:	f040 8049 	bne.w	4060ee <strlen+0xae>
  40605c:	f04f 0400 	mov.w	r4, #0
  406060:	f06f 0007 	mvn.w	r0, #7
  406064:	e9d1 2300 	ldrd	r2, r3, [r1]
  406068:	f891 f040 	pld	[r1, #64]	; 0x40
  40606c:	f100 0008 	add.w	r0, r0, #8
  406070:	fa82 f24c 	uadd8	r2, r2, ip
  406074:	faa4 f28c 	sel	r2, r4, ip
  406078:	fa83 f34c 	uadd8	r3, r3, ip
  40607c:	faa2 f38c 	sel	r3, r2, ip
  406080:	bb4b      	cbnz	r3, 4060d6 <strlen+0x96>
  406082:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  406086:	fa82 f24c 	uadd8	r2, r2, ip
  40608a:	f100 0008 	add.w	r0, r0, #8
  40608e:	faa4 f28c 	sel	r2, r4, ip
  406092:	fa83 f34c 	uadd8	r3, r3, ip
  406096:	faa2 f38c 	sel	r3, r2, ip
  40609a:	b9e3      	cbnz	r3, 4060d6 <strlen+0x96>
  40609c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4060a0:	fa82 f24c 	uadd8	r2, r2, ip
  4060a4:	f100 0008 	add.w	r0, r0, #8
  4060a8:	faa4 f28c 	sel	r2, r4, ip
  4060ac:	fa83 f34c 	uadd8	r3, r3, ip
  4060b0:	faa2 f38c 	sel	r3, r2, ip
  4060b4:	b97b      	cbnz	r3, 4060d6 <strlen+0x96>
  4060b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4060ba:	f101 0120 	add.w	r1, r1, #32
  4060be:	fa82 f24c 	uadd8	r2, r2, ip
  4060c2:	f100 0008 	add.w	r0, r0, #8
  4060c6:	faa4 f28c 	sel	r2, r4, ip
  4060ca:	fa83 f34c 	uadd8	r3, r3, ip
  4060ce:	faa2 f38c 	sel	r3, r2, ip
  4060d2:	2b00      	cmp	r3, #0
  4060d4:	d0c6      	beq.n	406064 <strlen+0x24>
  4060d6:	2a00      	cmp	r2, #0
  4060d8:	bf04      	itt	eq
  4060da:	3004      	addeq	r0, #4
  4060dc:	461a      	moveq	r2, r3
  4060de:	ba12      	rev	r2, r2
  4060e0:	fab2 f282 	clz	r2, r2
  4060e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4060e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4060ec:	4770      	bx	lr
  4060ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4060f2:	f004 0503 	and.w	r5, r4, #3
  4060f6:	f1c4 0000 	rsb	r0, r4, #0
  4060fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4060fe:	f014 0f04 	tst.w	r4, #4
  406102:	f891 f040 	pld	[r1, #64]	; 0x40
  406106:	fa0c f505 	lsl.w	r5, ip, r5
  40610a:	ea62 0205 	orn	r2, r2, r5
  40610e:	bf1c      	itt	ne
  406110:	ea63 0305 	ornne	r3, r3, r5
  406114:	4662      	movne	r2, ip
  406116:	f04f 0400 	mov.w	r4, #0
  40611a:	e7a9      	b.n	406070 <strlen+0x30>

0040611c <__ssprint_r>:
  40611c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406120:	6893      	ldr	r3, [r2, #8]
  406122:	b083      	sub	sp, #12
  406124:	4690      	mov	r8, r2
  406126:	2b00      	cmp	r3, #0
  406128:	d070      	beq.n	40620c <__ssprint_r+0xf0>
  40612a:	4682      	mov	sl, r0
  40612c:	460c      	mov	r4, r1
  40612e:	6817      	ldr	r7, [r2, #0]
  406130:	688d      	ldr	r5, [r1, #8]
  406132:	6808      	ldr	r0, [r1, #0]
  406134:	e042      	b.n	4061bc <__ssprint_r+0xa0>
  406136:	89a3      	ldrh	r3, [r4, #12]
  406138:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40613c:	d02e      	beq.n	40619c <__ssprint_r+0x80>
  40613e:	6965      	ldr	r5, [r4, #20]
  406140:	6921      	ldr	r1, [r4, #16]
  406142:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  406146:	eba0 0b01 	sub.w	fp, r0, r1
  40614a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40614e:	f10b 0001 	add.w	r0, fp, #1
  406152:	106d      	asrs	r5, r5, #1
  406154:	4430      	add	r0, r6
  406156:	42a8      	cmp	r0, r5
  406158:	462a      	mov	r2, r5
  40615a:	bf84      	itt	hi
  40615c:	4605      	movhi	r5, r0
  40615e:	462a      	movhi	r2, r5
  406160:	055b      	lsls	r3, r3, #21
  406162:	d538      	bpl.n	4061d6 <__ssprint_r+0xba>
  406164:	4611      	mov	r1, r2
  406166:	4650      	mov	r0, sl
  406168:	f7ff f810 	bl	40518c <_malloc_r>
  40616c:	2800      	cmp	r0, #0
  40616e:	d03c      	beq.n	4061ea <__ssprint_r+0xce>
  406170:	465a      	mov	r2, fp
  406172:	6921      	ldr	r1, [r4, #16]
  406174:	9001      	str	r0, [sp, #4]
  406176:	f7ff fb3b 	bl	4057f0 <memcpy>
  40617a:	89a2      	ldrh	r2, [r4, #12]
  40617c:	9b01      	ldr	r3, [sp, #4]
  40617e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  406182:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  406186:	81a2      	strh	r2, [r4, #12]
  406188:	eba5 020b 	sub.w	r2, r5, fp
  40618c:	eb03 000b 	add.w	r0, r3, fp
  406190:	6165      	str	r5, [r4, #20]
  406192:	6123      	str	r3, [r4, #16]
  406194:	6020      	str	r0, [r4, #0]
  406196:	60a2      	str	r2, [r4, #8]
  406198:	4635      	mov	r5, r6
  40619a:	46b3      	mov	fp, r6
  40619c:	465a      	mov	r2, fp
  40619e:	4649      	mov	r1, r9
  4061a0:	f000 fa18 	bl	4065d4 <memmove>
  4061a4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4061a8:	68a2      	ldr	r2, [r4, #8]
  4061aa:	6820      	ldr	r0, [r4, #0]
  4061ac:	1b55      	subs	r5, r2, r5
  4061ae:	4458      	add	r0, fp
  4061b0:	1b9e      	subs	r6, r3, r6
  4061b2:	60a5      	str	r5, [r4, #8]
  4061b4:	6020      	str	r0, [r4, #0]
  4061b6:	f8c8 6008 	str.w	r6, [r8, #8]
  4061ba:	b33e      	cbz	r6, 40620c <__ssprint_r+0xf0>
  4061bc:	687e      	ldr	r6, [r7, #4]
  4061be:	463b      	mov	r3, r7
  4061c0:	3708      	adds	r7, #8
  4061c2:	2e00      	cmp	r6, #0
  4061c4:	d0fa      	beq.n	4061bc <__ssprint_r+0xa0>
  4061c6:	42ae      	cmp	r6, r5
  4061c8:	f8d3 9000 	ldr.w	r9, [r3]
  4061cc:	46ab      	mov	fp, r5
  4061ce:	d2b2      	bcs.n	406136 <__ssprint_r+0x1a>
  4061d0:	4635      	mov	r5, r6
  4061d2:	46b3      	mov	fp, r6
  4061d4:	e7e2      	b.n	40619c <__ssprint_r+0x80>
  4061d6:	4650      	mov	r0, sl
  4061d8:	f000 fa60 	bl	40669c <_realloc_r>
  4061dc:	4603      	mov	r3, r0
  4061de:	2800      	cmp	r0, #0
  4061e0:	d1d2      	bne.n	406188 <__ssprint_r+0x6c>
  4061e2:	6921      	ldr	r1, [r4, #16]
  4061e4:	4650      	mov	r0, sl
  4061e6:	f000 f8f9 	bl	4063dc <_free_r>
  4061ea:	230c      	movs	r3, #12
  4061ec:	f8ca 3000 	str.w	r3, [sl]
  4061f0:	89a3      	ldrh	r3, [r4, #12]
  4061f2:	2200      	movs	r2, #0
  4061f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4061f8:	f04f 30ff 	mov.w	r0, #4294967295
  4061fc:	81a3      	strh	r3, [r4, #12]
  4061fe:	f8c8 2008 	str.w	r2, [r8, #8]
  406202:	f8c8 2004 	str.w	r2, [r8, #4]
  406206:	b003      	add	sp, #12
  406208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40620c:	2000      	movs	r0, #0
  40620e:	f8c8 0004 	str.w	r0, [r8, #4]
  406212:	b003      	add	sp, #12
  406214:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00406218 <__register_exitproc>:
  406218:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40621c:	4d2c      	ldr	r5, [pc, #176]	; (4062d0 <__register_exitproc+0xb8>)
  40621e:	4606      	mov	r6, r0
  406220:	6828      	ldr	r0, [r5, #0]
  406222:	4698      	mov	r8, r3
  406224:	460f      	mov	r7, r1
  406226:	4691      	mov	r9, r2
  406228:	f7fe ffac 	bl	405184 <__retarget_lock_acquire_recursive>
  40622c:	4b29      	ldr	r3, [pc, #164]	; (4062d4 <__register_exitproc+0xbc>)
  40622e:	681c      	ldr	r4, [r3, #0]
  406230:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  406234:	2b00      	cmp	r3, #0
  406236:	d03e      	beq.n	4062b6 <__register_exitproc+0x9e>
  406238:	685a      	ldr	r2, [r3, #4]
  40623a:	2a1f      	cmp	r2, #31
  40623c:	dc1c      	bgt.n	406278 <__register_exitproc+0x60>
  40623e:	f102 0e01 	add.w	lr, r2, #1
  406242:	b176      	cbz	r6, 406262 <__register_exitproc+0x4a>
  406244:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  406248:	2401      	movs	r4, #1
  40624a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40624e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  406252:	4094      	lsls	r4, r2
  406254:	4320      	orrs	r0, r4
  406256:	2e02      	cmp	r6, #2
  406258:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40625c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  406260:	d023      	beq.n	4062aa <__register_exitproc+0x92>
  406262:	3202      	adds	r2, #2
  406264:	f8c3 e004 	str.w	lr, [r3, #4]
  406268:	6828      	ldr	r0, [r5, #0]
  40626a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40626e:	f7fe ff8b 	bl	405188 <__retarget_lock_release_recursive>
  406272:	2000      	movs	r0, #0
  406274:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406278:	4b17      	ldr	r3, [pc, #92]	; (4062d8 <__register_exitproc+0xc0>)
  40627a:	b30b      	cbz	r3, 4062c0 <__register_exitproc+0xa8>
  40627c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  406280:	f3af 8000 	nop.w
  406284:	4603      	mov	r3, r0
  406286:	b1d8      	cbz	r0, 4062c0 <__register_exitproc+0xa8>
  406288:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40628c:	6002      	str	r2, [r0, #0]
  40628e:	2100      	movs	r1, #0
  406290:	6041      	str	r1, [r0, #4]
  406292:	460a      	mov	r2, r1
  406294:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  406298:	f04f 0e01 	mov.w	lr, #1
  40629c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4062a0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4062a4:	2e00      	cmp	r6, #0
  4062a6:	d0dc      	beq.n	406262 <__register_exitproc+0x4a>
  4062a8:	e7cc      	b.n	406244 <__register_exitproc+0x2c>
  4062aa:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4062ae:	430c      	orrs	r4, r1
  4062b0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4062b4:	e7d5      	b.n	406262 <__register_exitproc+0x4a>
  4062b6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4062ba:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4062be:	e7bb      	b.n	406238 <__register_exitproc+0x20>
  4062c0:	6828      	ldr	r0, [r5, #0]
  4062c2:	f7fe ff61 	bl	405188 <__retarget_lock_release_recursive>
  4062c6:	f04f 30ff 	mov.w	r0, #4294967295
  4062ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4062ce:	bf00      	nop
  4062d0:	200065e8 	.word	0x200065e8
  4062d4:	004074cc 	.word	0x004074cc
  4062d8:	00000000 	.word	0x00000000

004062dc <_calloc_r>:
  4062dc:	b510      	push	{r4, lr}
  4062de:	fb02 f101 	mul.w	r1, r2, r1
  4062e2:	f7fe ff53 	bl	40518c <_malloc_r>
  4062e6:	4604      	mov	r4, r0
  4062e8:	b1d8      	cbz	r0, 406322 <_calloc_r+0x46>
  4062ea:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4062ee:	f022 0203 	bic.w	r2, r2, #3
  4062f2:	3a04      	subs	r2, #4
  4062f4:	2a24      	cmp	r2, #36	; 0x24
  4062f6:	d818      	bhi.n	40632a <_calloc_r+0x4e>
  4062f8:	2a13      	cmp	r2, #19
  4062fa:	d914      	bls.n	406326 <_calloc_r+0x4a>
  4062fc:	2300      	movs	r3, #0
  4062fe:	2a1b      	cmp	r2, #27
  406300:	6003      	str	r3, [r0, #0]
  406302:	6043      	str	r3, [r0, #4]
  406304:	d916      	bls.n	406334 <_calloc_r+0x58>
  406306:	2a24      	cmp	r2, #36	; 0x24
  406308:	6083      	str	r3, [r0, #8]
  40630a:	60c3      	str	r3, [r0, #12]
  40630c:	bf11      	iteee	ne
  40630e:	f100 0210 	addne.w	r2, r0, #16
  406312:	6103      	streq	r3, [r0, #16]
  406314:	6143      	streq	r3, [r0, #20]
  406316:	f100 0218 	addeq.w	r2, r0, #24
  40631a:	2300      	movs	r3, #0
  40631c:	6013      	str	r3, [r2, #0]
  40631e:	6053      	str	r3, [r2, #4]
  406320:	6093      	str	r3, [r2, #8]
  406322:	4620      	mov	r0, r4
  406324:	bd10      	pop	{r4, pc}
  406326:	4602      	mov	r2, r0
  406328:	e7f7      	b.n	40631a <_calloc_r+0x3e>
  40632a:	2100      	movs	r1, #0
  40632c:	f7fc f9ce 	bl	4026cc <memset>
  406330:	4620      	mov	r0, r4
  406332:	bd10      	pop	{r4, pc}
  406334:	f100 0208 	add.w	r2, r0, #8
  406338:	e7ef      	b.n	40631a <_calloc_r+0x3e>
  40633a:	bf00      	nop

0040633c <_malloc_trim_r>:
  40633c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40633e:	4f24      	ldr	r7, [pc, #144]	; (4063d0 <_malloc_trim_r+0x94>)
  406340:	460c      	mov	r4, r1
  406342:	4606      	mov	r6, r0
  406344:	f7ff faee 	bl	405924 <__malloc_lock>
  406348:	68bb      	ldr	r3, [r7, #8]
  40634a:	685d      	ldr	r5, [r3, #4]
  40634c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  406350:	310f      	adds	r1, #15
  406352:	f025 0503 	bic.w	r5, r5, #3
  406356:	4429      	add	r1, r5
  406358:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40635c:	f021 010f 	bic.w	r1, r1, #15
  406360:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  406364:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  406368:	db07      	blt.n	40637a <_malloc_trim_r+0x3e>
  40636a:	2100      	movs	r1, #0
  40636c:	4630      	mov	r0, r6
  40636e:	f7ff fddf 	bl	405f30 <_sbrk_r>
  406372:	68bb      	ldr	r3, [r7, #8]
  406374:	442b      	add	r3, r5
  406376:	4298      	cmp	r0, r3
  406378:	d004      	beq.n	406384 <_malloc_trim_r+0x48>
  40637a:	4630      	mov	r0, r6
  40637c:	f7ff fad8 	bl	405930 <__malloc_unlock>
  406380:	2000      	movs	r0, #0
  406382:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406384:	4261      	negs	r1, r4
  406386:	4630      	mov	r0, r6
  406388:	f7ff fdd2 	bl	405f30 <_sbrk_r>
  40638c:	3001      	adds	r0, #1
  40638e:	d00d      	beq.n	4063ac <_malloc_trim_r+0x70>
  406390:	4b10      	ldr	r3, [pc, #64]	; (4063d4 <_malloc_trim_r+0x98>)
  406392:	68ba      	ldr	r2, [r7, #8]
  406394:	6819      	ldr	r1, [r3, #0]
  406396:	1b2d      	subs	r5, r5, r4
  406398:	f045 0501 	orr.w	r5, r5, #1
  40639c:	4630      	mov	r0, r6
  40639e:	1b09      	subs	r1, r1, r4
  4063a0:	6055      	str	r5, [r2, #4]
  4063a2:	6019      	str	r1, [r3, #0]
  4063a4:	f7ff fac4 	bl	405930 <__malloc_unlock>
  4063a8:	2001      	movs	r0, #1
  4063aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4063ac:	2100      	movs	r1, #0
  4063ae:	4630      	mov	r0, r6
  4063b0:	f7ff fdbe 	bl	405f30 <_sbrk_r>
  4063b4:	68ba      	ldr	r2, [r7, #8]
  4063b6:	1a83      	subs	r3, r0, r2
  4063b8:	2b0f      	cmp	r3, #15
  4063ba:	ddde      	ble.n	40637a <_malloc_trim_r+0x3e>
  4063bc:	4c06      	ldr	r4, [pc, #24]	; (4063d8 <_malloc_trim_r+0x9c>)
  4063be:	4905      	ldr	r1, [pc, #20]	; (4063d4 <_malloc_trim_r+0x98>)
  4063c0:	6824      	ldr	r4, [r4, #0]
  4063c2:	f043 0301 	orr.w	r3, r3, #1
  4063c6:	1b00      	subs	r0, r0, r4
  4063c8:	6053      	str	r3, [r2, #4]
  4063ca:	6008      	str	r0, [r1, #0]
  4063cc:	e7d5      	b.n	40637a <_malloc_trim_r+0x3e>
  4063ce:	bf00      	nop
  4063d0:	200065ec 	.word	0x200065ec
  4063d4:	20006c1c 	.word	0x20006c1c
  4063d8:	200069f4 	.word	0x200069f4

004063dc <_free_r>:
  4063dc:	2900      	cmp	r1, #0
  4063de:	d044      	beq.n	40646a <_free_r+0x8e>
  4063e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4063e4:	460d      	mov	r5, r1
  4063e6:	4680      	mov	r8, r0
  4063e8:	f7ff fa9c 	bl	405924 <__malloc_lock>
  4063ec:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4063f0:	4969      	ldr	r1, [pc, #420]	; (406598 <_free_r+0x1bc>)
  4063f2:	f027 0301 	bic.w	r3, r7, #1
  4063f6:	f1a5 0408 	sub.w	r4, r5, #8
  4063fa:	18e2      	adds	r2, r4, r3
  4063fc:	688e      	ldr	r6, [r1, #8]
  4063fe:	6850      	ldr	r0, [r2, #4]
  406400:	42b2      	cmp	r2, r6
  406402:	f020 0003 	bic.w	r0, r0, #3
  406406:	d05e      	beq.n	4064c6 <_free_r+0xea>
  406408:	07fe      	lsls	r6, r7, #31
  40640a:	6050      	str	r0, [r2, #4]
  40640c:	d40b      	bmi.n	406426 <_free_r+0x4a>
  40640e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  406412:	1be4      	subs	r4, r4, r7
  406414:	f101 0e08 	add.w	lr, r1, #8
  406418:	68a5      	ldr	r5, [r4, #8]
  40641a:	4575      	cmp	r5, lr
  40641c:	443b      	add	r3, r7
  40641e:	d06d      	beq.n	4064fc <_free_r+0x120>
  406420:	68e7      	ldr	r7, [r4, #12]
  406422:	60ef      	str	r7, [r5, #12]
  406424:	60bd      	str	r5, [r7, #8]
  406426:	1815      	adds	r5, r2, r0
  406428:	686d      	ldr	r5, [r5, #4]
  40642a:	07ed      	lsls	r5, r5, #31
  40642c:	d53e      	bpl.n	4064ac <_free_r+0xd0>
  40642e:	f043 0201 	orr.w	r2, r3, #1
  406432:	6062      	str	r2, [r4, #4]
  406434:	50e3      	str	r3, [r4, r3]
  406436:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40643a:	d217      	bcs.n	40646c <_free_r+0x90>
  40643c:	08db      	lsrs	r3, r3, #3
  40643e:	1c58      	adds	r0, r3, #1
  406440:	109a      	asrs	r2, r3, #2
  406442:	684d      	ldr	r5, [r1, #4]
  406444:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  406448:	60a7      	str	r7, [r4, #8]
  40644a:	2301      	movs	r3, #1
  40644c:	4093      	lsls	r3, r2
  40644e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  406452:	432b      	orrs	r3, r5
  406454:	3a08      	subs	r2, #8
  406456:	60e2      	str	r2, [r4, #12]
  406458:	604b      	str	r3, [r1, #4]
  40645a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40645e:	60fc      	str	r4, [r7, #12]
  406460:	4640      	mov	r0, r8
  406462:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  406466:	f7ff ba63 	b.w	405930 <__malloc_unlock>
  40646a:	4770      	bx	lr
  40646c:	0a5a      	lsrs	r2, r3, #9
  40646e:	2a04      	cmp	r2, #4
  406470:	d852      	bhi.n	406518 <_free_r+0x13c>
  406472:	099a      	lsrs	r2, r3, #6
  406474:	f102 0739 	add.w	r7, r2, #57	; 0x39
  406478:	00ff      	lsls	r7, r7, #3
  40647a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40647e:	19c8      	adds	r0, r1, r7
  406480:	59ca      	ldr	r2, [r1, r7]
  406482:	3808      	subs	r0, #8
  406484:	4290      	cmp	r0, r2
  406486:	d04f      	beq.n	406528 <_free_r+0x14c>
  406488:	6851      	ldr	r1, [r2, #4]
  40648a:	f021 0103 	bic.w	r1, r1, #3
  40648e:	428b      	cmp	r3, r1
  406490:	d232      	bcs.n	4064f8 <_free_r+0x11c>
  406492:	6892      	ldr	r2, [r2, #8]
  406494:	4290      	cmp	r0, r2
  406496:	d1f7      	bne.n	406488 <_free_r+0xac>
  406498:	68c3      	ldr	r3, [r0, #12]
  40649a:	60a0      	str	r0, [r4, #8]
  40649c:	60e3      	str	r3, [r4, #12]
  40649e:	609c      	str	r4, [r3, #8]
  4064a0:	60c4      	str	r4, [r0, #12]
  4064a2:	4640      	mov	r0, r8
  4064a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4064a8:	f7ff ba42 	b.w	405930 <__malloc_unlock>
  4064ac:	6895      	ldr	r5, [r2, #8]
  4064ae:	4f3b      	ldr	r7, [pc, #236]	; (40659c <_free_r+0x1c0>)
  4064b0:	42bd      	cmp	r5, r7
  4064b2:	4403      	add	r3, r0
  4064b4:	d040      	beq.n	406538 <_free_r+0x15c>
  4064b6:	68d0      	ldr	r0, [r2, #12]
  4064b8:	60e8      	str	r0, [r5, #12]
  4064ba:	f043 0201 	orr.w	r2, r3, #1
  4064be:	6085      	str	r5, [r0, #8]
  4064c0:	6062      	str	r2, [r4, #4]
  4064c2:	50e3      	str	r3, [r4, r3]
  4064c4:	e7b7      	b.n	406436 <_free_r+0x5a>
  4064c6:	07ff      	lsls	r7, r7, #31
  4064c8:	4403      	add	r3, r0
  4064ca:	d407      	bmi.n	4064dc <_free_r+0x100>
  4064cc:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4064d0:	1aa4      	subs	r4, r4, r2
  4064d2:	4413      	add	r3, r2
  4064d4:	68a0      	ldr	r0, [r4, #8]
  4064d6:	68e2      	ldr	r2, [r4, #12]
  4064d8:	60c2      	str	r2, [r0, #12]
  4064da:	6090      	str	r0, [r2, #8]
  4064dc:	4a30      	ldr	r2, [pc, #192]	; (4065a0 <_free_r+0x1c4>)
  4064de:	6812      	ldr	r2, [r2, #0]
  4064e0:	f043 0001 	orr.w	r0, r3, #1
  4064e4:	4293      	cmp	r3, r2
  4064e6:	6060      	str	r0, [r4, #4]
  4064e8:	608c      	str	r4, [r1, #8]
  4064ea:	d3b9      	bcc.n	406460 <_free_r+0x84>
  4064ec:	4b2d      	ldr	r3, [pc, #180]	; (4065a4 <_free_r+0x1c8>)
  4064ee:	4640      	mov	r0, r8
  4064f0:	6819      	ldr	r1, [r3, #0]
  4064f2:	f7ff ff23 	bl	40633c <_malloc_trim_r>
  4064f6:	e7b3      	b.n	406460 <_free_r+0x84>
  4064f8:	4610      	mov	r0, r2
  4064fa:	e7cd      	b.n	406498 <_free_r+0xbc>
  4064fc:	1811      	adds	r1, r2, r0
  4064fe:	6849      	ldr	r1, [r1, #4]
  406500:	07c9      	lsls	r1, r1, #31
  406502:	d444      	bmi.n	40658e <_free_r+0x1b2>
  406504:	6891      	ldr	r1, [r2, #8]
  406506:	68d2      	ldr	r2, [r2, #12]
  406508:	60ca      	str	r2, [r1, #12]
  40650a:	4403      	add	r3, r0
  40650c:	f043 0001 	orr.w	r0, r3, #1
  406510:	6091      	str	r1, [r2, #8]
  406512:	6060      	str	r0, [r4, #4]
  406514:	50e3      	str	r3, [r4, r3]
  406516:	e7a3      	b.n	406460 <_free_r+0x84>
  406518:	2a14      	cmp	r2, #20
  40651a:	d816      	bhi.n	40654a <_free_r+0x16e>
  40651c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  406520:	00ff      	lsls	r7, r7, #3
  406522:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  406526:	e7aa      	b.n	40647e <_free_r+0xa2>
  406528:	10aa      	asrs	r2, r5, #2
  40652a:	2301      	movs	r3, #1
  40652c:	684d      	ldr	r5, [r1, #4]
  40652e:	4093      	lsls	r3, r2
  406530:	432b      	orrs	r3, r5
  406532:	604b      	str	r3, [r1, #4]
  406534:	4603      	mov	r3, r0
  406536:	e7b0      	b.n	40649a <_free_r+0xbe>
  406538:	f043 0201 	orr.w	r2, r3, #1
  40653c:	614c      	str	r4, [r1, #20]
  40653e:	610c      	str	r4, [r1, #16]
  406540:	60e5      	str	r5, [r4, #12]
  406542:	60a5      	str	r5, [r4, #8]
  406544:	6062      	str	r2, [r4, #4]
  406546:	50e3      	str	r3, [r4, r3]
  406548:	e78a      	b.n	406460 <_free_r+0x84>
  40654a:	2a54      	cmp	r2, #84	; 0x54
  40654c:	d806      	bhi.n	40655c <_free_r+0x180>
  40654e:	0b1a      	lsrs	r2, r3, #12
  406550:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  406554:	00ff      	lsls	r7, r7, #3
  406556:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40655a:	e790      	b.n	40647e <_free_r+0xa2>
  40655c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  406560:	d806      	bhi.n	406570 <_free_r+0x194>
  406562:	0bda      	lsrs	r2, r3, #15
  406564:	f102 0778 	add.w	r7, r2, #120	; 0x78
  406568:	00ff      	lsls	r7, r7, #3
  40656a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40656e:	e786      	b.n	40647e <_free_r+0xa2>
  406570:	f240 5054 	movw	r0, #1364	; 0x554
  406574:	4282      	cmp	r2, r0
  406576:	d806      	bhi.n	406586 <_free_r+0x1aa>
  406578:	0c9a      	lsrs	r2, r3, #18
  40657a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40657e:	00ff      	lsls	r7, r7, #3
  406580:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  406584:	e77b      	b.n	40647e <_free_r+0xa2>
  406586:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40658a:	257e      	movs	r5, #126	; 0x7e
  40658c:	e777      	b.n	40647e <_free_r+0xa2>
  40658e:	f043 0101 	orr.w	r1, r3, #1
  406592:	6061      	str	r1, [r4, #4]
  406594:	6013      	str	r3, [r2, #0]
  406596:	e763      	b.n	406460 <_free_r+0x84>
  406598:	200065ec 	.word	0x200065ec
  40659c:	200065f4 	.word	0x200065f4
  4065a0:	200069f8 	.word	0x200069f8
  4065a4:	20006c4c 	.word	0x20006c4c

004065a8 <__ascii_mbtowc>:
  4065a8:	b082      	sub	sp, #8
  4065aa:	b149      	cbz	r1, 4065c0 <__ascii_mbtowc+0x18>
  4065ac:	b15a      	cbz	r2, 4065c6 <__ascii_mbtowc+0x1e>
  4065ae:	b16b      	cbz	r3, 4065cc <__ascii_mbtowc+0x24>
  4065b0:	7813      	ldrb	r3, [r2, #0]
  4065b2:	600b      	str	r3, [r1, #0]
  4065b4:	7812      	ldrb	r2, [r2, #0]
  4065b6:	1c10      	adds	r0, r2, #0
  4065b8:	bf18      	it	ne
  4065ba:	2001      	movne	r0, #1
  4065bc:	b002      	add	sp, #8
  4065be:	4770      	bx	lr
  4065c0:	a901      	add	r1, sp, #4
  4065c2:	2a00      	cmp	r2, #0
  4065c4:	d1f3      	bne.n	4065ae <__ascii_mbtowc+0x6>
  4065c6:	4610      	mov	r0, r2
  4065c8:	b002      	add	sp, #8
  4065ca:	4770      	bx	lr
  4065cc:	f06f 0001 	mvn.w	r0, #1
  4065d0:	e7f4      	b.n	4065bc <__ascii_mbtowc+0x14>
  4065d2:	bf00      	nop

004065d4 <memmove>:
  4065d4:	4288      	cmp	r0, r1
  4065d6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4065d8:	d90d      	bls.n	4065f6 <memmove+0x22>
  4065da:	188b      	adds	r3, r1, r2
  4065dc:	4298      	cmp	r0, r3
  4065de:	d20a      	bcs.n	4065f6 <memmove+0x22>
  4065e0:	1884      	adds	r4, r0, r2
  4065e2:	2a00      	cmp	r2, #0
  4065e4:	d051      	beq.n	40668a <memmove+0xb6>
  4065e6:	4622      	mov	r2, r4
  4065e8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4065ec:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4065f0:	4299      	cmp	r1, r3
  4065f2:	d1f9      	bne.n	4065e8 <memmove+0x14>
  4065f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4065f6:	2a0f      	cmp	r2, #15
  4065f8:	d948      	bls.n	40668c <memmove+0xb8>
  4065fa:	ea41 0300 	orr.w	r3, r1, r0
  4065fe:	079b      	lsls	r3, r3, #30
  406600:	d146      	bne.n	406690 <memmove+0xbc>
  406602:	f100 0410 	add.w	r4, r0, #16
  406606:	f101 0310 	add.w	r3, r1, #16
  40660a:	4615      	mov	r5, r2
  40660c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  406610:	f844 6c10 	str.w	r6, [r4, #-16]
  406614:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  406618:	f844 6c0c 	str.w	r6, [r4, #-12]
  40661c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  406620:	f844 6c08 	str.w	r6, [r4, #-8]
  406624:	3d10      	subs	r5, #16
  406626:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40662a:	f844 6c04 	str.w	r6, [r4, #-4]
  40662e:	2d0f      	cmp	r5, #15
  406630:	f103 0310 	add.w	r3, r3, #16
  406634:	f104 0410 	add.w	r4, r4, #16
  406638:	d8e8      	bhi.n	40660c <memmove+0x38>
  40663a:	f1a2 0310 	sub.w	r3, r2, #16
  40663e:	f023 030f 	bic.w	r3, r3, #15
  406642:	f002 0e0f 	and.w	lr, r2, #15
  406646:	3310      	adds	r3, #16
  406648:	f1be 0f03 	cmp.w	lr, #3
  40664c:	4419      	add	r1, r3
  40664e:	4403      	add	r3, r0
  406650:	d921      	bls.n	406696 <memmove+0xc2>
  406652:	1f1e      	subs	r6, r3, #4
  406654:	460d      	mov	r5, r1
  406656:	4674      	mov	r4, lr
  406658:	3c04      	subs	r4, #4
  40665a:	f855 7b04 	ldr.w	r7, [r5], #4
  40665e:	f846 7f04 	str.w	r7, [r6, #4]!
  406662:	2c03      	cmp	r4, #3
  406664:	d8f8      	bhi.n	406658 <memmove+0x84>
  406666:	f1ae 0404 	sub.w	r4, lr, #4
  40666a:	f024 0403 	bic.w	r4, r4, #3
  40666e:	3404      	adds	r4, #4
  406670:	4421      	add	r1, r4
  406672:	4423      	add	r3, r4
  406674:	f002 0203 	and.w	r2, r2, #3
  406678:	b162      	cbz	r2, 406694 <memmove+0xc0>
  40667a:	3b01      	subs	r3, #1
  40667c:	440a      	add	r2, r1
  40667e:	f811 4b01 	ldrb.w	r4, [r1], #1
  406682:	f803 4f01 	strb.w	r4, [r3, #1]!
  406686:	428a      	cmp	r2, r1
  406688:	d1f9      	bne.n	40667e <memmove+0xaa>
  40668a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40668c:	4603      	mov	r3, r0
  40668e:	e7f3      	b.n	406678 <memmove+0xa4>
  406690:	4603      	mov	r3, r0
  406692:	e7f2      	b.n	40667a <memmove+0xa6>
  406694:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406696:	4672      	mov	r2, lr
  406698:	e7ee      	b.n	406678 <memmove+0xa4>
  40669a:	bf00      	nop

0040669c <_realloc_r>:
  40669c:	2900      	cmp	r1, #0
  40669e:	f000 8095 	beq.w	4067cc <_realloc_r+0x130>
  4066a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4066a6:	460d      	mov	r5, r1
  4066a8:	4616      	mov	r6, r2
  4066aa:	b083      	sub	sp, #12
  4066ac:	4680      	mov	r8, r0
  4066ae:	f106 070b 	add.w	r7, r6, #11
  4066b2:	f7ff f937 	bl	405924 <__malloc_lock>
  4066b6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4066ba:	2f16      	cmp	r7, #22
  4066bc:	f02e 0403 	bic.w	r4, lr, #3
  4066c0:	f1a5 0908 	sub.w	r9, r5, #8
  4066c4:	d83c      	bhi.n	406740 <_realloc_r+0xa4>
  4066c6:	2210      	movs	r2, #16
  4066c8:	4617      	mov	r7, r2
  4066ca:	42be      	cmp	r6, r7
  4066cc:	d83d      	bhi.n	40674a <_realloc_r+0xae>
  4066ce:	4294      	cmp	r4, r2
  4066d0:	da43      	bge.n	40675a <_realloc_r+0xbe>
  4066d2:	4bc4      	ldr	r3, [pc, #784]	; (4069e4 <_realloc_r+0x348>)
  4066d4:	6899      	ldr	r1, [r3, #8]
  4066d6:	eb09 0004 	add.w	r0, r9, r4
  4066da:	4288      	cmp	r0, r1
  4066dc:	f000 80b4 	beq.w	406848 <_realloc_r+0x1ac>
  4066e0:	6843      	ldr	r3, [r0, #4]
  4066e2:	f023 0101 	bic.w	r1, r3, #1
  4066e6:	4401      	add	r1, r0
  4066e8:	6849      	ldr	r1, [r1, #4]
  4066ea:	07c9      	lsls	r1, r1, #31
  4066ec:	d54c      	bpl.n	406788 <_realloc_r+0xec>
  4066ee:	f01e 0f01 	tst.w	lr, #1
  4066f2:	f000 809b 	beq.w	40682c <_realloc_r+0x190>
  4066f6:	4631      	mov	r1, r6
  4066f8:	4640      	mov	r0, r8
  4066fa:	f7fe fd47 	bl	40518c <_malloc_r>
  4066fe:	4606      	mov	r6, r0
  406700:	2800      	cmp	r0, #0
  406702:	d03a      	beq.n	40677a <_realloc_r+0xde>
  406704:	f855 3c04 	ldr.w	r3, [r5, #-4]
  406708:	f023 0301 	bic.w	r3, r3, #1
  40670c:	444b      	add	r3, r9
  40670e:	f1a0 0208 	sub.w	r2, r0, #8
  406712:	429a      	cmp	r2, r3
  406714:	f000 8121 	beq.w	40695a <_realloc_r+0x2be>
  406718:	1f22      	subs	r2, r4, #4
  40671a:	2a24      	cmp	r2, #36	; 0x24
  40671c:	f200 8107 	bhi.w	40692e <_realloc_r+0x292>
  406720:	2a13      	cmp	r2, #19
  406722:	f200 80db 	bhi.w	4068dc <_realloc_r+0x240>
  406726:	4603      	mov	r3, r0
  406728:	462a      	mov	r2, r5
  40672a:	6811      	ldr	r1, [r2, #0]
  40672c:	6019      	str	r1, [r3, #0]
  40672e:	6851      	ldr	r1, [r2, #4]
  406730:	6059      	str	r1, [r3, #4]
  406732:	6892      	ldr	r2, [r2, #8]
  406734:	609a      	str	r2, [r3, #8]
  406736:	4629      	mov	r1, r5
  406738:	4640      	mov	r0, r8
  40673a:	f7ff fe4f 	bl	4063dc <_free_r>
  40673e:	e01c      	b.n	40677a <_realloc_r+0xde>
  406740:	f027 0707 	bic.w	r7, r7, #7
  406744:	2f00      	cmp	r7, #0
  406746:	463a      	mov	r2, r7
  406748:	dabf      	bge.n	4066ca <_realloc_r+0x2e>
  40674a:	2600      	movs	r6, #0
  40674c:	230c      	movs	r3, #12
  40674e:	4630      	mov	r0, r6
  406750:	f8c8 3000 	str.w	r3, [r8]
  406754:	b003      	add	sp, #12
  406756:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40675a:	462e      	mov	r6, r5
  40675c:	1be3      	subs	r3, r4, r7
  40675e:	2b0f      	cmp	r3, #15
  406760:	d81e      	bhi.n	4067a0 <_realloc_r+0x104>
  406762:	f8d9 3004 	ldr.w	r3, [r9, #4]
  406766:	f003 0301 	and.w	r3, r3, #1
  40676a:	4323      	orrs	r3, r4
  40676c:	444c      	add	r4, r9
  40676e:	f8c9 3004 	str.w	r3, [r9, #4]
  406772:	6863      	ldr	r3, [r4, #4]
  406774:	f043 0301 	orr.w	r3, r3, #1
  406778:	6063      	str	r3, [r4, #4]
  40677a:	4640      	mov	r0, r8
  40677c:	f7ff f8d8 	bl	405930 <__malloc_unlock>
  406780:	4630      	mov	r0, r6
  406782:	b003      	add	sp, #12
  406784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406788:	f023 0303 	bic.w	r3, r3, #3
  40678c:	18e1      	adds	r1, r4, r3
  40678e:	4291      	cmp	r1, r2
  406790:	db1f      	blt.n	4067d2 <_realloc_r+0x136>
  406792:	68c3      	ldr	r3, [r0, #12]
  406794:	6882      	ldr	r2, [r0, #8]
  406796:	462e      	mov	r6, r5
  406798:	60d3      	str	r3, [r2, #12]
  40679a:	460c      	mov	r4, r1
  40679c:	609a      	str	r2, [r3, #8]
  40679e:	e7dd      	b.n	40675c <_realloc_r+0xc0>
  4067a0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4067a4:	eb09 0107 	add.w	r1, r9, r7
  4067a8:	f002 0201 	and.w	r2, r2, #1
  4067ac:	444c      	add	r4, r9
  4067ae:	f043 0301 	orr.w	r3, r3, #1
  4067b2:	4317      	orrs	r7, r2
  4067b4:	f8c9 7004 	str.w	r7, [r9, #4]
  4067b8:	604b      	str	r3, [r1, #4]
  4067ba:	6863      	ldr	r3, [r4, #4]
  4067bc:	f043 0301 	orr.w	r3, r3, #1
  4067c0:	3108      	adds	r1, #8
  4067c2:	6063      	str	r3, [r4, #4]
  4067c4:	4640      	mov	r0, r8
  4067c6:	f7ff fe09 	bl	4063dc <_free_r>
  4067ca:	e7d6      	b.n	40677a <_realloc_r+0xde>
  4067cc:	4611      	mov	r1, r2
  4067ce:	f7fe bcdd 	b.w	40518c <_malloc_r>
  4067d2:	f01e 0f01 	tst.w	lr, #1
  4067d6:	d18e      	bne.n	4066f6 <_realloc_r+0x5a>
  4067d8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4067dc:	eba9 0a01 	sub.w	sl, r9, r1
  4067e0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4067e4:	f021 0103 	bic.w	r1, r1, #3
  4067e8:	440b      	add	r3, r1
  4067ea:	4423      	add	r3, r4
  4067ec:	4293      	cmp	r3, r2
  4067ee:	db25      	blt.n	40683c <_realloc_r+0x1a0>
  4067f0:	68c2      	ldr	r2, [r0, #12]
  4067f2:	6881      	ldr	r1, [r0, #8]
  4067f4:	4656      	mov	r6, sl
  4067f6:	60ca      	str	r2, [r1, #12]
  4067f8:	6091      	str	r1, [r2, #8]
  4067fa:	f8da 100c 	ldr.w	r1, [sl, #12]
  4067fe:	f856 0f08 	ldr.w	r0, [r6, #8]!
  406802:	1f22      	subs	r2, r4, #4
  406804:	2a24      	cmp	r2, #36	; 0x24
  406806:	60c1      	str	r1, [r0, #12]
  406808:	6088      	str	r0, [r1, #8]
  40680a:	f200 8094 	bhi.w	406936 <_realloc_r+0x29a>
  40680e:	2a13      	cmp	r2, #19
  406810:	d96f      	bls.n	4068f2 <_realloc_r+0x256>
  406812:	6829      	ldr	r1, [r5, #0]
  406814:	f8ca 1008 	str.w	r1, [sl, #8]
  406818:	6869      	ldr	r1, [r5, #4]
  40681a:	f8ca 100c 	str.w	r1, [sl, #12]
  40681e:	2a1b      	cmp	r2, #27
  406820:	f200 80a2 	bhi.w	406968 <_realloc_r+0x2cc>
  406824:	3508      	adds	r5, #8
  406826:	f10a 0210 	add.w	r2, sl, #16
  40682a:	e063      	b.n	4068f4 <_realloc_r+0x258>
  40682c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  406830:	eba9 0a03 	sub.w	sl, r9, r3
  406834:	f8da 1004 	ldr.w	r1, [sl, #4]
  406838:	f021 0103 	bic.w	r1, r1, #3
  40683c:	1863      	adds	r3, r4, r1
  40683e:	4293      	cmp	r3, r2
  406840:	f6ff af59 	blt.w	4066f6 <_realloc_r+0x5a>
  406844:	4656      	mov	r6, sl
  406846:	e7d8      	b.n	4067fa <_realloc_r+0x15e>
  406848:	6841      	ldr	r1, [r0, #4]
  40684a:	f021 0b03 	bic.w	fp, r1, #3
  40684e:	44a3      	add	fp, r4
  406850:	f107 0010 	add.w	r0, r7, #16
  406854:	4583      	cmp	fp, r0
  406856:	da56      	bge.n	406906 <_realloc_r+0x26a>
  406858:	f01e 0f01 	tst.w	lr, #1
  40685c:	f47f af4b 	bne.w	4066f6 <_realloc_r+0x5a>
  406860:	f855 1c08 	ldr.w	r1, [r5, #-8]
  406864:	eba9 0a01 	sub.w	sl, r9, r1
  406868:	f8da 1004 	ldr.w	r1, [sl, #4]
  40686c:	f021 0103 	bic.w	r1, r1, #3
  406870:	448b      	add	fp, r1
  406872:	4558      	cmp	r0, fp
  406874:	dce2      	bgt.n	40683c <_realloc_r+0x1a0>
  406876:	4656      	mov	r6, sl
  406878:	f8da 100c 	ldr.w	r1, [sl, #12]
  40687c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  406880:	1f22      	subs	r2, r4, #4
  406882:	2a24      	cmp	r2, #36	; 0x24
  406884:	60c1      	str	r1, [r0, #12]
  406886:	6088      	str	r0, [r1, #8]
  406888:	f200 808f 	bhi.w	4069aa <_realloc_r+0x30e>
  40688c:	2a13      	cmp	r2, #19
  40688e:	f240 808a 	bls.w	4069a6 <_realloc_r+0x30a>
  406892:	6829      	ldr	r1, [r5, #0]
  406894:	f8ca 1008 	str.w	r1, [sl, #8]
  406898:	6869      	ldr	r1, [r5, #4]
  40689a:	f8ca 100c 	str.w	r1, [sl, #12]
  40689e:	2a1b      	cmp	r2, #27
  4068a0:	f200 808a 	bhi.w	4069b8 <_realloc_r+0x31c>
  4068a4:	3508      	adds	r5, #8
  4068a6:	f10a 0210 	add.w	r2, sl, #16
  4068aa:	6829      	ldr	r1, [r5, #0]
  4068ac:	6011      	str	r1, [r2, #0]
  4068ae:	6869      	ldr	r1, [r5, #4]
  4068b0:	6051      	str	r1, [r2, #4]
  4068b2:	68a9      	ldr	r1, [r5, #8]
  4068b4:	6091      	str	r1, [r2, #8]
  4068b6:	eb0a 0107 	add.w	r1, sl, r7
  4068ba:	ebab 0207 	sub.w	r2, fp, r7
  4068be:	f042 0201 	orr.w	r2, r2, #1
  4068c2:	6099      	str	r1, [r3, #8]
  4068c4:	604a      	str	r2, [r1, #4]
  4068c6:	f8da 3004 	ldr.w	r3, [sl, #4]
  4068ca:	f003 0301 	and.w	r3, r3, #1
  4068ce:	431f      	orrs	r7, r3
  4068d0:	4640      	mov	r0, r8
  4068d2:	f8ca 7004 	str.w	r7, [sl, #4]
  4068d6:	f7ff f82b 	bl	405930 <__malloc_unlock>
  4068da:	e751      	b.n	406780 <_realloc_r+0xe4>
  4068dc:	682b      	ldr	r3, [r5, #0]
  4068de:	6003      	str	r3, [r0, #0]
  4068e0:	686b      	ldr	r3, [r5, #4]
  4068e2:	6043      	str	r3, [r0, #4]
  4068e4:	2a1b      	cmp	r2, #27
  4068e6:	d82d      	bhi.n	406944 <_realloc_r+0x2a8>
  4068e8:	f100 0308 	add.w	r3, r0, #8
  4068ec:	f105 0208 	add.w	r2, r5, #8
  4068f0:	e71b      	b.n	40672a <_realloc_r+0x8e>
  4068f2:	4632      	mov	r2, r6
  4068f4:	6829      	ldr	r1, [r5, #0]
  4068f6:	6011      	str	r1, [r2, #0]
  4068f8:	6869      	ldr	r1, [r5, #4]
  4068fa:	6051      	str	r1, [r2, #4]
  4068fc:	68a9      	ldr	r1, [r5, #8]
  4068fe:	6091      	str	r1, [r2, #8]
  406900:	461c      	mov	r4, r3
  406902:	46d1      	mov	r9, sl
  406904:	e72a      	b.n	40675c <_realloc_r+0xc0>
  406906:	eb09 0107 	add.w	r1, r9, r7
  40690a:	ebab 0b07 	sub.w	fp, fp, r7
  40690e:	f04b 0201 	orr.w	r2, fp, #1
  406912:	6099      	str	r1, [r3, #8]
  406914:	604a      	str	r2, [r1, #4]
  406916:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40691a:	f003 0301 	and.w	r3, r3, #1
  40691e:	431f      	orrs	r7, r3
  406920:	4640      	mov	r0, r8
  406922:	f845 7c04 	str.w	r7, [r5, #-4]
  406926:	f7ff f803 	bl	405930 <__malloc_unlock>
  40692a:	462e      	mov	r6, r5
  40692c:	e728      	b.n	406780 <_realloc_r+0xe4>
  40692e:	4629      	mov	r1, r5
  406930:	f7ff fe50 	bl	4065d4 <memmove>
  406934:	e6ff      	b.n	406736 <_realloc_r+0x9a>
  406936:	4629      	mov	r1, r5
  406938:	4630      	mov	r0, r6
  40693a:	461c      	mov	r4, r3
  40693c:	46d1      	mov	r9, sl
  40693e:	f7ff fe49 	bl	4065d4 <memmove>
  406942:	e70b      	b.n	40675c <_realloc_r+0xc0>
  406944:	68ab      	ldr	r3, [r5, #8]
  406946:	6083      	str	r3, [r0, #8]
  406948:	68eb      	ldr	r3, [r5, #12]
  40694a:	60c3      	str	r3, [r0, #12]
  40694c:	2a24      	cmp	r2, #36	; 0x24
  40694e:	d017      	beq.n	406980 <_realloc_r+0x2e4>
  406950:	f100 0310 	add.w	r3, r0, #16
  406954:	f105 0210 	add.w	r2, r5, #16
  406958:	e6e7      	b.n	40672a <_realloc_r+0x8e>
  40695a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40695e:	f023 0303 	bic.w	r3, r3, #3
  406962:	441c      	add	r4, r3
  406964:	462e      	mov	r6, r5
  406966:	e6f9      	b.n	40675c <_realloc_r+0xc0>
  406968:	68a9      	ldr	r1, [r5, #8]
  40696a:	f8ca 1010 	str.w	r1, [sl, #16]
  40696e:	68e9      	ldr	r1, [r5, #12]
  406970:	f8ca 1014 	str.w	r1, [sl, #20]
  406974:	2a24      	cmp	r2, #36	; 0x24
  406976:	d00c      	beq.n	406992 <_realloc_r+0x2f6>
  406978:	3510      	adds	r5, #16
  40697a:	f10a 0218 	add.w	r2, sl, #24
  40697e:	e7b9      	b.n	4068f4 <_realloc_r+0x258>
  406980:	692b      	ldr	r3, [r5, #16]
  406982:	6103      	str	r3, [r0, #16]
  406984:	696b      	ldr	r3, [r5, #20]
  406986:	6143      	str	r3, [r0, #20]
  406988:	f105 0218 	add.w	r2, r5, #24
  40698c:	f100 0318 	add.w	r3, r0, #24
  406990:	e6cb      	b.n	40672a <_realloc_r+0x8e>
  406992:	692a      	ldr	r2, [r5, #16]
  406994:	f8ca 2018 	str.w	r2, [sl, #24]
  406998:	696a      	ldr	r2, [r5, #20]
  40699a:	f8ca 201c 	str.w	r2, [sl, #28]
  40699e:	3518      	adds	r5, #24
  4069a0:	f10a 0220 	add.w	r2, sl, #32
  4069a4:	e7a6      	b.n	4068f4 <_realloc_r+0x258>
  4069a6:	4632      	mov	r2, r6
  4069a8:	e77f      	b.n	4068aa <_realloc_r+0x20e>
  4069aa:	4629      	mov	r1, r5
  4069ac:	4630      	mov	r0, r6
  4069ae:	9301      	str	r3, [sp, #4]
  4069b0:	f7ff fe10 	bl	4065d4 <memmove>
  4069b4:	9b01      	ldr	r3, [sp, #4]
  4069b6:	e77e      	b.n	4068b6 <_realloc_r+0x21a>
  4069b8:	68a9      	ldr	r1, [r5, #8]
  4069ba:	f8ca 1010 	str.w	r1, [sl, #16]
  4069be:	68e9      	ldr	r1, [r5, #12]
  4069c0:	f8ca 1014 	str.w	r1, [sl, #20]
  4069c4:	2a24      	cmp	r2, #36	; 0x24
  4069c6:	d003      	beq.n	4069d0 <_realloc_r+0x334>
  4069c8:	3510      	adds	r5, #16
  4069ca:	f10a 0218 	add.w	r2, sl, #24
  4069ce:	e76c      	b.n	4068aa <_realloc_r+0x20e>
  4069d0:	692a      	ldr	r2, [r5, #16]
  4069d2:	f8ca 2018 	str.w	r2, [sl, #24]
  4069d6:	696a      	ldr	r2, [r5, #20]
  4069d8:	f8ca 201c 	str.w	r2, [sl, #28]
  4069dc:	3518      	adds	r5, #24
  4069de:	f10a 0220 	add.w	r2, sl, #32
  4069e2:	e762      	b.n	4068aa <_realloc_r+0x20e>
  4069e4:	200065ec 	.word	0x200065ec

004069e8 <__ascii_wctomb>:
  4069e8:	b121      	cbz	r1, 4069f4 <__ascii_wctomb+0xc>
  4069ea:	2aff      	cmp	r2, #255	; 0xff
  4069ec:	d804      	bhi.n	4069f8 <__ascii_wctomb+0x10>
  4069ee:	700a      	strb	r2, [r1, #0]
  4069f0:	2001      	movs	r0, #1
  4069f2:	4770      	bx	lr
  4069f4:	4608      	mov	r0, r1
  4069f6:	4770      	bx	lr
  4069f8:	238a      	movs	r3, #138	; 0x8a
  4069fa:	6003      	str	r3, [r0, #0]
  4069fc:	f04f 30ff 	mov.w	r0, #4294967295
  406a00:	4770      	bx	lr
  406a02:	bf00      	nop

00406a04 <__aeabi_drsub>:
  406a04:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  406a08:	e002      	b.n	406a10 <__adddf3>
  406a0a:	bf00      	nop

00406a0c <__aeabi_dsub>:
  406a0c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00406a10 <__adddf3>:
  406a10:	b530      	push	{r4, r5, lr}
  406a12:	ea4f 0441 	mov.w	r4, r1, lsl #1
  406a16:	ea4f 0543 	mov.w	r5, r3, lsl #1
  406a1a:	ea94 0f05 	teq	r4, r5
  406a1e:	bf08      	it	eq
  406a20:	ea90 0f02 	teqeq	r0, r2
  406a24:	bf1f      	itttt	ne
  406a26:	ea54 0c00 	orrsne.w	ip, r4, r0
  406a2a:	ea55 0c02 	orrsne.w	ip, r5, r2
  406a2e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  406a32:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  406a36:	f000 80e2 	beq.w	406bfe <__adddf3+0x1ee>
  406a3a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  406a3e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  406a42:	bfb8      	it	lt
  406a44:	426d      	neglt	r5, r5
  406a46:	dd0c      	ble.n	406a62 <__adddf3+0x52>
  406a48:	442c      	add	r4, r5
  406a4a:	ea80 0202 	eor.w	r2, r0, r2
  406a4e:	ea81 0303 	eor.w	r3, r1, r3
  406a52:	ea82 0000 	eor.w	r0, r2, r0
  406a56:	ea83 0101 	eor.w	r1, r3, r1
  406a5a:	ea80 0202 	eor.w	r2, r0, r2
  406a5e:	ea81 0303 	eor.w	r3, r1, r3
  406a62:	2d36      	cmp	r5, #54	; 0x36
  406a64:	bf88      	it	hi
  406a66:	bd30      	pophi	{r4, r5, pc}
  406a68:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  406a6c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  406a70:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  406a74:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  406a78:	d002      	beq.n	406a80 <__adddf3+0x70>
  406a7a:	4240      	negs	r0, r0
  406a7c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  406a80:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  406a84:	ea4f 3303 	mov.w	r3, r3, lsl #12
  406a88:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  406a8c:	d002      	beq.n	406a94 <__adddf3+0x84>
  406a8e:	4252      	negs	r2, r2
  406a90:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  406a94:	ea94 0f05 	teq	r4, r5
  406a98:	f000 80a7 	beq.w	406bea <__adddf3+0x1da>
  406a9c:	f1a4 0401 	sub.w	r4, r4, #1
  406aa0:	f1d5 0e20 	rsbs	lr, r5, #32
  406aa4:	db0d      	blt.n	406ac2 <__adddf3+0xb2>
  406aa6:	fa02 fc0e 	lsl.w	ip, r2, lr
  406aaa:	fa22 f205 	lsr.w	r2, r2, r5
  406aae:	1880      	adds	r0, r0, r2
  406ab0:	f141 0100 	adc.w	r1, r1, #0
  406ab4:	fa03 f20e 	lsl.w	r2, r3, lr
  406ab8:	1880      	adds	r0, r0, r2
  406aba:	fa43 f305 	asr.w	r3, r3, r5
  406abe:	4159      	adcs	r1, r3
  406ac0:	e00e      	b.n	406ae0 <__adddf3+0xd0>
  406ac2:	f1a5 0520 	sub.w	r5, r5, #32
  406ac6:	f10e 0e20 	add.w	lr, lr, #32
  406aca:	2a01      	cmp	r2, #1
  406acc:	fa03 fc0e 	lsl.w	ip, r3, lr
  406ad0:	bf28      	it	cs
  406ad2:	f04c 0c02 	orrcs.w	ip, ip, #2
  406ad6:	fa43 f305 	asr.w	r3, r3, r5
  406ada:	18c0      	adds	r0, r0, r3
  406adc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  406ae0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  406ae4:	d507      	bpl.n	406af6 <__adddf3+0xe6>
  406ae6:	f04f 0e00 	mov.w	lr, #0
  406aea:	f1dc 0c00 	rsbs	ip, ip, #0
  406aee:	eb7e 0000 	sbcs.w	r0, lr, r0
  406af2:	eb6e 0101 	sbc.w	r1, lr, r1
  406af6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  406afa:	d31b      	bcc.n	406b34 <__adddf3+0x124>
  406afc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  406b00:	d30c      	bcc.n	406b1c <__adddf3+0x10c>
  406b02:	0849      	lsrs	r1, r1, #1
  406b04:	ea5f 0030 	movs.w	r0, r0, rrx
  406b08:	ea4f 0c3c 	mov.w	ip, ip, rrx
  406b0c:	f104 0401 	add.w	r4, r4, #1
  406b10:	ea4f 5244 	mov.w	r2, r4, lsl #21
  406b14:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  406b18:	f080 809a 	bcs.w	406c50 <__adddf3+0x240>
  406b1c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  406b20:	bf08      	it	eq
  406b22:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  406b26:	f150 0000 	adcs.w	r0, r0, #0
  406b2a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  406b2e:	ea41 0105 	orr.w	r1, r1, r5
  406b32:	bd30      	pop	{r4, r5, pc}
  406b34:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  406b38:	4140      	adcs	r0, r0
  406b3a:	eb41 0101 	adc.w	r1, r1, r1
  406b3e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  406b42:	f1a4 0401 	sub.w	r4, r4, #1
  406b46:	d1e9      	bne.n	406b1c <__adddf3+0x10c>
  406b48:	f091 0f00 	teq	r1, #0
  406b4c:	bf04      	itt	eq
  406b4e:	4601      	moveq	r1, r0
  406b50:	2000      	moveq	r0, #0
  406b52:	fab1 f381 	clz	r3, r1
  406b56:	bf08      	it	eq
  406b58:	3320      	addeq	r3, #32
  406b5a:	f1a3 030b 	sub.w	r3, r3, #11
  406b5e:	f1b3 0220 	subs.w	r2, r3, #32
  406b62:	da0c      	bge.n	406b7e <__adddf3+0x16e>
  406b64:	320c      	adds	r2, #12
  406b66:	dd08      	ble.n	406b7a <__adddf3+0x16a>
  406b68:	f102 0c14 	add.w	ip, r2, #20
  406b6c:	f1c2 020c 	rsb	r2, r2, #12
  406b70:	fa01 f00c 	lsl.w	r0, r1, ip
  406b74:	fa21 f102 	lsr.w	r1, r1, r2
  406b78:	e00c      	b.n	406b94 <__adddf3+0x184>
  406b7a:	f102 0214 	add.w	r2, r2, #20
  406b7e:	bfd8      	it	le
  406b80:	f1c2 0c20 	rsble	ip, r2, #32
  406b84:	fa01 f102 	lsl.w	r1, r1, r2
  406b88:	fa20 fc0c 	lsr.w	ip, r0, ip
  406b8c:	bfdc      	itt	le
  406b8e:	ea41 010c 	orrle.w	r1, r1, ip
  406b92:	4090      	lslle	r0, r2
  406b94:	1ae4      	subs	r4, r4, r3
  406b96:	bfa2      	ittt	ge
  406b98:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  406b9c:	4329      	orrge	r1, r5
  406b9e:	bd30      	popge	{r4, r5, pc}
  406ba0:	ea6f 0404 	mvn.w	r4, r4
  406ba4:	3c1f      	subs	r4, #31
  406ba6:	da1c      	bge.n	406be2 <__adddf3+0x1d2>
  406ba8:	340c      	adds	r4, #12
  406baa:	dc0e      	bgt.n	406bca <__adddf3+0x1ba>
  406bac:	f104 0414 	add.w	r4, r4, #20
  406bb0:	f1c4 0220 	rsb	r2, r4, #32
  406bb4:	fa20 f004 	lsr.w	r0, r0, r4
  406bb8:	fa01 f302 	lsl.w	r3, r1, r2
  406bbc:	ea40 0003 	orr.w	r0, r0, r3
  406bc0:	fa21 f304 	lsr.w	r3, r1, r4
  406bc4:	ea45 0103 	orr.w	r1, r5, r3
  406bc8:	bd30      	pop	{r4, r5, pc}
  406bca:	f1c4 040c 	rsb	r4, r4, #12
  406bce:	f1c4 0220 	rsb	r2, r4, #32
  406bd2:	fa20 f002 	lsr.w	r0, r0, r2
  406bd6:	fa01 f304 	lsl.w	r3, r1, r4
  406bda:	ea40 0003 	orr.w	r0, r0, r3
  406bde:	4629      	mov	r1, r5
  406be0:	bd30      	pop	{r4, r5, pc}
  406be2:	fa21 f004 	lsr.w	r0, r1, r4
  406be6:	4629      	mov	r1, r5
  406be8:	bd30      	pop	{r4, r5, pc}
  406bea:	f094 0f00 	teq	r4, #0
  406bee:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  406bf2:	bf06      	itte	eq
  406bf4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  406bf8:	3401      	addeq	r4, #1
  406bfa:	3d01      	subne	r5, #1
  406bfc:	e74e      	b.n	406a9c <__adddf3+0x8c>
  406bfe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  406c02:	bf18      	it	ne
  406c04:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  406c08:	d029      	beq.n	406c5e <__adddf3+0x24e>
  406c0a:	ea94 0f05 	teq	r4, r5
  406c0e:	bf08      	it	eq
  406c10:	ea90 0f02 	teqeq	r0, r2
  406c14:	d005      	beq.n	406c22 <__adddf3+0x212>
  406c16:	ea54 0c00 	orrs.w	ip, r4, r0
  406c1a:	bf04      	itt	eq
  406c1c:	4619      	moveq	r1, r3
  406c1e:	4610      	moveq	r0, r2
  406c20:	bd30      	pop	{r4, r5, pc}
  406c22:	ea91 0f03 	teq	r1, r3
  406c26:	bf1e      	ittt	ne
  406c28:	2100      	movne	r1, #0
  406c2a:	2000      	movne	r0, #0
  406c2c:	bd30      	popne	{r4, r5, pc}
  406c2e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  406c32:	d105      	bne.n	406c40 <__adddf3+0x230>
  406c34:	0040      	lsls	r0, r0, #1
  406c36:	4149      	adcs	r1, r1
  406c38:	bf28      	it	cs
  406c3a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  406c3e:	bd30      	pop	{r4, r5, pc}
  406c40:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  406c44:	bf3c      	itt	cc
  406c46:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  406c4a:	bd30      	popcc	{r4, r5, pc}
  406c4c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  406c50:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  406c54:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  406c58:	f04f 0000 	mov.w	r0, #0
  406c5c:	bd30      	pop	{r4, r5, pc}
  406c5e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  406c62:	bf1a      	itte	ne
  406c64:	4619      	movne	r1, r3
  406c66:	4610      	movne	r0, r2
  406c68:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  406c6c:	bf1c      	itt	ne
  406c6e:	460b      	movne	r3, r1
  406c70:	4602      	movne	r2, r0
  406c72:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  406c76:	bf06      	itte	eq
  406c78:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  406c7c:	ea91 0f03 	teqeq	r1, r3
  406c80:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  406c84:	bd30      	pop	{r4, r5, pc}
  406c86:	bf00      	nop

00406c88 <__aeabi_ui2d>:
  406c88:	f090 0f00 	teq	r0, #0
  406c8c:	bf04      	itt	eq
  406c8e:	2100      	moveq	r1, #0
  406c90:	4770      	bxeq	lr
  406c92:	b530      	push	{r4, r5, lr}
  406c94:	f44f 6480 	mov.w	r4, #1024	; 0x400
  406c98:	f104 0432 	add.w	r4, r4, #50	; 0x32
  406c9c:	f04f 0500 	mov.w	r5, #0
  406ca0:	f04f 0100 	mov.w	r1, #0
  406ca4:	e750      	b.n	406b48 <__adddf3+0x138>
  406ca6:	bf00      	nop

00406ca8 <__aeabi_i2d>:
  406ca8:	f090 0f00 	teq	r0, #0
  406cac:	bf04      	itt	eq
  406cae:	2100      	moveq	r1, #0
  406cb0:	4770      	bxeq	lr
  406cb2:	b530      	push	{r4, r5, lr}
  406cb4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  406cb8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  406cbc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  406cc0:	bf48      	it	mi
  406cc2:	4240      	negmi	r0, r0
  406cc4:	f04f 0100 	mov.w	r1, #0
  406cc8:	e73e      	b.n	406b48 <__adddf3+0x138>
  406cca:	bf00      	nop

00406ccc <__aeabi_f2d>:
  406ccc:	0042      	lsls	r2, r0, #1
  406cce:	ea4f 01e2 	mov.w	r1, r2, asr #3
  406cd2:	ea4f 0131 	mov.w	r1, r1, rrx
  406cd6:	ea4f 7002 	mov.w	r0, r2, lsl #28
  406cda:	bf1f      	itttt	ne
  406cdc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  406ce0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  406ce4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  406ce8:	4770      	bxne	lr
  406cea:	f092 0f00 	teq	r2, #0
  406cee:	bf14      	ite	ne
  406cf0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  406cf4:	4770      	bxeq	lr
  406cf6:	b530      	push	{r4, r5, lr}
  406cf8:	f44f 7460 	mov.w	r4, #896	; 0x380
  406cfc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  406d00:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  406d04:	e720      	b.n	406b48 <__adddf3+0x138>
  406d06:	bf00      	nop

00406d08 <__aeabi_ul2d>:
  406d08:	ea50 0201 	orrs.w	r2, r0, r1
  406d0c:	bf08      	it	eq
  406d0e:	4770      	bxeq	lr
  406d10:	b530      	push	{r4, r5, lr}
  406d12:	f04f 0500 	mov.w	r5, #0
  406d16:	e00a      	b.n	406d2e <__aeabi_l2d+0x16>

00406d18 <__aeabi_l2d>:
  406d18:	ea50 0201 	orrs.w	r2, r0, r1
  406d1c:	bf08      	it	eq
  406d1e:	4770      	bxeq	lr
  406d20:	b530      	push	{r4, r5, lr}
  406d22:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  406d26:	d502      	bpl.n	406d2e <__aeabi_l2d+0x16>
  406d28:	4240      	negs	r0, r0
  406d2a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  406d2e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  406d32:	f104 0432 	add.w	r4, r4, #50	; 0x32
  406d36:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  406d3a:	f43f aedc 	beq.w	406af6 <__adddf3+0xe6>
  406d3e:	f04f 0203 	mov.w	r2, #3
  406d42:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  406d46:	bf18      	it	ne
  406d48:	3203      	addne	r2, #3
  406d4a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  406d4e:	bf18      	it	ne
  406d50:	3203      	addne	r2, #3
  406d52:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  406d56:	f1c2 0320 	rsb	r3, r2, #32
  406d5a:	fa00 fc03 	lsl.w	ip, r0, r3
  406d5e:	fa20 f002 	lsr.w	r0, r0, r2
  406d62:	fa01 fe03 	lsl.w	lr, r1, r3
  406d66:	ea40 000e 	orr.w	r0, r0, lr
  406d6a:	fa21 f102 	lsr.w	r1, r1, r2
  406d6e:	4414      	add	r4, r2
  406d70:	e6c1      	b.n	406af6 <__adddf3+0xe6>
  406d72:	bf00      	nop

00406d74 <__aeabi_dmul>:
  406d74:	b570      	push	{r4, r5, r6, lr}
  406d76:	f04f 0cff 	mov.w	ip, #255	; 0xff
  406d7a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  406d7e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  406d82:	bf1d      	ittte	ne
  406d84:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  406d88:	ea94 0f0c 	teqne	r4, ip
  406d8c:	ea95 0f0c 	teqne	r5, ip
  406d90:	f000 f8de 	bleq	406f50 <__aeabi_dmul+0x1dc>
  406d94:	442c      	add	r4, r5
  406d96:	ea81 0603 	eor.w	r6, r1, r3
  406d9a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  406d9e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  406da2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  406da6:	bf18      	it	ne
  406da8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  406dac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  406db0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  406db4:	d038      	beq.n	406e28 <__aeabi_dmul+0xb4>
  406db6:	fba0 ce02 	umull	ip, lr, r0, r2
  406dba:	f04f 0500 	mov.w	r5, #0
  406dbe:	fbe1 e502 	umlal	lr, r5, r1, r2
  406dc2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  406dc6:	fbe0 e503 	umlal	lr, r5, r0, r3
  406dca:	f04f 0600 	mov.w	r6, #0
  406dce:	fbe1 5603 	umlal	r5, r6, r1, r3
  406dd2:	f09c 0f00 	teq	ip, #0
  406dd6:	bf18      	it	ne
  406dd8:	f04e 0e01 	orrne.w	lr, lr, #1
  406ddc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  406de0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  406de4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  406de8:	d204      	bcs.n	406df4 <__aeabi_dmul+0x80>
  406dea:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  406dee:	416d      	adcs	r5, r5
  406df0:	eb46 0606 	adc.w	r6, r6, r6
  406df4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  406df8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  406dfc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  406e00:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  406e04:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  406e08:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  406e0c:	bf88      	it	hi
  406e0e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  406e12:	d81e      	bhi.n	406e52 <__aeabi_dmul+0xde>
  406e14:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  406e18:	bf08      	it	eq
  406e1a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  406e1e:	f150 0000 	adcs.w	r0, r0, #0
  406e22:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  406e26:	bd70      	pop	{r4, r5, r6, pc}
  406e28:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  406e2c:	ea46 0101 	orr.w	r1, r6, r1
  406e30:	ea40 0002 	orr.w	r0, r0, r2
  406e34:	ea81 0103 	eor.w	r1, r1, r3
  406e38:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  406e3c:	bfc2      	ittt	gt
  406e3e:	ebd4 050c 	rsbsgt	r5, r4, ip
  406e42:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  406e46:	bd70      	popgt	{r4, r5, r6, pc}
  406e48:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  406e4c:	f04f 0e00 	mov.w	lr, #0
  406e50:	3c01      	subs	r4, #1
  406e52:	f300 80ab 	bgt.w	406fac <__aeabi_dmul+0x238>
  406e56:	f114 0f36 	cmn.w	r4, #54	; 0x36
  406e5a:	bfde      	ittt	le
  406e5c:	2000      	movle	r0, #0
  406e5e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  406e62:	bd70      	pople	{r4, r5, r6, pc}
  406e64:	f1c4 0400 	rsb	r4, r4, #0
  406e68:	3c20      	subs	r4, #32
  406e6a:	da35      	bge.n	406ed8 <__aeabi_dmul+0x164>
  406e6c:	340c      	adds	r4, #12
  406e6e:	dc1b      	bgt.n	406ea8 <__aeabi_dmul+0x134>
  406e70:	f104 0414 	add.w	r4, r4, #20
  406e74:	f1c4 0520 	rsb	r5, r4, #32
  406e78:	fa00 f305 	lsl.w	r3, r0, r5
  406e7c:	fa20 f004 	lsr.w	r0, r0, r4
  406e80:	fa01 f205 	lsl.w	r2, r1, r5
  406e84:	ea40 0002 	orr.w	r0, r0, r2
  406e88:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  406e8c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  406e90:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  406e94:	fa21 f604 	lsr.w	r6, r1, r4
  406e98:	eb42 0106 	adc.w	r1, r2, r6
  406e9c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  406ea0:	bf08      	it	eq
  406ea2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  406ea6:	bd70      	pop	{r4, r5, r6, pc}
  406ea8:	f1c4 040c 	rsb	r4, r4, #12
  406eac:	f1c4 0520 	rsb	r5, r4, #32
  406eb0:	fa00 f304 	lsl.w	r3, r0, r4
  406eb4:	fa20 f005 	lsr.w	r0, r0, r5
  406eb8:	fa01 f204 	lsl.w	r2, r1, r4
  406ebc:	ea40 0002 	orr.w	r0, r0, r2
  406ec0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406ec4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  406ec8:	f141 0100 	adc.w	r1, r1, #0
  406ecc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  406ed0:	bf08      	it	eq
  406ed2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  406ed6:	bd70      	pop	{r4, r5, r6, pc}
  406ed8:	f1c4 0520 	rsb	r5, r4, #32
  406edc:	fa00 f205 	lsl.w	r2, r0, r5
  406ee0:	ea4e 0e02 	orr.w	lr, lr, r2
  406ee4:	fa20 f304 	lsr.w	r3, r0, r4
  406ee8:	fa01 f205 	lsl.w	r2, r1, r5
  406eec:	ea43 0302 	orr.w	r3, r3, r2
  406ef0:	fa21 f004 	lsr.w	r0, r1, r4
  406ef4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406ef8:	fa21 f204 	lsr.w	r2, r1, r4
  406efc:	ea20 0002 	bic.w	r0, r0, r2
  406f00:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  406f04:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  406f08:	bf08      	it	eq
  406f0a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  406f0e:	bd70      	pop	{r4, r5, r6, pc}
  406f10:	f094 0f00 	teq	r4, #0
  406f14:	d10f      	bne.n	406f36 <__aeabi_dmul+0x1c2>
  406f16:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  406f1a:	0040      	lsls	r0, r0, #1
  406f1c:	eb41 0101 	adc.w	r1, r1, r1
  406f20:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  406f24:	bf08      	it	eq
  406f26:	3c01      	subeq	r4, #1
  406f28:	d0f7      	beq.n	406f1a <__aeabi_dmul+0x1a6>
  406f2a:	ea41 0106 	orr.w	r1, r1, r6
  406f2e:	f095 0f00 	teq	r5, #0
  406f32:	bf18      	it	ne
  406f34:	4770      	bxne	lr
  406f36:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  406f3a:	0052      	lsls	r2, r2, #1
  406f3c:	eb43 0303 	adc.w	r3, r3, r3
  406f40:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  406f44:	bf08      	it	eq
  406f46:	3d01      	subeq	r5, #1
  406f48:	d0f7      	beq.n	406f3a <__aeabi_dmul+0x1c6>
  406f4a:	ea43 0306 	orr.w	r3, r3, r6
  406f4e:	4770      	bx	lr
  406f50:	ea94 0f0c 	teq	r4, ip
  406f54:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  406f58:	bf18      	it	ne
  406f5a:	ea95 0f0c 	teqne	r5, ip
  406f5e:	d00c      	beq.n	406f7a <__aeabi_dmul+0x206>
  406f60:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  406f64:	bf18      	it	ne
  406f66:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406f6a:	d1d1      	bne.n	406f10 <__aeabi_dmul+0x19c>
  406f6c:	ea81 0103 	eor.w	r1, r1, r3
  406f70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406f74:	f04f 0000 	mov.w	r0, #0
  406f78:	bd70      	pop	{r4, r5, r6, pc}
  406f7a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  406f7e:	bf06      	itte	eq
  406f80:	4610      	moveq	r0, r2
  406f82:	4619      	moveq	r1, r3
  406f84:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  406f88:	d019      	beq.n	406fbe <__aeabi_dmul+0x24a>
  406f8a:	ea94 0f0c 	teq	r4, ip
  406f8e:	d102      	bne.n	406f96 <__aeabi_dmul+0x222>
  406f90:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  406f94:	d113      	bne.n	406fbe <__aeabi_dmul+0x24a>
  406f96:	ea95 0f0c 	teq	r5, ip
  406f9a:	d105      	bne.n	406fa8 <__aeabi_dmul+0x234>
  406f9c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  406fa0:	bf1c      	itt	ne
  406fa2:	4610      	movne	r0, r2
  406fa4:	4619      	movne	r1, r3
  406fa6:	d10a      	bne.n	406fbe <__aeabi_dmul+0x24a>
  406fa8:	ea81 0103 	eor.w	r1, r1, r3
  406fac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  406fb0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  406fb4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  406fb8:	f04f 0000 	mov.w	r0, #0
  406fbc:	bd70      	pop	{r4, r5, r6, pc}
  406fbe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  406fc2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  406fc6:	bd70      	pop	{r4, r5, r6, pc}

00406fc8 <__aeabi_ddiv>:
  406fc8:	b570      	push	{r4, r5, r6, lr}
  406fca:	f04f 0cff 	mov.w	ip, #255	; 0xff
  406fce:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  406fd2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  406fd6:	bf1d      	ittte	ne
  406fd8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  406fdc:	ea94 0f0c 	teqne	r4, ip
  406fe0:	ea95 0f0c 	teqne	r5, ip
  406fe4:	f000 f8a7 	bleq	407136 <__aeabi_ddiv+0x16e>
  406fe8:	eba4 0405 	sub.w	r4, r4, r5
  406fec:	ea81 0e03 	eor.w	lr, r1, r3
  406ff0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  406ff4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  406ff8:	f000 8088 	beq.w	40710c <__aeabi_ddiv+0x144>
  406ffc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  407000:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  407004:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  407008:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  40700c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  407010:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  407014:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  407018:	ea4f 2600 	mov.w	r6, r0, lsl #8
  40701c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  407020:	429d      	cmp	r5, r3
  407022:	bf08      	it	eq
  407024:	4296      	cmpeq	r6, r2
  407026:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  40702a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40702e:	d202      	bcs.n	407036 <__aeabi_ddiv+0x6e>
  407030:	085b      	lsrs	r3, r3, #1
  407032:	ea4f 0232 	mov.w	r2, r2, rrx
  407036:	1ab6      	subs	r6, r6, r2
  407038:	eb65 0503 	sbc.w	r5, r5, r3
  40703c:	085b      	lsrs	r3, r3, #1
  40703e:	ea4f 0232 	mov.w	r2, r2, rrx
  407042:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  407046:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  40704a:	ebb6 0e02 	subs.w	lr, r6, r2
  40704e:	eb75 0e03 	sbcs.w	lr, r5, r3
  407052:	bf22      	ittt	cs
  407054:	1ab6      	subcs	r6, r6, r2
  407056:	4675      	movcs	r5, lr
  407058:	ea40 000c 	orrcs.w	r0, r0, ip
  40705c:	085b      	lsrs	r3, r3, #1
  40705e:	ea4f 0232 	mov.w	r2, r2, rrx
  407062:	ebb6 0e02 	subs.w	lr, r6, r2
  407066:	eb75 0e03 	sbcs.w	lr, r5, r3
  40706a:	bf22      	ittt	cs
  40706c:	1ab6      	subcs	r6, r6, r2
  40706e:	4675      	movcs	r5, lr
  407070:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  407074:	085b      	lsrs	r3, r3, #1
  407076:	ea4f 0232 	mov.w	r2, r2, rrx
  40707a:	ebb6 0e02 	subs.w	lr, r6, r2
  40707e:	eb75 0e03 	sbcs.w	lr, r5, r3
  407082:	bf22      	ittt	cs
  407084:	1ab6      	subcs	r6, r6, r2
  407086:	4675      	movcs	r5, lr
  407088:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  40708c:	085b      	lsrs	r3, r3, #1
  40708e:	ea4f 0232 	mov.w	r2, r2, rrx
  407092:	ebb6 0e02 	subs.w	lr, r6, r2
  407096:	eb75 0e03 	sbcs.w	lr, r5, r3
  40709a:	bf22      	ittt	cs
  40709c:	1ab6      	subcs	r6, r6, r2
  40709e:	4675      	movcs	r5, lr
  4070a0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4070a4:	ea55 0e06 	orrs.w	lr, r5, r6
  4070a8:	d018      	beq.n	4070dc <__aeabi_ddiv+0x114>
  4070aa:	ea4f 1505 	mov.w	r5, r5, lsl #4
  4070ae:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  4070b2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  4070b6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  4070ba:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  4070be:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  4070c2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  4070c6:	d1c0      	bne.n	40704a <__aeabi_ddiv+0x82>
  4070c8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4070cc:	d10b      	bne.n	4070e6 <__aeabi_ddiv+0x11e>
  4070ce:	ea41 0100 	orr.w	r1, r1, r0
  4070d2:	f04f 0000 	mov.w	r0, #0
  4070d6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4070da:	e7b6      	b.n	40704a <__aeabi_ddiv+0x82>
  4070dc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4070e0:	bf04      	itt	eq
  4070e2:	4301      	orreq	r1, r0
  4070e4:	2000      	moveq	r0, #0
  4070e6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4070ea:	bf88      	it	hi
  4070ec:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4070f0:	f63f aeaf 	bhi.w	406e52 <__aeabi_dmul+0xde>
  4070f4:	ebb5 0c03 	subs.w	ip, r5, r3
  4070f8:	bf04      	itt	eq
  4070fa:	ebb6 0c02 	subseq.w	ip, r6, r2
  4070fe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  407102:	f150 0000 	adcs.w	r0, r0, #0
  407106:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40710a:	bd70      	pop	{r4, r5, r6, pc}
  40710c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  407110:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  407114:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  407118:	bfc2      	ittt	gt
  40711a:	ebd4 050c 	rsbsgt	r5, r4, ip
  40711e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  407122:	bd70      	popgt	{r4, r5, r6, pc}
  407124:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407128:	f04f 0e00 	mov.w	lr, #0
  40712c:	3c01      	subs	r4, #1
  40712e:	e690      	b.n	406e52 <__aeabi_dmul+0xde>
  407130:	ea45 0e06 	orr.w	lr, r5, r6
  407134:	e68d      	b.n	406e52 <__aeabi_dmul+0xde>
  407136:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  40713a:	ea94 0f0c 	teq	r4, ip
  40713e:	bf08      	it	eq
  407140:	ea95 0f0c 	teqeq	r5, ip
  407144:	f43f af3b 	beq.w	406fbe <__aeabi_dmul+0x24a>
  407148:	ea94 0f0c 	teq	r4, ip
  40714c:	d10a      	bne.n	407164 <__aeabi_ddiv+0x19c>
  40714e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  407152:	f47f af34 	bne.w	406fbe <__aeabi_dmul+0x24a>
  407156:	ea95 0f0c 	teq	r5, ip
  40715a:	f47f af25 	bne.w	406fa8 <__aeabi_dmul+0x234>
  40715e:	4610      	mov	r0, r2
  407160:	4619      	mov	r1, r3
  407162:	e72c      	b.n	406fbe <__aeabi_dmul+0x24a>
  407164:	ea95 0f0c 	teq	r5, ip
  407168:	d106      	bne.n	407178 <__aeabi_ddiv+0x1b0>
  40716a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40716e:	f43f aefd 	beq.w	406f6c <__aeabi_dmul+0x1f8>
  407172:	4610      	mov	r0, r2
  407174:	4619      	mov	r1, r3
  407176:	e722      	b.n	406fbe <__aeabi_dmul+0x24a>
  407178:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40717c:	bf18      	it	ne
  40717e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407182:	f47f aec5 	bne.w	406f10 <__aeabi_dmul+0x19c>
  407186:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40718a:	f47f af0d 	bne.w	406fa8 <__aeabi_dmul+0x234>
  40718e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  407192:	f47f aeeb 	bne.w	406f6c <__aeabi_dmul+0x1f8>
  407196:	e712      	b.n	406fbe <__aeabi_dmul+0x24a>

00407198 <__gedf2>:
  407198:	f04f 3cff 	mov.w	ip, #4294967295
  40719c:	e006      	b.n	4071ac <__cmpdf2+0x4>
  40719e:	bf00      	nop

004071a0 <__ledf2>:
  4071a0:	f04f 0c01 	mov.w	ip, #1
  4071a4:	e002      	b.n	4071ac <__cmpdf2+0x4>
  4071a6:	bf00      	nop

004071a8 <__cmpdf2>:
  4071a8:	f04f 0c01 	mov.w	ip, #1
  4071ac:	f84d cd04 	str.w	ip, [sp, #-4]!
  4071b0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4071b4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4071b8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4071bc:	bf18      	it	ne
  4071be:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  4071c2:	d01b      	beq.n	4071fc <__cmpdf2+0x54>
  4071c4:	b001      	add	sp, #4
  4071c6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  4071ca:	bf0c      	ite	eq
  4071cc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  4071d0:	ea91 0f03 	teqne	r1, r3
  4071d4:	bf02      	ittt	eq
  4071d6:	ea90 0f02 	teqeq	r0, r2
  4071da:	2000      	moveq	r0, #0
  4071dc:	4770      	bxeq	lr
  4071de:	f110 0f00 	cmn.w	r0, #0
  4071e2:	ea91 0f03 	teq	r1, r3
  4071e6:	bf58      	it	pl
  4071e8:	4299      	cmppl	r1, r3
  4071ea:	bf08      	it	eq
  4071ec:	4290      	cmpeq	r0, r2
  4071ee:	bf2c      	ite	cs
  4071f0:	17d8      	asrcs	r0, r3, #31
  4071f2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4071f6:	f040 0001 	orr.w	r0, r0, #1
  4071fa:	4770      	bx	lr
  4071fc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  407200:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407204:	d102      	bne.n	40720c <__cmpdf2+0x64>
  407206:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40720a:	d107      	bne.n	40721c <__cmpdf2+0x74>
  40720c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  407210:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407214:	d1d6      	bne.n	4071c4 <__cmpdf2+0x1c>
  407216:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40721a:	d0d3      	beq.n	4071c4 <__cmpdf2+0x1c>
  40721c:	f85d 0b04 	ldr.w	r0, [sp], #4
  407220:	4770      	bx	lr
  407222:	bf00      	nop

00407224 <__aeabi_cdrcmple>:
  407224:	4684      	mov	ip, r0
  407226:	4610      	mov	r0, r2
  407228:	4662      	mov	r2, ip
  40722a:	468c      	mov	ip, r1
  40722c:	4619      	mov	r1, r3
  40722e:	4663      	mov	r3, ip
  407230:	e000      	b.n	407234 <__aeabi_cdcmpeq>
  407232:	bf00      	nop

00407234 <__aeabi_cdcmpeq>:
  407234:	b501      	push	{r0, lr}
  407236:	f7ff ffb7 	bl	4071a8 <__cmpdf2>
  40723a:	2800      	cmp	r0, #0
  40723c:	bf48      	it	mi
  40723e:	f110 0f00 	cmnmi.w	r0, #0
  407242:	bd01      	pop	{r0, pc}

00407244 <__aeabi_dcmpeq>:
  407244:	f84d ed08 	str.w	lr, [sp, #-8]!
  407248:	f7ff fff4 	bl	407234 <__aeabi_cdcmpeq>
  40724c:	bf0c      	ite	eq
  40724e:	2001      	moveq	r0, #1
  407250:	2000      	movne	r0, #0
  407252:	f85d fb08 	ldr.w	pc, [sp], #8
  407256:	bf00      	nop

00407258 <__aeabi_dcmplt>:
  407258:	f84d ed08 	str.w	lr, [sp, #-8]!
  40725c:	f7ff ffea 	bl	407234 <__aeabi_cdcmpeq>
  407260:	bf34      	ite	cc
  407262:	2001      	movcc	r0, #1
  407264:	2000      	movcs	r0, #0
  407266:	f85d fb08 	ldr.w	pc, [sp], #8
  40726a:	bf00      	nop

0040726c <__aeabi_dcmple>:
  40726c:	f84d ed08 	str.w	lr, [sp, #-8]!
  407270:	f7ff ffe0 	bl	407234 <__aeabi_cdcmpeq>
  407274:	bf94      	ite	ls
  407276:	2001      	movls	r0, #1
  407278:	2000      	movhi	r0, #0
  40727a:	f85d fb08 	ldr.w	pc, [sp], #8
  40727e:	bf00      	nop

00407280 <__aeabi_dcmpge>:
  407280:	f84d ed08 	str.w	lr, [sp, #-8]!
  407284:	f7ff ffce 	bl	407224 <__aeabi_cdrcmple>
  407288:	bf94      	ite	ls
  40728a:	2001      	movls	r0, #1
  40728c:	2000      	movhi	r0, #0
  40728e:	f85d fb08 	ldr.w	pc, [sp], #8
  407292:	bf00      	nop

00407294 <__aeabi_dcmpgt>:
  407294:	f84d ed08 	str.w	lr, [sp, #-8]!
  407298:	f7ff ffc4 	bl	407224 <__aeabi_cdrcmple>
  40729c:	bf34      	ite	cc
  40729e:	2001      	movcc	r0, #1
  4072a0:	2000      	movcs	r0, #0
  4072a2:	f85d fb08 	ldr.w	pc, [sp], #8
  4072a6:	bf00      	nop

004072a8 <__aeabi_dcmpun>:
  4072a8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4072ac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4072b0:	d102      	bne.n	4072b8 <__aeabi_dcmpun+0x10>
  4072b2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4072b6:	d10a      	bne.n	4072ce <__aeabi_dcmpun+0x26>
  4072b8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4072bc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4072c0:	d102      	bne.n	4072c8 <__aeabi_dcmpun+0x20>
  4072c2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4072c6:	d102      	bne.n	4072ce <__aeabi_dcmpun+0x26>
  4072c8:	f04f 0000 	mov.w	r0, #0
  4072cc:	4770      	bx	lr
  4072ce:	f04f 0001 	mov.w	r0, #1
  4072d2:	4770      	bx	lr

004072d4 <__aeabi_d2iz>:
  4072d4:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4072d8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4072dc:	d215      	bcs.n	40730a <__aeabi_d2iz+0x36>
  4072de:	d511      	bpl.n	407304 <__aeabi_d2iz+0x30>
  4072e0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4072e4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4072e8:	d912      	bls.n	407310 <__aeabi_d2iz+0x3c>
  4072ea:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4072ee:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4072f2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4072f6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4072fa:	fa23 f002 	lsr.w	r0, r3, r2
  4072fe:	bf18      	it	ne
  407300:	4240      	negne	r0, r0
  407302:	4770      	bx	lr
  407304:	f04f 0000 	mov.w	r0, #0
  407308:	4770      	bx	lr
  40730a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40730e:	d105      	bne.n	40731c <__aeabi_d2iz+0x48>
  407310:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  407314:	bf08      	it	eq
  407316:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40731a:	4770      	bx	lr
  40731c:	f04f 0000 	mov.w	r0, #0
  407320:	4770      	bx	lr
  407322:	bf00      	nop
  407324:	2c78254f 	.word	0x2c78254f
  407328:	00237825 	.word	0x00237825
  40732c:	72617453 	.word	0x72617453
  407330:	72742074 	.word	0x72742074
  407334:	66736e61 	.word	0x66736e61
  407338:	00007265 	.word	0x00007265
  40733c:	65696c43 	.word	0x65696c43
  407340:	6e20746e 	.word	0x6e20746e
  407344:	6320746f 	.word	0x6320746f
  407348:	656e6e6f 	.word	0x656e6e6f
  40734c:	64657463 	.word	0x64657463
  407350:	00000000 	.word	0x00000000
  407354:	6d6d6f43 	.word	0x6d6d6f43
  407358:	20646e61 	.word	0x20646e61
  40735c:	6c696166 	.word	0x6c696166
  407360:	00006465 	.word	0x00006465
  407364:	656e6f4e 	.word	0x656e6f4e
  407368:	00000000 	.word	0x00000000
  40736c:	0001c200 	.word	0x0001c200
  407370:	000000c0 	.word	0x000000c0
  407374:	00000800 	.word	0x00000800
	...
  407384:	20746573 	.word	0x20746573
  407388:	74737973 	.word	0x74737973
  40738c:	632e6d65 	.word	0x632e6d65
  407390:	652e646d 	.word	0x652e646d
  407394:	206f6863 	.word	0x206f6863
  407398:	0d66666f 	.word	0x0d66666f
  40739c:	0000000a 	.word	0x0000000a
  4073a0:	20746573 	.word	0x20746573
  4073a4:	74726175 	.word	0x74726175
  4073a8:	6f6c662e 	.word	0x6f6c662e
  4073ac:	20302077 	.word	0x20302077
  4073b0:	0a0d6e6f 	.word	0x0a0d6e6f
  4073b4:	00000000 	.word	0x00000000
  4073b8:	20746573 	.word	0x20746573
  4073bc:	63207562 	.word	0x63207562
  4073c0:	31207220 	.word	0x31207220
  4073c4:	30303030 	.word	0x30303030
  4073c8:	00000a0d 	.word	0x00000a0d
  4073cc:	20746573 	.word	0x20746573
  4073d0:	74737973 	.word	0x74737973
  4073d4:	692e6d65 	.word	0x692e6d65
  4073d8:	6369646e 	.word	0x6369646e
  4073dc:	726f7461 	.word	0x726f7461
  4073e0:	6970672e 	.word	0x6970672e
  4073e4:	6c77206f 	.word	0x6c77206f
  4073e8:	32206e61 	.word	0x32206e61
  4073ec:	000a0d30 	.word	0x000a0d30
  4073f0:	20746573 	.word	0x20746573
  4073f4:	74737973 	.word	0x74737973
  4073f8:	692e6d65 	.word	0x692e6d65
  4073fc:	6369646e 	.word	0x6369646e
  407400:	726f7461 	.word	0x726f7461
  407404:	6970672e 	.word	0x6970672e
  407408:	656e206f 	.word	0x656e206f
  40740c:	726f7774 	.word	0x726f7774
  407410:	3831206b 	.word	0x3831206b
  407414:	00000a0d 	.word	0x00000a0d
  407418:	20746573 	.word	0x20746573
  40741c:	74737973 	.word	0x74737973
  407420:	692e6d65 	.word	0x692e6d65
  407424:	6369646e 	.word	0x6369646e
  407428:	726f7461 	.word	0x726f7461
  40742c:	6970672e 	.word	0x6970672e
  407430:	6f73206f 	.word	0x6f73206f
  407434:	70617466 	.word	0x70617466
  407438:	0d313220 	.word	0x0d313220
  40743c:	0000000a 	.word	0x0000000a
  407440:	20746573 	.word	0x20746573
  407444:	74737973 	.word	0x74737973
  407448:	632e6d65 	.word	0x632e6d65
  40744c:	672e646d 	.word	0x672e646d
  407450:	206f6970 	.word	0x206f6970
  407454:	0a0d3631 	.word	0x0a0d3631
  407458:	00000000 	.word	0x00000000
  40745c:	20746573 	.word	0x20746573
  407460:	6e616c77 	.word	0x6e616c77
  407464:	74656e2e 	.word	0x74656e2e
  407468:	6b726f77 	.word	0x6b726f77
  40746c:	6174732e 	.word	0x6174732e
  407470:	5f737574 	.word	0x5f737574
  407474:	6f697067 	.word	0x6f697067
  407478:	0d343120 	.word	0x0d343120
  40747c:	0000000a 	.word	0x0000000a
  407480:	65766173 	.word	0x65766173
  407484:	00000a0d 	.word	0x00000a0d
  407488:	75746573 	.word	0x75746573
  40748c:	65772070 	.word	0x65772070
  407490:	000a0d62 	.word	0x000a0d62
  407494:	706d7562 	.word	0x706d7562
  407498:	00000a0d 	.word	0x00000a0d
  40749c:	20706f66 	.word	0x20706f66
  4074a0:	74736574 	.word	0x74736574
  4074a4:	7478742e 	.word	0x7478742e
  4074a8:	00000a0d 	.word	0x00000a0d
  4074ac:	20747366 	.word	0x20747366
  4074b0:	74736574 	.word	0x74736574
  4074b4:	7478742e 	.word	0x7478742e
  4074b8:	00000a0d 	.word	0x00000a0d
  4074bc:	64616572 	.word	0x64616572
  4074c0:	00000020 	.word	0x00000020
  4074c4:	72746550 	.word	0x72746550
  4074c8:	00007361 	.word	0x00007361

004074cc <_global_impure_ptr>:
  4074cc:	200061c0 00464e49 00666e69 004e414e     .a. INF.inf.NAN.
  4074dc:	006e616e 33323130 37363534 42413938     nan.0123456789AB
  4074ec:	46454443 00000000 33323130 37363534     CDEF....01234567
  4074fc:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  40750c:	0000296c 00000030                       l)..0...

00407514 <blanks.7223>:
  407514:	20202020 20202020 20202020 20202020                     

00407524 <zeroes.7224>:
  407524:	30303030 30303030 30303030 30303030     0000000000000000
  407534:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
  407544:	00000000                                ....

00407548 <__mprec_bigtens>:
  407548:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  407558:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  407568:	7f73bf3c 75154fdd                       <.s..O.u

00407570 <__mprec_tens>:
  407570:	00000000 3ff00000 00000000 40240000     .......?......$@
  407580:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  407590:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  4075a0:	00000000 412e8480 00000000 416312d0     .......A......cA
  4075b0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  4075c0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  4075d0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  4075e0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  4075f0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  407600:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  407610:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  407620:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  407630:	79d99db4 44ea7843                       ...yCx.D

00407638 <p05.6055>:
  407638:	00000005 00000019 0000007d 00000043     ........}...C...
  407648:	49534f50 00000058 0000002e              POSIX.......

00407654 <_ctype_>:
  407654:	20202000 20202020 28282020 20282828     .         ((((( 
  407664:	20202020 20202020 20202020 20202020                     
  407674:	10108820 10101010 10101010 10101010      ...............
  407684:	04040410 04040404 10040404 10101010     ................
  407694:	41411010 41414141 01010101 01010101     ..AAAAAA........
  4076a4:	01010101 01010101 01010101 10101010     ................
  4076b4:	42421010 42424242 02020202 02020202     ..BBBBBB........
  4076c4:	02020202 02020202 02020202 10101010     ................
  4076d4:	00000020 00000000 00000000 00000000      ...............
	...

00407758 <_init>:
  407758:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40775a:	bf00      	nop
  40775c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40775e:	bc08      	pop	{r3}
  407760:	469e      	mov	lr, r3
  407762:	4770      	bx	lr

00407764 <__init_array_start>:
  407764:	00404195 	.word	0x00404195

00407768 <__frame_dummy_init_array_entry>:
  407768:	004000f1                                ..@.

0040776c <_fini>:
  40776c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40776e:	bf00      	nop
  407770:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407772:	bc08      	pop	{r3}
  407774:	469e      	mov	lr, r3
  407776:	4770      	bx	lr

00407778 <__fini_array_start>:
  407778:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <buffer_program>:
2000000c:	303a 3032 3030 3030 3034 3430 4230 0d41     :020000040040BA.
2000001c:	3a0a 3031 3030 3030 3030 3030 3533 3030     .:10000000003500
2000002c:	3032 3138 4330 3034 3030 3934 4430 3034     20810C4000490D40
2000003c:	3030 3934 4430 3034 3030 3241 0a0d 313a     00490D4000A2..:1
2000004c:	3030 3130 3030 3430 3039 3444 3030 3430     0001000490D40004
2000005c:	3039 3444 3030 3430 3039 3444 3030 3030     90D4000490D40000
2000006c:	3030 3030 3030 3130 0d45 3a0a 3031 3030     00000001E..:1000
2000007c:	3032 3030 3030 3030 3030 3030 3030 3030     2000000000000000
2000008c:	3030 3030 3030 3030 3030 3030 3934 4430     000000000000490D
2000009c:	3034 3030 4133 0a0d 313a 3030 3330 3030     40003A..:1000300
200000ac:	3430 3039 3444 3030 3030 3030 3030 3030     0490D40000000000
200000bc:	3430 3039 3444 3030 3430 3039 3444 3030     0490D4000490D400
200000cc:	4630 0d45 3a0a 3031 3030 3034 3030 3934     0FE..:1000400049
200000dc:	4430 3034 3030 3934 4430 3034 3030 3934     0D4000490D400049
200000ec:	4430 3034 3030 3934 4430 3034 3030 3835     0D4000490D400058
200000fc:	0a0d 313a 3030 3530 3030 3430 3039 3444     ..:10005000490D4
2000010c:	3030 3430 3039 3444 3030 3430 3039 3444     000490D4000490D4
2000011c:	3030 3030 3030 3030 3030 4430 0d45 3a0a     00000000000DE..:
2000012c:	3031 3030 3036 3030 3934 4430 3034 3030     10006000490D4000
2000013c:	3934 4430 3034 3030 3030 3030 3030 3030     490D400000000000
2000014c:	4441 3230 3034 3030 3537 0a0d 313a 3030     AD02400075..:100
2000015c:	3730 3030 4330 3035 3432 3030 3030 3030     07000C5024000000
2000016c:	3030 3030 3430 3039 3444 3030 3430 3039     00000490D4000490
2000017c:	3444 3030 3430 0d44 3a0a 3031 3030 3038     D40004D..:100080
2000018c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000019c:	3030 3934 4430 3034 3030 3934 4430 3034     00490D4000490D40
200001ac:	3030 3434 0a0d 313a 3030 3930 3030 3430     0044..:100090004
200001bc:	3039 3444 3030 3430 3039 3444 3030 3430     90D4000490D40004
200001cc:	3039 3444 3030 3430 3039 3444 3030 3030     90D4000490D40000
200001dc:	0d38 3a0a 3031 3030 3041 3030 3934 4430     8..:1000A000490D
200001ec:	3034 3030 3934 4430 3034 3030 3030 3030     4000490D40000000
200001fc:	3030 3030 3030 3030 3030 3030 3432 0a0d     00000000000024..
2000020c:	313a 3030 4230 3030 3030 3030 3030 3030     :1000B0000000000
2000021c:	3430 3039 3444 3030 3430 3039 3444 3030     0490D4000490D400
2000022c:	3430 3039 3444 3030 3730 0d45 3a0a 3031     0490D40007E..:10
2000023c:	3030 3043 3030 3934 4430 3034 3030 3934     00C000490D400049
2000024c:	4430 3034 3030 3934 4430 3034 3030 3031     0D4000490D400010
2000025c:	3542 3530 4334 3835 0a0d 313a 3030 4430     B5054C58..:1000D
2000026c:	3030 3230 3733 3338 4233 3039 3434 3142     000237833B9044B1
2000027c:	4233 3031 3434 4138 4646 3033 3830 3030     3B10448AFF300800
2000028c:	3231 4633 0d34 3a0a 3031 3030 3045 3030     123F4..:1000E000
2000029c:	3332 3037 3031 4442 4333 3430 3030 3032     237010BD3C040020
200002ac:	3030 3030 3030 3030 3838 3731 3034 3030     0000000088174000
200002bc:	3137 0a0d 313a 3030 4630 3030 3030 3443     71..:1000F0000C4
200002cc:	3442 4233 3031 3443 3038 3444 3139 4230     B43B10C480D4910B
200002dc:	4135 4646 3033 3830 3030 3443 4438 0d30     5AFF300800C48D0.
200002ec:	3a0a 3031 3130 3030 3030 3330 3836 3332     .:10010000036823
200002fc:	3942 3031 4442 4130 3834 3330 3836 3333     B910BD0A48036833
2000030c:	3942 3037 3734 3930 4234 3732 0a0d 313a     B97047094B27..:1
2000031c:	3030 3131 3030 3030 3230 4642 4437 4230     0011000002BF7D0B
2000032c:	4544 3138 3430 3130 3438 3037 3436 3042     DE810401847064B0
2000033c:	3230 4642 4435 3530 0d38 3a0a 3031 3130     02BF5D058..:1001
2000034c:	3032 3030 3831 3734 3030 4642 3030 3030     2000184700BF0000
2000035c:	3030 3030 3838 3731 3034 3030 3034 3430     0000881740004004
2000036c:	3030 3032 4536 0a0d 313a 3030 3331 3030     00206E..:1001300
2000037c:	3830 3138 3437 3030 3030 3030 3030 3030     0881740000000000
2000038c:	3830 4230 3835 4234 3030 4130 3746 3638     080B584B000AF786
2000039c:	4630 0d30 3a0a 3031 3130 3034 3030 3933     0F0..:1001400039
200003ac:	3036 3837 3836 4332 4234 3839 3734 3846     6078682C4B9847F8
200003bc:	3036 3837 3836 4232 4234 3839 3734 3335     6078682B4B984753
200003cc:	0a0d 313a 3030 3531 3030 3030 3432 4636     ..:100150000246F
200003dc:	3642 3138 3433 4630 3642 4630 3642 3038     B681340FB60FB680
200003ec:	3230 3342 4443 3030 3230 3833 0d39 3a0a     02B3CD0002389..:
200003fc:	3031 3130 3036 3030 4242 3036 3433 3045     10016000BB6034E0
2000040c:	3632 4134 4242 3836 4231 3130 3331 3434     264ABB681B011344
2000041c:	4131 3836 4233 3836 3533 0a0d 313a 3030     1A683B6835..:100
2000042c:	3731 3030 3930 3441 3232 4436 3231 3432     170009A4226D1224
2000043c:	4241 3642 3138 3042 3131 3433 3034 3334     ABB681B011344043
2000044c:	3133 3641 4638 0d31 3a0a 3031 3130 3038     31A68F1..:100180
2000045c:	3030 4246 3836 3331 3034 3030 4232 4331     00FB681340002B1C
2000046c:	3044 4431 4134 4242 3836 4231 3130 3331     D01D4ABB681B0113
2000047c:	3434 3541 0a0d 313a 3030 3931 3030 3030     44A5..:100190000
2000048c:	3343 3133 3642 3138 3441 4239 3641 3138     C331B681A49BA681
2000049c:	3032 3031 3441 3134 3630 3138 3438 4439     2010A4410681849D
200004ac:	0d45 3a0a 3031 3130 3041 3030 4142 3836     E..:1001A000BA68
200004bc:	3231 3130 4130 3434 3430 3233 3231 3836     12010A4404321268
200004cc:	3131 3634 3839 3734 3431 4134 3838 0a0d     11469847144A88..
200004dc:	313a 3030 4231 3030 4230 3642 3138 3042     :1001B000BB681B0
200004ec:	3131 3433 3034 3334 3133 3642 4438 3442     1134404331B68DB4
200004fc:	4633 3641 3138 3433 3130 0d43 3a0a 3031     3FA6813401C..:10
2000050c:	3130 3043 3030 4246 3036 4242 3836 3130     01C000FB60BB6801
2000051c:	3333 4242 3036 4242 3836 3630 4232 3330     33BB60BB68062B03
2000052c:	3844 4246 3836 3044 0a0d 313a 3030 4431     D8FB68D0..:1001D
2000053c:	3030 3030 3230 4342 4437 3031 4530 3030     000002BC7D100E00
2000054c:	4230 3046 3441 3142 3642 3038 3230 3042     0BF0A4B1B68002B0
2000055c:	4437 4530 0d33 3a0a 3031 3130 3045 3030     7D0E3..:1001E000
2000056c:	3930 4234 4231 3836 3030 4232 3330 3044     094B1B68002B03D0
2000057c:	3730 4234 4231 3836 3837 3836 3839 3734     074B1B6878689847
2000058c:	3641 0a0d 313a 3030 4631 3030 3030 4230     A6..:1001F00000B
2000059c:	3146 3330 4237 3444 3836 4230 4544 3046     F1037BD4680BDEF0
200005ac:	3436 3030 3030 3035 3437 3030 3330 0d38     640000507400038.
200005bc:	3a0a 3031 3230 3030 3030 3835 3430 3030     .:10020000580400
200005cc:	3032 3444 3430 3030 3032 4343 3430 3030     20D4040020CC0400
200005dc:	3032 3038 3542 3638 3042 4631 0a0d 313a     2080B586B01F..:1
200005ec:	3030 3132 3030 3030 4130 4646 3638 4230     002100000AFF860B
200005fc:	3639 3730 3641 3330 3642 3230 3431 3142     9607A603B60214B1
2000060c:	3642 3038 3236 3242 0d39 3a0a 3031 3230     B68062B29..:1002
2000061c:	3032 3030 3130 3944 3130 3332 3833 3045     200001D9012338E0
2000062c:	3030 3332 4246 3537 3131 3045 4246 4437     0023FB7511E0FB7D
2000063c:	4231 3130 3041 0a0d 313a 3030 3332 3030     1B01A0..:1002300
2000064c:	3130 3443 3141 3433 3334 3642 3331 3642     01C4A13443B613B6
2000065c:	3139 3641 4238 3642 3938 3441 3032 4434     91A68BB689A4204D
2000066c:	3631 0d42 3a0a 3031 3230 3034 3030 4233     16B..:100240003B
2000067c:	3936 4135 3836 4237 3836 4139 3234 3830     695A687B689A4208
2000068c:	3044 4246 4437 3130 3333 4246 3537 3539     D0FB7D0133FB7595
2000069c:	0a0d 313a 3030 3532 3030 4630 3741 3144     ..:10025000FA7D1
200006ac:	3433 3142 3642 3938 3441 4532 4438 3039     34B1B689A42E8D90
200006bc:	4530 3030 4230 3346 3642 3639 0d36 3a0a     0E000BF3B6966..:
200006cc:	3031 3230 3036 3030 4142 3836 4131 3036     10026000BA681A60
200006dc:	4233 3936 4137 3836 4135 3036 4233 3936     3B697A685A603B69
200006ec:	4133 3836 4139 3036 3237 0a0d 313a 3030     3A689A6072..:100
200006fc:	3732 3030 3330 3642 3339 3641 4441 3641     270003B693A6ADA6
2000070c:	4630 3741 3044 3439 3142 3642 3038 3331     0FA7D094B1B68013
2000071c:	3933 3441 3932 0d45 3a0a 3031 3230 3038     39A429E..:100280
2000072c:	3030 3430 3144 3730 4234 4231 3836 3130     0004D1074B1B6801
2000073c:	3333 3530 4134 3331 3036 4133 3836 3937     33054A13603A6879
2000074c:	3836 4234 0a0d 313a 3030 3932 3030 4630     684B..:10029000F
2000075c:	3638 3038 3435 3942 3438 3037 3230 3133     868054B984700231
2000076c:	3438 3136 3338 4237 3444 3836 4230 4244     8461837BD4680BDB
2000077c:	0d46 3a0a 3031 3230 3041 3030 3843 3430     F..:1002A000C804
2000078c:	3030 3032 3835 3430 3030 3032 4236 3630     0020580400206B06
2000079c:	3034 3030 3038 3542 3030 4641 3135 0a0d     400080B500AF51..
200007ac:	313a 3030 4232 3030 3030 3242 3031 3432     :1002B0000B21024
200007bc:	3038 3432 3942 3438 3037 4230 3846 4230     8024B984700BF80B
200007cc:	3044 3030 3045 3445 3430 0d34 3a0a 3031     D000E0E4044..:10
200007dc:	3230 3043 3030 3933 3130 3034 3030 3038     02C0003901400080
200007ec:	3542 3030 4641 4330 3132 3230 3834 3230     B500AF0C21024802
200007fc:	4234 3839 3734 4432 0a0d 313a 3030 4432     4B98472D..:1002D
2000080c:	3030 3030 4230 3846 4230 3044 3130 3030     00000BF80BD00100
2000081c:	3445 3330 3039 3431 3030 3830 4230 3835     E403901400080B58
2000082c:	4232 4530 0d33 3a0a 3031 3230 3045 3030     2B0E3..:1002E000
2000083c:	3030 4641 3837 3036 4237 3836 3730 4232     00AF78607B68072B
2000084c:	3133 3844 3130 3241 3235 3846 3332 3046     31D801A252F823F0
2000085c:	3936 0a0d 313a 3030 4632 3030 3430 3044     69..:1002F0004D0
2000086c:	3433 3030 3130 3031 3433 3030 3130 3039     3400011034000190
2000087c:	3433 3030 3230 3031 3433 3030 3530 0d41     34000210340005A.
2000088c:	3a0a 3031 3330 3030 3030 3932 3330 3034     .:10030000290340
2000089c:	3030 3133 3330 3034 3030 3933 3330 3034     0031034000390340
200008ac:	3030 3334 3330 3034 3030 4230 0a0d 313a     00430340000B..:1
200008bc:	3030 3133 3030 3030 3230 3130 3431 3942     00310000020114B9
200008cc:	3438 3137 4541 3030 3231 3030 3446 3942     8471AE001200F4B9
200008dc:	3438 3137 4536 3330 0d38 3a0a 3031 3330     84716E038..:1003
200008ec:	3032 3030 3030 3032 4530 4234 3839 3734     200000200E4B9847
200008fc:	3231 3045 3031 3032 4330 4234 3839 3734     12E010200C4B9847
2000090c:	4530 3045 4632 0a0d 313a 3030 3333 3030     0EE02F..:1003300
2000091c:	3230 3230 3030 3441 3942 3438 3037 4541     020200A4B98470AE
2000092c:	3330 3245 3031 3230 3030 3438 3942 3438     03E210020084B984
2000093c:	4137 0d45 3a0a 3031 3330 3034 3030 3530     7AE..:1003400005
2000094c:	3045 4533 3132 3130 3032 3630 4234 3839     E03E210120064B98
2000095c:	3734 3030 3045 3030 4642 3030 4642 4142     4700E000BF00BFBA
2000096c:	0a0d 313a 3030 3533 3030 3030 3338 4237     ..:100350000837B
2000097c:	3444 3836 4230 3044 4230 3946 3044 3437     D4680BD00BF9D074
2000098c:	3030 3030 3039 3438 3030 3230 0d41 3a0a     000090840002A..:
2000099c:	3031 3330 3036 3030 3937 3830 3034 3030     1003600079084000
200009ac:	3038 3542 3238 3042 3030 4641 3837 3036     80B582B000AF7860
200009bc:	4237 3836 3730 4232 3943 0a0d 313a 3030     7B68072BC9..:100
200009cc:	3733 3030 3230 4436 3038 4131 3532 4632     3700026D801A252F
200009dc:	3238 4633 3930 3039 3433 3030 3930 3044     823F0990340009D0
200009ec:	3433 3030 4330 0d33 3a0a 3031 3330 3038     34000C3..:100380
200009fc:	3030 4439 3330 3034 3030 4641 3330 3034     009D034000AF0340
20000a0c:	3030 4641 3330 3034 3030 4641 3330 3034     00AF034000AF0340
20000a1c:	3030 3742 0a0d 313a 3030 3933 3030 4130     00B7..:10039000A
20000a2c:	3046 3433 3030 4130 3046 3433 3030 3030     F034000AF0340000
20000a3c:	3231 3133 4532 3030 3442 3942 3438 3237     12312E00B4B98472
20000a4c:	0d45 3a0a 3031 3330 3041 3030 3330 3634     E..:1003A0000346
20000a5c:	3030 4232 3431 4642 3130 3332 3030 3332     002B14BF01230023
20000a6c:	4244 3242 3930 3045 3830 4234 3646 0a0d     DBB209E0084BF6..
20000a7c:	313a 3030 4233 3030 3930 3438 3037 3433     :1003B0009847034
20000a8c:	3036 3230 3142 4234 3046 3231 3033 3230     6002B14BF0123002
20000a9c:	4433 4242 3032 4530 3630 0d33 3a0a 3031     3DBB200E063..:10
20000aac:	3330 3043 3030 3030 3332 3831 3634 3830     03C0000023184608
20000abc:	3733 4442 3634 3038 4442 3030 4642 3544     37BD4680BD00BFD5
20000acc:	3730 3034 3030 3235 0a0d 313a 3030 4433     07400052..:1003D
20000adc:	3030 4630 3031 3438 3030 3830 4230 3834     000F108400080B48
20000aec:	4233 3030 4130 3746 3638 3730 3642 3038     3B000AF78607B680
20000afc:	3237 4542 0d31 3a0a 3031 3330 3045 3030     72BE1..:1003E000
20000b0c:	3532 3844 3130 3241 3235 3846 3332 3046     25D801A252F823F0
20000b1c:	3930 3430 3034 3030 4630 3430 3034 3030     090440000F044000
20000b2c:	3037 0a0d 313a 3030 4633 3030 3130 3035     70..:1003F000150
20000b3c:	3434 3030 3130 3042 3434 3030 3130 3046     440001B0440001F0
20000b4c:	3434 3030 3230 3033 3434 3030 3730 0d42     44000230440007B.
20000b5c:	3a0a 3031 3430 3030 3030 3732 3430 3034     .:10040000270440
20000b6c:	3030 4232 3430 3034 3030 4634 3446 4146     002B0440004FF4FA
20000b7c:	3334 3031 3045 4634 3446 4635 0a0d 313a     4310E04FF45F..:1
20000b8c:	3030 3134 3030 3030 3430 3033 4544 3430     004100000430DE04
20000b9c:	4646 3034 3430 3033 4541 3030 3438 3042     FF400430AE0084B0
20000bac:	4538 3030 3438 4142 0d45 3a0a 3031 3430     8E0084BAE..:1004
20000bbc:	3032 3030 3630 3045 3830 4234 3430 3045     200006E0084B04E0
20000bcc:	3730 4234 3230 3045 3630 4234 3030 3045     074B02E0064B00E0
20000bdc:	3030 3332 3732 0a0d 313a 3030 3334 3030     002327..:1004300
20000bec:	3130 3438 3036 3343 4237 3444 3836 4230     018460C37BD4680B
20000bfc:	3743 3430 3037 4230 3046 3030 3339 3044     C704700BF00093D0
20000c0c:	3230 0d30 3a0a 3031 3430 3034 3030 3030     020..:1004400000
20000c1c:	3231 4137 3030 3030 4231 3742 3030 3038     127A00001BB70080
20000c2c:	3542 3238 3042 3030 4641 3330 3634 4645     B582B000AF0346EF
20000c3c:	0a0d 313a 3030 3534 3030 4630 3742 3031     ..:10045000FB710
20000c4c:	4230 4646 3742 3139 3438 3036 3435 3942     0BFFB791846054B9
20000c5c:	3438 3037 3433 3836 4633 4230 0d34 3a0a     847034683F0B4..:
20000c6c:	3031 3430 3036 3030 3130 3330 4244 3242     100460000103DBB2
20000c7c:	3030 4232 3546 3144 3030 4642 3830 3733     002BF5D100BF0837
20000c8c:	4442 3634 3038 4442 4343 0a0d 313a 3030     BD4680BDCC..:100
20000c9c:	3734 3030 3630 3035 3433 3030 3830 4230     470006503400080B
20000cac:	3835 4236 3030 4130 4646 3638 3730 3641     586B000AFF8607A6
20000cbc:	3330 3642 4530 0d44 3a0a 3031 3430 3038     03B60ED..:100480
20000ccc:	3030 4230 3634 4246 3237 4246 4137 3831     000B46FB72FB7A18
20000cdc:	3634 4430 4234 3839 3734 3230 3634 4237     460D4B984702467B
20000cec:	3836 3937 0a0d 313a 3030 3934 3030 4230     6879..:10049000B
20000cfc:	4632 4642 4633 3733 3642 3731 3642 3339     2FBF3F37B617B693
20000d0c:	3641 3038 4632 3042 4633 3733 3642 3931     A6802FB03F37B619
20000d1c:	0d38 3a0a 3031 3430 3041 3030 4233 3836     8..:1004A0003B68
20000d2c:	3130 4233 4131 3430 3730 4234 3331 3034     013B1A04074B1340
20000d3c:	4137 3836 3244 3242 3331 3334 4545 0a0d     7A68D2B21343EE..
20000d4c:	313a 3030 4234 3030 3430 4633 3734 3543     :1004B00043F47C5
20000d5c:	4632 3642 3138 3641 3030 4230 3146 3338     2FB681A6000BF183
20000d6c:	4237 3444 3836 4230 3044 0d43 3a0a 3031     7BD4680BD0C..:10
20000d7c:	3430 3043 3030 3544 3330 3034 3030 3030     04C000D503400000
20000d8c:	3030 4646 3730 3038 3542 3238 3042 3030     00FF0780B582B000
20000d9c:	4641 3837 3036 3032 0a0d 313a 3030 4434     AF786020..:1004D
20000dac:	3030 3330 3639 3330 3642 3038 3230 3042     00039603B68002B0
20000dbc:	4438 3031 3439 3942 3438 3037 3439 3741     8D1094B9847094A7
20000dcc:	3642 3738 0d33 3a0a 3031 3430 3045 3030     B6873..:1004E000
20000ddc:	4231 3836 3334 3046 3030 3335 3339 3236     1B6843F000539362
20000dec:	3530 3045 3730 4234 3839 3734 3530 4134     05E0074B9847054A
20000dfc:	3941 0a0d 313a 3030 4634 3030 3730 3642     A9..:1004F0007B6
20000e0c:	3138 3642 4438 3633 3032 4230 3046 3338     81B68D36200BF083
20000e1c:	4237 3444 3836 4230 3044 4230 3646 0d34     7BD4680BD00BF64.
20000e2c:	3a0a 3031 3530 3030 3030 3930 3930 3034     .:10050000090940
20000e3c:	3030 3030 3430 4530 3034 3933 3930 3034     0000040E40390940
20000e4c:	3030 3038 3542 3238 3042 4535 0a0d 313a     0080B582B05E..:1
20000e5c:	3030 3135 3030 3030 4130 3746 3638 3730     005100000AF78607
20000e6c:	3642 3038 3230 3042 4433 3031 3435 3942     B68002B03D1054B9
20000e7c:	3438 3037 3433 4636 0d41 3a0a 3031 3530     8470346FA..:1005
20000e8c:	3032 3030 3230 3045 3430 4234 3839 3734     200002E0044B9847
20000e9c:	3330 3634 3831 3634 3830 3733 4442 3634     034618460837BD46
20000eac:	3038 4442 3539 0a0d 313a 3030 3335 3030     80BD95..:1005300
20000ebc:	3230 3031 3439 3030 3530 3031 3439 3030     0210940005109400
20000ecc:	3830 4230 3835 4232 3030 4130 3046 3433     080B582B000AF034
20000edc:	3536 0d38 3a0a 3031 3530 3034 3030 4246     658..:10054000FB
20000eec:	3137 4246 3937 3330 4233 3430 4232 3830     71FB79033B042B08
20000efc:	3844 4246 3937 3831 3634 3630 4234 4235     D8FB791846064B5B
20000f0c:	0a0d 313a 3030 3535 3030 3930 3438 4637     ..:100550009847F
20000f1c:	3742 3139 3438 3036 3435 3942 3438 3037     B791846054B98470
20000f2c:	4530 3030 4230 3046 4230 3546 0d44 3a0a     0E000BF00BF5D..:
20000f3c:	3031 3530 3036 3030 3830 3733 4442 3634     100560000837BD46
20000f4c:	3038 4442 3030 4642 4444 3230 3034 3030     80BD00BFDD024000
20000f5c:	3934 3430 3034 3030 3141 0a0d 313a 3030     49044000A1..:100
20000f6c:	3735 3030 3830 4230 3835 4232 3030 4130     5700080B582B000A
20000f7c:	3746 3638 3030 4230 3746 3638 3038 3434     F786000BF7868044
20000f8c:	3942 3438 4337 0d30 3a0a 3031 3530 3038     B9847C0..:100580
20000f9c:	3030 3330 3634 3030 4232 3946 3044 3030     000346002BF9D000
20000fac:	3332 3831 3634 3830 3733 4442 3634 3038     2318460837BD4680
20000fbc:	4442 4532 0a0d 313a 3030 3935 3030 3030     BD2E..:100590000
20000fcc:	3044 3435 3030 3830 4230 3035 4130 3046     D05400080B500AF0
20000fdc:	3236 3030 3434 3942 3438 3037 3432 3836     620044B984702468
20000fec:	0d39 3a0a 3031 3530 3041 3030 3331 3634     9..:1005A0001346
20000ffc:	4239 3030 3331 3434 4239 3030 3831 3634     9B0013449B001846
2000100c:	3038 4442 3544 3330 3034 3030 3242 0a0d     80BDD5034000B2..
2000101c:	313a 3030 4235 3030 3830 4230 3035 4130     :1005B00080B500A
2000102c:	3046 3432 3942 3438 3037 3433 3536 3042     F024B984703465B0
2000103c:	3138 3438 3836 4230 4544 0d34 3a0a 3031     8184680BDE4..:10
2000104c:	3530 3043 3030 3539 3530 3034 3030 3039     05C0009505400090
2000105c:	3542 3338 3042 3030 4641 3131 3834 3131     B583B000AF114811
2000106c:	4234 3839 3734 3639 0a0d 313a 3030 4435     4B984796..:1005D
2000107c:	3030 3030 3236 3130 3431 3942 3438 3337     0000620114B98473
2000108c:	3138 3144 3234 3033 3231 3032 3236 3031     81D1423012206210
2000109c:	3446 3843 0d39 3a0a 3031 3530 3045 3030     F4C89..:1005E000
200010ac:	3041 3734 4233 4431 3030 3132 3831 3634     A0473B1D00211846
200010bc:	4430 4234 3839 3734 3030 3032 4430 4234     0D4B984700200D4B
200010cc:	4539 0a0d 313a 3030 4635 3030 3930 3438     9E..:1005F000984
200010dc:	3137 3230 3030 3443 3942 3438 3037 3443     710200C4B98470C4
200010ec:	3942 3438 3037 3443 3942 3438 3437 0d41     B98470C4B98474A.
200010fc:	3a0a 3031 3630 3030 3030 3330 3634 3831     .:10060000034618
2000110c:	3634 3330 4234 3839 3734 3030 4642 4330     46034B984700BF0C
2000111c:	3733 4442 3634 3039 4442 3443 0a0d 313a     37BD4690BDC4..:1
2000112c:	3030 3136 3030 3030 3030 3245 3037 4537     0061000000E2707E
2000113c:	3039 3445 3030 3330 3039 3435 3030 3730     90E4000390540007
2000114c:	3035 3434 3030 3330 0d30 3a0a 3031 3630     504400030..:1006
2000115c:	3032 3030 3943 3430 3034 3030 3137 3530     2000C90440007105
2000116c:	3034 3030 4431 3730 3034 3030 3135 4430     40001D074000510D
2000117c:	3034 3030 3530 0a0d 313a 3030 3336 3030     400005..:1006300
2000118c:	4230 3031 3435 3030 3830 4230 3834 4235     0B105400080B485B
2000119c:	3030 4130 4646 3638 4230 3639 3730 3641     000AFF860B9607A6
200011ac:	3630 0d31 3a0a 3031 3630 3034 3030 4246     061..:10064000FB
200011bc:	3836 4142 3836 3343 3846 3438 3032 4237     68BA68C3F884207B
200011cc:	3836 4235 3030 4634 3446 3030 3234 3330     685B004FF4004203
200011dc:	0a0d 313a 3030 3536 3030 4230 4632 4642     ..:10065000B2FBF
200011ec:	4633 3033 3331 4342 4633 3033 3044 4632     3F3013BC3F30D02F
200011fc:	3642 4338 4633 3838 3243 3330 0d43 3a0a     B68C3F88C203C..:
2000120c:	3031 3630 3036 3030 3030 4642 3431 3733     1006600000BF1437
2000121c:	4442 3634 3038 4342 3037 3734 3038 3442     BD4680BC704780B4
2000122c:	3538 3042 3030 4641 3237 0a0d 313a 3030     85B000AF72..:100
2000123c:	3736 3030 4630 3638 4230 3639 3730 3641     67000F860B9607A6
2000124c:	3730 3642 3038 4633 3130 3030 3033 3230     07B6803F01003002
2000125c:	3242 4430 3230 0d42 3a0a 3031 3630 3038     B20D02B..:100680
2000126c:	3030 4246 3836 4142 3836 3343 3846 3042     00FB68BA68C3F8B0
2000127c:	3032 4237 3836 3330 3046 3032 3330 3030     207B6803F0200300
2000128c:	4232 3633 0a0d 313a 3030 3936 3030 3030     2B36..:100690000
2000129c:	4434 4630 3642 4238 3641 4338 4633 4438     4D0FB68BA68C3F8D
200012ac:	3234 3030 4533 4630 3642 4238 3641 4538     42003E0FB68BA68E
200012bc:	0d41 3a0a 3031 3630 3041 3030 3343 3846     A..:1006A000C3F8
200012cc:	3044 3032 4237 3836 3330 3046 3034 3330     D0207B6803F04003
200012dc:	3030 4232 3430 3044 4246 3836 3432 0a0d     002B04D0FB6824..
200012ec:	313a 3030 4236 3030 4230 3641 4338 4633     :1006B000BA68C3F
200012fc:	4338 3230 3030 4538 4630 3642 4238 3641     8C02008E0FB68BA6
2000130c:	4338 4633 4338 3234 3730 0d31 3a0a 3031     8C3F8C42071..:10
2000131c:	3630 3043 3030 3330 3045 4246 3836 4142     06C00003E0FB68BA
2000132c:	3836 3343 3846 3442 3032 3030 4642 3431     68C3F8B42000BF14
2000133c:	3733 4442 3634 3632 0a0d 313a 3030 4436     37BD4626..:1006D
2000134c:	3030 3830 4230 3743 3430 3837 4230 3834     00080BC704780B48
2000135c:	4233 3030 4130 3746 3638 3330 3639 3730     3B000AF786039607
2000136c:	3642 4238 0d44 3a0a 3031 3630 3045 3030     B68BD..:1006E000
2000137c:	4133 3836 4131 3436 3030 4642 4330 3733     3A681A6400BF0C37
2000138c:	4442 3634 3038 4342 3037 3734 3038 3442     BD4680BC704780B4
2000139c:	4542 0a0d 313a 3030 4636 3030 3830 4233     BE..:1006F00083B
200013ac:	3030 4130 3746 3638 3730 3642 4438 3642     000AF78607B68DB6
200013bc:	3143 3438 3036 3343 4237 3444 3736 0d32     C18460C37BD4672.
200013cc:	3a0a 3031 3730 3030 3030 3038 4342 3037     .:1007000080BC70
200013dc:	3734 3038 3442 3338 3042 3030 4641 3837     4780B483B000AF78
200013ec:	3036 4237 3836 4239 4336 4531 0a0d 313a     607B689B6C1E..:1
200013fc:	3030 3137 3030 3130 3438 3036 3343 4237     007100018460C37B
2000140c:	3444 3836 4230 3743 3430 3037 3030 3830     D4680BC704700008
2000141c:	4230 3834 4235 4430 0d39 3a0a 3031 3730     0B485B0D9..:1007
2000142c:	3032 3030 3030 4641 3837 3036 4331 3934     200000AF78601C49
2000143c:	4331 4234 4231 4236 3332 3046 3037 3230     1C4B1B6B23F07002
2000144c:	4237 3836 3838 0a0d 313a 3030 3337 3030     7B6888..:1007300
2000145c:	3130 3433 3033 3642 3433 4646 3034 3630     013430B634FF4006
2000146c:	4633 3642 3030 4537 4630 3642 3038 3230     3FB6007E0FB68002
2000147c:	3742 0d46 3a0a 3031 3730 3034 3030 3130     B7F..:1007400001
2000148c:	3144 3130 3332 3332 3045 4246 3836 3130     D1012323E0FB6801
2000149c:	4233 4246 3036 3231 4234 4239 4536 3035     3BFB60124B9B6E50
200014ac:	0a0d 313a 3030 3537 3030 3030 4633 3030     ..:1007500003F00
200014bc:	3038 3033 3230 4642 4431 3030 3446 3041     803002BF1D00F4A0
200014cc:	3446 3142 3642 3242 4633 3630 0d33 3a0a     F4B1B6B23F063..:
200014dc:	3031 3730 3036 3030 3330 3330 3334 3046     10076000030343F0
200014ec:	3230 3330 3331 3336 4634 3446 3030 3336     020313634FF40063
200014fc:	4246 3036 3730 3045 4445 0a0d 313a 3030     FB6007E0ED..:100
2000150c:	3737 3030 4630 3642 3038 3230 3042 4431     77000FB68002B01D
2000151c:	3031 3231 3033 4539 4630 3642 3038 3331     1012309E0FB68013
2000152c:	4642 3642 3130 0d32 3a0a 3031 3730 3038     BFB6012..:100780
2000153c:	3030 3530 4234 4239 4536 3330 3046 3830     00054B9B6E03F008
2000154c:	3330 3030 4232 3146 3044 3030 3332 3831     03002BF1D0002318
2000155c:	3634 3541 0a0d 313a 3030 3937 3030 3130     46A5..:100790001
2000156c:	3334 4237 3444 3836 4230 3743 3430 3037     437BD4680BC70470
2000157c:	3030 3034 3445 3830 4230 3834 4233 3530     0040E4080B483B05
2000158c:	0d46 3a0a 3031 3730 3041 3030 3030 4641     F..:1007A00000AF
2000159c:	3837 3036 4237 3836 3130 4232 3730 3144     78607B68012B07D1
200015ac:	3830 4134 3730 4234 4239 3836 3433 0a0d     084A074B9B6834..
200015bc:	313a 3030 4237 3030 3430 4633 3230 3435     :1007B00043F0254
200015cc:	3433 4633 3834 3130 3933 3633 3030 3434     343F480139360044
200015dc:	3042 3434 3141 3641 4330 0d41 3a0a 3031     B044A1A60CA..:10
200015ec:	3730 3043 3030 3030 4642 4330 3733 4442     07C00000BF0C37BD
200015fc:	3634 3038 4342 3037 3734 3030 4642 3031     4680BC704700BF10
2000160c:	3431 4530 3034 3030 0a0d 313a 3030 4437     140E4000..:1007D
2000161c:	3030 3030 3038 3030 4130 3835 4230 3034     000080000A580B40
2000162c:	4130 3046 3439 3542 3642 3039 4633 3830     0AF094B5B6903F08
2000163c:	3030 4633 0d42 3a0a 3031 3730 3045 3030     003FB..:1007E000
2000164c:	3030 4232 3730 3044 3730 4234 4239 4536     002B07D0074B9B6E
2000165c:	3330 3046 3038 3330 3030 4232 3130 3044     03F08003002B01D0
2000166c:	4133 0a0d 313a 3030 4637 3030 3030 3231     3A..:1007F000012
2000167c:	3033 4530 3030 3230 3133 3438 4236 3444     300E000231846BD4
2000168c:	3836 4230 3743 3430 3037 4230 4246 0d46     680BC704700BFBF.
2000169c:	3a0a 3031 3830 3030 3030 3031 3431 4530     .:1008000010140E
200016ac:	3034 3030 3430 4530 3034 3038 3442 3338     4000040E4080B483
200016bc:	3042 3030 4641 3837 3036 3633 0a0d 313a     B000AF786036..:1
200016cc:	3030 3138 3030 3130 3438 3141 3438 3142     0081000184A184B1
200016dc:	3642 3441 4633 3534 3143 3433 4633 3030     B6A43F45C1343F00
200016ec:	3038 3133 3633 3332 0d35 3a0a 3031 3830     803136235..:1008
200016fc:	3032 3030 3030 4642 3431 4234 4239 4536     200000BF144B9B6E
2000170c:	3330 3446 3030 3333 3030 4232 3946 3044     03F40033002BF9D0
2000171c:	3131 3934 3932 0a0d 313a 3030 3338 3030     114929..:1008300
2000172c:	3130 3430 3142 3642 3241 4633 3534 3143     0104B1B6A23F45C1
2000173c:	3233 4633 3730 3030 3733 3641 3138 3433     323F070037A68134
2000174c:	3933 0d34 3a0a 3031 3830 3034 3030 3334     394..:1008400043
2000175c:	3446 4335 3331 4230 3236 3030 4642 4130     F45C130B6200BF0A
2000176c:	4234 4239 4536 3330 3446 3030 3333 4534     4B9B6E03F400334E
2000177c:	0a0d 313a 3030 3538 3030 3030 3230 4642     ..:10085000002BF
2000178c:	4439 3030 3437 3041 3437 3142 3642 3241     9D0074A074B1B6A2
2000179c:	4633 3930 3742 3233 4633 3434 0d34 3a0a     3F09B7323F444..:
200017ac:	3031 3830 3036 3030 3038 3333 3334 3446     10086000803343F4
200017bc:	4335 3331 3331 3236 3030 4642 4330 3733     5C13136200BF0C37
200017cc:	4442 3634 3038 4342 3937 0a0d 313a 3030     BD4680BC79..:100
200017dc:	3738 3030 3730 3430 3037 4230 3046 3030     87000704700BF000
200017ec:	3034 3445 3830 4230 3834 4233 3030 4130     40E4080B483B000A
200017fc:	3746 3638 4330 0d32 3a0a 3031 3830 3038     F7860C2..:100880
2000180c:	3030 3933 3036 4237 3836 3030 4232 3830     0039607B68002B08
2000181c:	3044 3631 3934 3631 4234 4231 4136 3631     D01649164B1B6A16
2000182c:	4134 3434 0a0d 313a 3030 3938 3030 3130     4A44..:100890001
2000183c:	3441 3130 3436 3142 3433 3033 3642 3132     A40164B13430B621
2000184c:	4545 3130 3432 3139 3431 3142 3642 4141     EE01249114B1B6AA
2000185c:	0d30 3a0a 3031 3830 3041 3030 3332 3446     0..:1008A00023F4
2000186c:	4335 3331 3332 3046 3330 3330 4133 3836     5C1323F003033A68
2000187c:	3231 3230 3239 3242 3331 3334 3935 0a0d     120292B2134359..
2000188c:	313a 3030 4238 3030 3430 4633 3534 3143     :1008B00043F45C1
2000189c:	3433 4633 3030 3031 3033 3642 3032 4230     343F001030B6200B
200018ac:	3046 3439 3942 3642 4445 0d32 3a0a 3031     F094B9B6ED2..:10
200018bc:	3830 3043 3030 3330 3046 3130 3330 3030     08C00003F0010300
200018cc:	4232 3946 3044 3630 4134 3630 4234 4231     2BF9D0064A064B1B
200018dc:	4136 3334 3046 3445 0a0d 313a 3030 4438     6A43F0E4..:1008D
200018ec:	3030 3930 3742 3433 4633 3834 3330 3133     0009B7343F480331
200018fc:	3633 3032 4230 3046 3343 4237 3444 3836     36200BF0C37BD468
2000190c:	4230 3643 0d41 3a0a 3031 3830 3045 3030     0BC6A..:1008E000
2000191c:	3037 3734 3030 4642 3030 3430 4530 3034     704700BF00040E40
2000192c:	4346 4646 3843 4546 3230 3030 3733 3130     FCFFC8FE02003701
2000193c:	3534 0a0d 313a 3030 4638 3030 3830 4230     45..:1008F00080B
2000194c:	3034 4130 3046 3433 3942 3642 3045 4633     400AF034B9B6E03F
2000195c:	3834 3330 3133 3438 4236 3444 4236 0d33     480331846BD46B3.
2000196c:	3a0a 3031 3930 3030 3030 3038 4342 3037     .:1009000080BC70
2000197c:	3734 3030 3430 4530 3034 3038 3442 3030     4700040E4080B400
2000198c:	4641 3330 4234 4634 3046 3233 0a0d 313a     AF034B4FF032..:1
2000199c:	3030 3139 3030 3030 3530 3932 3641 3032     009100000529A620
200019ac:	4230 4246 3444 3836 4230 3743 3430 3037     0BFBD4680BC70470
200019bc:	3030 3034 3445 3830 0d32 3a0a 3031 3930     0040E4082..:1009
200019cc:	3032 3030 3038 3442 3030 4641 3330 4234     200080B400AF034B
200019dc:	4239 4536 3330 3046 3230 3330 3831 3634     9B6E03F002031846
200019ec:	4442 3634 3433 0a0d 313a 3030 3339 3030     BD4634..:1009300
200019fc:	3830 4230 3743 3430 3037 3030 3034 3445     080BC704700040E4
20001a0c:	3830 4230 3034 4130 3046 3433 3042 3230     080B400AF034B002
20001a1c:	3132 0d46 3a0a 3031 3930 3034 3030 4144     21F..:10094000DA
20001a2c:	3236 3030 4642 4442 3634 3038 4342 3037     6200BFBD4680BC70
20001a3c:	3734 3030 4642 3030 3430 4530 3034 3541     4700BF00040E40A5
20001a4c:	0a0d 313a 3030 3539 3030 3830 4230 3034     ..:1009500080B40
20001a5c:	4130 3046 3433 3942 3642 3045 4633 3030     0AF034B9B6E03F00
20001a6c:	3034 3133 3438 4236 3444 3036 0d32 3a0a     4031846BD4602..:
20001a7c:	3031 3930 3036 3030 3038 4342 3037 3734     1009600080BC7047
20001a8c:	3030 3430 4530 3034 3038 3442 3338 3042     00040E4080B483B0
20001a9c:	3030 4641 3837 3036 3435 0a0d 313a 3030     00AF786054..:100
20001aac:	3739 3030 3730 3642 3238 3232 3042 4431     970007B68222B01D
20001abc:	3039 3231 3233 4546 3730 3642 3138 3246     901232FE07B681F2
20001acc:	3142 4433 3238 0d32 3a0a 3031 3930 3038     B13D822..:100980
20001adc:	3030 3831 4234 4139 3936 3130 3132 4237     00184B9A6901217B
20001aec:	3836 3130 4146 3330 3346 4131 3034 3130     6801FA03F31A4001
20001afc:	3132 4638 0a0d 313a 3030 3939 3030 3730     218F..:100990007
20001b0c:	3642 3038 4631 3041 4633 3933 3441 3132     B6801FA03F39A421
20001b1c:	4445 3130 3432 3041 3231 3731 3642 3538     ED0124A01217B685
20001b2c:	0d38 3a0a 3031 3930 3041 3030 3130 4146     8..:1009A00001FA
20001b3c:	3330 3346 3331 3136 3731 3045 4237 3836     03F3136117E07B68
20001b4c:	3032 4233 4237 3036 4430 4234 4137 0a0d     203B7B600D4B7A..
20001b5c:	313a 3030 4239 3030 4430 4633 3038 3238     :1009B000D3F8082
20001b6c:	3031 3231 3731 3642 3038 4631 3041 4633     101217B6801FA03F
20001b7c:	3133 3441 3030 3231 4431 0d31 3a0a 3031     31A400121D1..:10
20001b8c:	3930 3043 3030 4237 3836 3130 4146 3330     09C0007B6801FA03
20001b9c:	3346 4139 3234 3630 3044 3630 4134 3130     F39A4206D0064A01
20001bac:	3132 4237 3836 4334 0a0d 313a 3030 4439     217B684C..:1009D
20001bbc:	3030 3030 4631 3041 4633 4333 4632 3038     00001FA03F3C2F80
20001bcc:	3330 3031 3230 3133 3438 3036 3343 4237     031002318460C37B
20001bdc:	3444 3736 0d34 3a0a 3031 3930 3045 3030     D4674..:1009E000
20001bec:	3038 4342 3037 3734 3030 3430 4530 3034     80BC704700040E40
20001bfc:	3038 3542 3238 3042 3030 4641 3837 3036     80B582B000AF7860
20001c0c:	3444 0a0d 313a 3030 4639 3030 3730 3638     D4..:1009F000786
20001c1c:	3038 3433 3942 3438 3037 4230 3046 3338     8034B984700BF083
20001c2c:	4237 3444 3836 4230 3044 4230 4546 0d44     7BD4680BD00BFED.
20001c3c:	3a0a 3031 4130 3030 3030 3936 3930 3034     .:100A0000690940
20001c4c:	3030 3038 3542 3030 4641 4230 3032 3330     0080B500AF0B2003
20001c5c:	4234 3839 3734 4330 3032 4343 0a0d 313a     4B98470C20CC..:1
20001c6c:	3030 3141 3030 3030 3431 3942 3438 3037     00A1000014B98470
20001c7c:	4230 3846 4230 4544 3039 3439 3030 3830     0BF80BDE90940008
20001c8c:	4230 3834 4244 3030 0d43 3a0a 3031 4130     0B48DB00C..:100A
20001c9c:	3032 3030 3030 4641 3837 3036 3933 3036     200000AF78603960
20001cac:	4237 3836 4246 3236 4233 3836 4242 3236     7B68FB623B68BB62
20001cbc:	4246 4136 3134 0a0d 313a 3030 3341 3030     FB6A41..:100A300
20001ccc:	3730 3642 3732 3642 3541 3041 4639 3642     07B627B6A5A09FB6
20001cdc:	3341 3642 3332 3642 3041 4633 3130 3046     A3B623B6A03F01F0
20001cec:	4433 0d35 3a0a 3031 4130 3034 3030 3130     3D5..:100A400001
20001cfc:	3132 3130 4146 3330 3346 4146 3136 4242     2101FA03F3FA61BB
20001d0c:	3136 4242 4136 4237 3136 4246 3936 3742     61BB6A7B61FB69B7
20001d1c:	0a0d 313a 3030 3541 3030 3330 3642 3331     ..:100A50003B613
20001d2c:	3642 3039 4633 3035 3130 3033 4633 3032     B6903F5001303F20
20001d3c:	3737 3533 3042 4632 3642 3230 0d34 3a0a     7735B02FB6024..:
20001d4c:	3031 4130 3036 3030 4237 3936 3330 3046     100A60007B6903F0
20001d5c:	3830 3330 3030 4232 3330 3044 4246 3836     0803002B03D0FB68
20001d6c:	4142 3936 4135 3636 3036 0a0d 313a 3030     BA695A6660..:100
20001d7c:	3741 3030 3030 4532 4630 3642 4238 3641     A700002E0FB68BA6
20001d8c:	3139 3641 3736 3642 3039 4633 3130 3030     91A667B6903F0100
20001d9c:	3033 3230 3742 0d39 3a0a 3031 4130 3038     3002B79..:100A80
20001dac:	3030 3430 3044 4246 3836 4142 3936 3343     0004D0FB68BA69C3
20001dbc:	3846 3439 3032 3330 3045 4246 3836 4142     F8942003E0FB68BA
20001dcc:	3936 3433 0a0d 313a 3030 3941 3030 4330     6934..:100A9000C
20001ddc:	4633 3938 3230 3730 3642 3039 4633 3230     3F890207B6903F02
20001dec:	3030 3033 3230 3042 4433 4630 3642 3938     003002B03D0FB689
20001dfc:	0d30 3a0a 3031 4130 3041 3030 4142 3936     0..:100AA000BA69
20001e0c:	4131 3536 3230 3045 4246 3836 4142 3936     1A6502E0FB68BA69
20001e1c:	4135 3536 4237 3936 3330 3046 3641 0a0d     5A657B6903F0A6..
20001e2c:	313a 3030 4241 3030 4330 3030 3033 3230     :100AB000C003002
20001e3c:	3042 4433 4630 3642 4238 3641 3139 3641     B03D0FB68BA691A6
20001e4c:	3032 4532 4630 3642 3238 0d45 3a0a 3031     202E0FB682E..:10
20001e5c:	4130 3043 3030 4142 3936 4135 3236 4237     0AC000BA695A627B
20001e6c:	3936 3330 3046 3038 3330 3030 4232 3430     6903F08003002B04
20001e7c:	3044 4246 3836 4238 0a0d 313a 3030 4441     D0FB688B..:100AD
20001e8c:	3030 4230 3641 4339 4633 3838 3234 3030     000BA69C3F884200
20001e9c:	4533 4630 3642 4238 3641 4339 4633 3838     3E0FB68BA69C3F88
20001eac:	3230 4430 0d30 3a0a 3031 4130 3045 3030     020D0..:100AE000
20001ebc:	4237 3936 3330 3046 3130 3330 3030 4232     7B6903F00103002B
20001ecc:	3630 3044 4246 3836 4131 4636 4242 3936     06D0FB681A6FBB69
20001edc:	4131 0a0d 313a 3030 4641 3030 3130 3441     1A..:100AF0001A4
20001eec:	4633 3642 3138 3641 3037 4536 4630 3642     3FB681A6706E0FB6
20001efc:	3138 3641 4246 3642 4439 3442 4133 0d31     81A6FBB69DB43A1.
20001f0c:	3a0a 3031 4230 3030 3030 4131 3034 4246     .:100B00001A40FB
20001f1c:	3836 4131 3736 4237 3936 3330 3046 3230     681A677B6903F002
20001f2c:	3330 3030 4232 3630 3044 4143 0a0d 313a     03002B06D0CA..:1
20001f3c:	3030 3142 3030 4630 3642 3538 3641 4246     00B1000FB685A6FB
20001f4c:	3642 3139 3441 4633 3642 3538 3641 3037     B691A43FB685A670
20001f5c:	4536 4630 3642 4238 0d42 3a0a 3031 4230     6E0FB68BB..:100B
20001f6c:	3032 3030 4135 4636 4242 3936 4244 3334     20005A6FBB69DB43
20001f7c:	4131 3034 4246 3836 4135 3736 3030 4642     1A40FB685A6700BF
20001f8c:	3433 3733 3231 0a0d 313a 3030 3342 3030     343712..:100B300
20001f9c:	4230 3444 3836 4230 3743 3430 3837 4230     0BD4680BC704780B
20001fac:	3834 4244 3030 4130 3746 3638 3030 3442     48DB000AF78600B4
20001fbc:	3736 0d36 3a0a 3031 4230 3034 3030 4246     676..:100B4000FB
20001fcc:	3037 4237 3836 4246 3236 4246 3837 3738     707B68FB62FB7887
20001fdc:	3846 4232 3033 4246 4136 4237 3236 4236     F82B30FB6A7B626B
20001fec:	0a0d 313a 3030 3542 3030 3730 3642 3341     ..:100B50007B6A3
20001ffc:	3642 3332 3642 3541 3042 4639 3642 4631     B623B6A5B09FB61F
2000200c:	3642 3039 4633 3035 3130 3333 0d46 3a0a     B6903F500133F..:
2000201c:	3031 4230 3036 3030 3330 3246 3730 3337     100B600003F20773
2000202c:	4235 3230 4242 3136 3739 3846 4232 3033     5B02BB6197F82B30
2000203c:	3130 4232 3930 3144 4441 0a0d 313a 3030     012B09D1AD..:100
2000204c:	3742 3030 4630 3642 3741 3642 3731 3642     B7000FB6A7B617B6
2000205c:	3039 4633 3130 3046 3033 3231 3932 3441     903F01F0301229A4
2000206c:	4230 3642 3139 0d41 3a0a 3031 4230 3038     0BB691A..:100B80
2000207c:	3030 4131 3136 4330 3045 3739 3846 4232     001A610CE097F82B
2000208c:	3033 3030 4232 3830 3144 4246 4136 4233     30002B08D1FB6A3B
2000209c:	3136 4630 0a0d 313a 3030 3942 3030 3330     610F..:100B90003
200020ac:	3642 3039 4633 3130 3046 3033 3231 3932     B6903F01F0301229
200020bc:	3441 4230 3642 3539 3641 4631 3642 3541     A40BB695A61FB6A5
200020cc:	0d42 3a0a 3031 4230 3041 3030 4246 3036     B..:100BA000FB60
200020dc:	4246 3836 3330 3046 4631 3330 3130 3232     FB6803F01F030122
200020ec:	4139 3034 4242 3936 3343 3846 3639 0a0d     9A40BB69C3F896..
200020fc:	313a 3030 4242 3030 4130 3230 3030 4230     :100BB000A02000B
2000210c:	3346 3334 4237 3444 3836 4230 3743 3430     F3437BD4680BC704
2000211c:	3837 4230 3834 4242 4530 0d36 3a0a 3031     780B48BB0E6..:10
2000212c:	4230 3043 3030 3030 4641 3837 3036 4230     0BC00000AF78600B
2000213c:	3634 4246 3037 4237 3836 4237 3236 4246     46FB707B687B62FB
2000214c:	3837 3738 3846 3033 0a0d 313a 3030 4442     7887F830..:100BD
2000215c:	3030 3230 3333 3730 3642 4641 3642 4631     00023307B6AFB61F
2000216c:	3642 4239 3642 4231 3642 3539 3042 3739     B69BB61BB695B097
2000217c:	3642 3931 0d44 3a0a 3031 4230 3045 3030     B619D..:100BE000
2000218c:	4237 3936 3330 3546 3030 3331 3330 3246     7B6903F5001303F2
2000219c:	3730 3337 4235 3230 4233 3136 3739 3846     07735B023B6197F8
200021ac:	4631 0a0d 313a 3030 4642 3030 3230 3333     1F..:100BF000233
200021bc:	3030 3230 3042 4439 3730 3642 4641 3642     0002B09D07B6AFB6
200021cc:	4630 3642 3038 4633 3130 3046 4533 0d36     0FB6803F01F03E6.
200021dc:	3a0a 3031 4330 3030 3030 3130 3232 4139     .:100C000001229A
200021ec:	3034 4233 3936 4131 3336 3830 3045 4237     403B691A6308E07B
200021fc:	4136 4242 3036 4242 3836 4242 0a0d 313a     6ABB60BB68BB..:1
2000220c:	3030 3143 3030 3030 4633 3130 3046 3033     00C100003F01F030
2000221c:	3231 3932 3441 3330 3642 3539 3641 3033     1229A403B695A630
2000222c:	4230 3246 3343 3337 0d46 3a0a 3031 4330     0BF2C373F..:100C
2000223c:	3032 3030 4442 3634 3038 4342 3037 3734     2000BD4680BC7047
2000224c:	3030 3030 3038 3542 3030 4641 3930 4234     000080B500AF094B
2000225c:	3839 3734 3742 0a0d 313a 3030 3343 3030     9847B7..:100C300
2000226c:	3030 3231 3031 3230 3030 3438 3942 3438     001210020084B984
2000227c:	3037 3230 3031 3230 3030 3437 3942 3438     700210020074B984
2000228c:	4337 0d45 3a0a 3031 4330 3034 3030 3030     7CE..:100C400000
2000229c:	3132 3432 3032 3430 4234 3839 3734 3830     212420044B984708
200022ac:	3132 3432 3032 3430 4234 3839 3734 3637     212420044B984776
200022bc:	0a0d 313a 3030 3543 3030 3030 4230 3846     ..:100C500000BF8
200022cc:	4230 3044 3035 3441 3030 3330 3037 3442     0BD050A4000370B4
200022dc:	3030 4230 3044 3442 3030 4230 0d46 3a0a     000BD0B4000BF..:
200022ec:	3031 4330 3036 3030 4431 4130 3034 3030     100C60001D0A4000
200022fc:	3038 3442 3338 3042 3030 4641 3837 3036     80B483B000AF7860
2000230c:	4237 3836 4634 3446 3930 0a0d 313a 3030     7B684FF409..:100
2000231c:	3743 3030 3030 3430 3532 3641 3030 4230     C700000425A6000B
2000232c:	3046 3343 4237 3444 3836 4230 3743 3430     F0C37BD4680BC704
2000233c:	3037 3030 3830 0d30 3a0a 3031 4330 3038     7000080..:100C80
2000234c:	3030 3038 3542 3438 3042 3030 4641 3732     0080B584B000AF27
2000235c:	4234 4246 3036 3732 4234 4242 3036 4146     4BFB60274BBB60FA
2000236c:	3836 3039 0a0d 313a 3030 3943 3030 4230     6890..:100C9000B
2000237c:	3642 3938 3441 3032 4444 3039 4537 4230     B689A420DD907E0B
2000238c:	3642 3138 3141 4244 3641 4630 3641 4238     B681A1DBA60FA68B
2000239c:	0d32 3a0a 3031 4330 3041 3030 3131 4431     2..:100CA000111D
200023ac:	3946 3036 3231 3836 4131 3036 4242 3836     F96012681A60BB68
200023bc:	3032 4134 3339 3234 3346 3344 3141 0a0d     204A9342F3D3A1..
200023cc:	313a 3030 4243 3030 3230 4530 4630 3641     :100CB00020E0FA6
200023dc:	4238 3642 3938 3441 3132 4443 3132 3443     8BB689A421CD21C4
200023ec:	3141 3441 4442 3133 3241 0d44 3a0a 3031     A1A4BD31A2D..:10
200023fc:	4330 3043 3030 4237 3036 4146 3836 4237     0CC0007B60FA687B
2000240c:	3836 3331 3434 3430 4233 4246 3036 4142     681344043BFB60BA
2000241c:	3836 4237 3836 4530 0a0d 313a 3030 4443     687B680E..:100CD
2000242c:	3030 3130 3433 3034 3334 4242 3642 3030     0001344043BBB600
2000243c:	4541 4230 3642 3138 3141 4246 3641 4630     AE0BB681A1FBA60F
2000244c:	3641 4138 0d31 3a0a 3031 4330 3045 3030     A68A1..:100CE000
2000245c:	3131 4631 3946 3036 3231 3836 4131 3036     111FF96012681A60
2000246c:	4237 3836 3430 4233 4237 3036 4237 3836     7B68043B7B607B68
2000247c:	3741 0a0d 313a 3030 4643 3030 3030 3230     A7..:100CF000002
2000248c:	4642 4431 3031 4230 3046 3445 4242 3642     BF1D100BF0E4BBB6
2000249c:	3030 4534 4230 3642 3138 3141 3944 0d36     004E0BB681A1D96.
200024ac:	3a0a 3031 4430 3030 3030 4142 3036 3030     .:100D0000BA6000
200024bc:	3232 4131 3036 4242 3836 4130 4134 3339     221A60BB680A4A93
200024cc:	3234 3646 3344 4130 4234 3343 0a0d 313a     42F6D30A4BC3..:1
200024dc:	3030 3144 3030 4630 3642 3030 3441 4641     00D1000FB600A4AF
200024ec:	3642 3938 3633 3030 3439 3942 3438 3037     B689360094B98470
200024fc:	3439 3942 3438 3637 0d38 3a0a 3031 4430     94B984768..:100D
2000250c:	3032 3030 4546 3745 3030 4642 3838 3731     2000FEE700BF8817
2000251c:	3034 3030 3030 3030 3030 3032 4333 3430     4000000000203C04
2000252c:	3030 3032 3043 0a0d 313a 3030 3344 3030     0020C0..:100D300
2000253c:	3330 3043 3034 3230 4630 3043 3034 3230     03C040020FC04002
2000254c:	3030 3030 3430 3030 3030 4530 3044 4530     00000400000ED00E
2000255c:	3230 0d36 3a0a 3031 4430 3034 3030 3945     026..:100D4000E9
2000256c:	3531 3034 3030 4445 3131 3034 3030 3038     154000ED11400080
2000257c:	3442 3030 4641 4546 3745 3030 3030 4635     B400AFFEE700005F
2000258c:	0a0d 313a 3030 3544 3030 3830 4230 3034     ..:100D500080B40
2000259c:	4130 3546 3444 3142 3642 3042 4633 3030     0AF5D4B1B6B03F00
200025ac:	3033 3033 3233 3042 4630 3632 0d39 3a0a     303032B00F269..:
200025bc:	3031 4430 3036 3030 3639 3038 3130 3241     100D6000968001A2
200025cc:	3235 3846 3332 3046 3937 4430 3034 3030     52F823F0790D4000
200025dc:	3939 4430 3034 3030 3143 0a0d 313a 3030     990D4000C1..:100
200025ec:	3744 3030 4530 3033 3444 3030 4530 3033     D7000E30D4000E30
200025fc:	3444 3030 3530 3435 3542 3642 3039 4633     D4000554B5B6903F
2000260c:	3830 3030 3333 0d39 3a0a 3031 4430 3038     0800339..:100D80
2000261c:	3030 3030 4232 3430 3044 3335 4234 4634     00002B04D0534B4F
2000262c:	3446 3030 3234 4131 3036 3038 3045 3135     F400421A6080E051
2000263c:	4234 4243 0a0d 313a 3030 3944 3030 3430     4BCB..:100D90004
2000264c:	4646 4634 3441 3132 3641 3730 4542 3430     FF4FA421A607BE04
2000265c:	3443 3142 3642 3041 4633 3830 3730 4633     C4B1B6A03F08073F
2000266c:	0d44 3a0a 3031 4430 3041 3030 3030 4232     D..:100DA000002B
2000267c:	3330 3044 4234 4234 4334 4134 4131 3036     03D04B4B4C4A1A60
2000268c:	3137 3045 3934 4234 4234 4134 3532 0a0d     71E0494B4B4A25..
2000269c:	313a 3030 4244 3030 3130 3641 3430 3436     :100DB0001A60464
200026ac:	3142 3642 3041 4633 3730 3030 3133 3230     B1B6A03F07003102
200026bc:	3042 4438 3230 3230 4442 0d46 3a0a 3031     B08D0202BDF..:10
200026cc:	4430 3043 3030 4130 3044 3030 4232 3030     0DC0000AD0002B00
200026dc:	3044 4230 3045 3234 4234 3434 4134 4131     D00BE0424B444A1A
200026ec:	3036 3730 3045 3745 0a0d 313a 3030 4444     6007E0E7..:100DD
200026fc:	3030 3430 3430 3442 3433 3141 3641 3030     000404B434A1A600
2000270c:	4533 3330 3445 3342 3446 3141 3641 3030     3E03E4B3F4A1A600
2000271c:	4230 3546 0d33 3a0a 3031 4430 3045 3030     0BF53..:100DE000
2000272c:	3635 3045 4133 4234 4231 4136 3330 3046     56E03A4B1B6A03F0
2000273c:	3038 3337 3030 4232 3330 3044 3933 4234     8073002B03D0394B
2000274c:	4235 0a0d 313a 3030 4644 3030 3330 3439     5B..:100DF000394
2000275c:	3141 3641 3130 4539 3330 3437 3342 3438     A1A6019E0374B384
2000276c:	3141 3641 3330 3433 3142 3642 3741 0d43     A1A60334B1B6A7C.
2000277c:	3a0a 3031 4530 3030 3030 3330 3046 3037     .:100E000003F070
2000278c:	3330 3031 4232 3830 3044 3032 4232 4130     03102B08D0202B0A
2000279c:	3044 3030 4232 3030 3044 3934 0a0d 313a     D0002B00D049..:1
200027ac:	3030 3145 3030 3030 4542 3330 3430 3342     00E10000BE0304B3
200027bc:	3431 3141 3641 3030 4537 3230 3445 3342     14A1A6007E02E4B3
200027cc:	3430 3141 3641 3230 0d33 3a0a 3031 4530     04A1A6023..:100E
200027dc:	3032 3030 3330 3045 4332 4234 4332 4134     200003E02C4B2C4A
200027ec:	4131 3036 3030 4642 3832 4234 4231 4236     1A6000BF284B1B6B
200027fc:	3330 3046 4443 0a0d 313a 3030 3345 3030     03F0CD..:100E300
2000280c:	3030 3033 3033 3232 3142 4435 3231 3435     00303022B15D1254
2000281c:	3942 3642 3141 3042 4343 4633 3033 3041     B9B6A1B0CC3F30A0
2000282c:	3333 0d41 3a0a 3031 4530 3034 3030 3130     33A..:100E400001
2000283c:	3333 3432 4134 3231 3836 3230 4246 3330     33244A126802FB03
2000284c:	3346 3232 4134 3331 3036 4631 4234 4134     F3224A13601F4B4A
2000285c:	0a0d 313a 3030 3545 3030 3930 3642 4441     ..:100E50009B6AD
2000286c:	4242 3132 3446 3141 3632 4238 4632 4642     BB21F4A1268B2FBF
2000287c:	4633 3133 3444 3141 3633 4230 0d30 3a0a     3F31D4A1360B0..:
2000288c:	3031 4530 3036 3030 3631 3045 4131 4234     100E600016E01A4B
2000289c:	4244 4136 4231 4330 3343 3346 4130 3330     DB6A1B0CC3F30A03
200028ac:	3130 3333 3931 4134 3136 0a0d 313a 3030     0133194A61..:100
200028bc:	3745 3030 3130 3632 3038 4632 3042 4633     E7000126802FB03F
200028cc:	3133 3437 3141 3633 3130 3434 4442 3642     3174A1360144BDB6
200028dc:	4441 4242 3032 0d30 3a0a 3031 4530 3038     ADBB200..:100E80
200028ec:	3030 3431 4134 3231 3836 3242 4246 3346     00144A1268B2FBF3
200028fc:	3346 3231 4134 3331 3036 3030 3045 3030     F3124A136000E000
2000290c:	4642 3938 0a0d 313a 3030 3945 3030 3030     BF89..:100E90000
2000291c:	3445 3142 3642 3042 4633 3730 3030 3733     E4B1B6B03F070037
2000292c:	3230 3042 4438 3031 3444 3142 3642 4238     02B08D10D4B1B68B
2000293c:	0d45 3a0a 3031 4530 3041 3030 3031 4134     E..:100EA000104A
2000294c:	3241 4246 3330 3332 4235 3830 4130 4134     A2FB03235B080A4A
2000295c:	3331 3036 4130 3045 3730 4234 4642 0a0d     13600AE0074BBF..
2000296c:	313a 3030 4245 3030 3130 3642 3142 3042     :100EB0001B6B1B0
2000297c:	3039 4633 3030 3037 3033 3436 3141 3632     903F00703064A126
2000298c:	3238 4632 3041 4633 4133 0d46 3a0a 3031     822FA03F3AF..:10
2000299c:	4530 3043 3030 3430 4134 3331 3036 3030     0EC000044A136000
200029ac:	4642 4442 3634 3038 4342 3037 3734 3030     BFBD4680BC704700
200029bc:	3430 4530 3034 4135 0a0d 313a 3030 4445     040E405A..:100ED
200029cc:	3030 3130 3130 3034 3445 3030 3043 3030     00010140E400C000
200029dc:	3230 3030 3130 4242 3037 3030 3030 3339     020001BB70000093
200029ec:	3044 3530 0d43 3a0a 3031 4530 3045 3030     D005C..:100EE000
200029fc:	3030 3231 4137 3030 4241 4141 4141 4141     00127A00ABAAAAAA
20002a0c:	3038 3442 3338 3042 3030 4641 3837 3036     80B483B000AF7860
20002a1c:	4644 0a0d 313a 3030 4645 3030 3730 3642     DF..:100EF0007B6
20002a2c:	3138 3438 3941 3433 3032 4434 3138 3437     8184A934204D8174
20002a3c:	3442 4646 3830 3630 3132 3641 4630 0d46     B4FF080621A60FF.
20002a4c:	3a0a 3031 4630 3030 3030 3332 3045 4237     .:100F000023E07B
20002a5c:	3836 3531 4134 3339 3234 3330 3844 3331     68154A934203D813
20002a6c:	4234 3431 4134 4131 3036 3642 0a0d 313a     4B144A1A60B6..:1
20002a7c:	3030 3146 3030 3130 4542 3730 3642 3138     00F10001BE07B681
20002a8c:	3433 3941 3433 3032 4433 3038 3446 3142     34A934203D80F4B1
20002a9c:	3432 3141 3641 4230 0d36 3a0a 3031 4630     24A1A60B6..:100F
20002aac:	3032 3030 3331 3045 4237 3836 3131 4134     200013E07B68114A
20002abc:	3339 3234 3330 3844 4230 4234 3031 4134     934203D80B4B104A
20002acc:	4131 3036 3642 0a0d 313a 3030 3346 3030     1A60B6..:100F300
20002adc:	3030 4542 3730 3642 3038 3446 3941 3433     00BE07B680F4A934
20002aec:	3032 4434 3038 3437 3442 4646 3030 3234     204D8074B4FF0042
20002afc:	3232 0d32 3a0a 3031 4630 3034 3030 4131     222..:100F40001A
20002b0c:	3036 3230 3045 3430 4234 4330 4134 4131     6002E0044B0C4A1A
20002b1c:	3036 3030 4642 4330 3733 4442 3634 3132     6000BF0C37BD4621
20002b2c:	0a0d 313a 3030 3546 3030 3830 4230 3743     ..:100F500080BC7
20002b3c:	3430 4637 3246 3343 3031 3031 3030 3041     047FF2C3101000A0
20002b4c:	3445 4630 3546 3639 3032 3232 0d44 3a0a     E40FF5962022D..:
20002b5c:	3031 4630 3036 3030 3030 3130 3030 3430     100F600000010004
20002b6c:	4646 3638 3339 3330 3030 3230 3030 3430     FF86930300020004
20002b7c:	4646 3342 3443 3430 3145 0a0d 313a 3030     FFB3C404E1..:100
20002b8c:	3746 3030 3030 3030 3033 3030 4634 4546     F700000030004FFE
20002b9c:	4630 3035 3035 3030 3035 3030 3834 4230     0F5050005000480B
20002bac:	3834 4233 3230 0d31 3a0a 3031 4630 3038     483B021..:100F80
20002bbc:	3030 3030 4641 3330 3634 4246 3137 3830     0000AF0346FB7108
20002bcc:	3934 3739 3946 3730 3033 4235 3930 4146     4997F907305B09FA
20002bdc:	3937 4530 0a0d 313a 3030 3946 3030 3030     790E..:100F90000
20002bec:	4632 3130 3046 3032 3231 3030 4630 3041     2F01F02012000FA0
20002bfc:	4632 3432 4631 3238 3233 3030 4230 4646     2F241F8232000BFF
20002c0c:	0d34 3a0a 3031 4630 3041 3030 4330 3733     4..:100FA0000C37
20002c1c:	4442 3634 3038 4342 3037 3734 3030 3145     BD4680BC704700E1
20002c2c:	3030 3045 3038 3442 3338 3042 3045 0a0d     00E080B483B0E0..
20002c3c:	313a 3030 4246 3030 3030 4130 3746 3638     :100FB00000AF786
20002c4c:	3330 3639 3030 3434 3042 3231 3132 3641     03960044B01221A6
20002c5c:	3030 4230 3046 3343 3237 0d33 3a0a 3031     000BF0C3723..:10
20002c6c:	4630 3043 3030 4442 3634 3038 4342 3037     0FC000BD4680BC70
20002c7c:	3734 3030 4642 3044 3430 3030 3032 3039     4700BFD004002090
20002c8c:	3542 3338 3042 3030 0a0d 313a 3030 4446     B583B000..:100FD
20002c9c:	3030 3030 4132 3046 3243 3030 3443 3942     00002AF0C200C4B9
20002cac:	3438 3037 3241 3132 3230 3031 3442 3038     8470A2210210B480
20002cbc:	3443 4642 0d37 3a0a 3031 4630 3045 3030     C4BF7..:100FE000
20002ccc:	3839 3734 4330 4234 3030 3339 3934 3332     98470C4B00934923
20002cdc:	3031 3232 4330 3132 3730 3834 4130 4334     10220C2107480A4C
20002cec:	3843 0a0d 313a 3030 4646 3030 4130 3430     C8..:100FF000A04
20002cfc:	3037 3243 3030 3439 3942 3438 3137 3230     70C20094B9847102
20002d0c:	3031 3434 3038 3438 3942 3438 4637 0d43     10448084B9847FC.
20002d1c:	3a0a 3031 3031 3030 3030 3030 4642 3430     .:1010000000BF04
20002d2c:	3733 4442 3634 3039 4442 3936 3930 3034     37BD4690BD690940
20002d3c:	3030 3030 3031 4530 3034 3638 0a0d 313a     0000100E4086..:1
20002d4c:	3130 3130 3030 3330 3035 3436 3030 4130     010100035064000A
20002d5c:	3044 3446 3030 3030 3044 3432 3030 3730     D0F40000D0240007
20002d6c:	3044 3446 3030 3330 0d45 3a0a 3031 3031     D0F40003E..:1010
20002d7c:	3032 3030 3544 3630 3034 3030 3038 3442     2000D506400080B4
20002d8c:	3338 3042 3030 4641 3837 3036 4237 3836     83B000AF78607B68
20002d9c:	3730 4232 3241 0a0d 313a 3130 3330 3030     072BA2..:1010300
20002dac:	3230 4435 3038 4131 3532 4632 3238 4633     025D801A252F823F
20002dbc:	3530 3139 3430 3030 3530 3146 3430 3030     0591040005F10400
20002dcc:	3530 0d42 3a0a 3031 3031 3034 3030 3536     05B..:1010400065
20002ddc:	3031 3034 3030 4236 3031 3034 3030 4636     1040006B1040006F
20002dec:	3031 3034 3030 3337 3031 3034 3030 4541     10400073104000AE
20002dfc:	0a0d 313a 3130 3530 3030 3730 3137 3430     ..:1010500077104
20002e0c:	3030 3730 3142 3430 3030 3430 4646 4634     0007B1040004FF4F
20002e1c:	3441 3133 4530 3430 4646 3434 0d42 3a0a     A4310E04FF44B..:
20002e2c:	3031 3031 3036 3030 3030 3334 4430 3045     1010600000430DE0
20002e3c:	4634 3446 3030 3334 4130 3045 3830 4234     4FF400430AE0084B
20002e4c:	3830 3045 3830 4234 3235 0a0d 313a 3130     08E0084B52..:101
20002e5c:	3730 3030 3030 4536 3030 3438 3042 4534     0700006E0084B04E
20002e6c:	3030 3437 3042 4532 3030 3436 3042 4530     0074B02E0064B00E
20002e7c:	3030 3230 4333 0d42 3a0a 3031 3031 3038     00023CB..:101080
20002e8c:	3030 3831 3634 4330 3733 4442 3634 3038     0018460C37BD4680
20002e9c:	4342 3037 3734 3030 4642 3030 3930 4433     BC704700BF00093D
20002eac:	3030 3443 0a0d 313a 3130 3930 3030 3030     00C4..:101090000
20002ebc:	3130 3732 3041 3030 3130 4242 3037 3830     0127A00001BB7008
20002ecc:	4230 3035 4130 3046 3236 3030 3434 3942     0B500AF0620044B9
20002edc:	0d39 3a0a 3031 3031 3041 3030 3839 3734     9..:1010A0009847
20002eec:	3230 3634 3331 3634 4239 3030 3331 3434     024613469B001344
20002efc:	4239 3030 3831 3634 3038 4442 3839 0a0d     9B00184680BD98..
20002f0c:	313a 3130 4230 3030 3230 3135 3430 3030     :1010B0002510400
20002f1c:	3830 4230 3035 4130 3046 3432 3942 3438     080B500AF024B984
20002f2c:	3037 3433 3536 3042 4638 0d46 3a0a 3031     703465B08FF..:10
20002f3c:	3031 3043 3030 3831 3634 3038 4442 3939     10C000184680BD99
20002f4c:	3031 3034 3030 3038 3442 4238 3042 3030     10400080B48BB000
20002f5c:	4641 3837 3036 3641 0a0d 313a 3130 4430     AF7860A6..:1010D
20002f6c:	3030 3030 3442 4636 3742 3730 3642 3738     0000B46FB707B687
20002f7c:	3642 4632 3742 3838 4637 3238 3333 3730     B62FB7887F823307
20002f8c:	3642 3641 0d41 3a0a 3031 3031 3045 3030     B6A6A..:1010E000
20002f9c:	4246 3136 4246 3936 4242 3136 4242 3936     FB61FB69BB61BB69
20002fac:	4235 3930 4237 3136 4237 3936 3330 3546     5B097B617B6903F5
20002fbc:	3445 0a0d 313a 3130 4630 3030 3030 3130     E4..:1010F000001
20002fcc:	3033 4633 3032 3737 3533 3042 3332 3642     303F207735B023B6
20002fdc:	3931 4637 3238 3333 3030 3230 3642 0d38     197F82330002B68.
20002fec:	3a0a 3031 3131 3030 3030 3930 3044 4237     .:1011000009D07B
20002ffc:	4136 4246 3036 4246 3836 3330 3046 4631     6AFB60FB6803F01F
2000300c:	3330 3130 3232 4139 3034 3135 0a0d 313a     0301229A4051..:1
2000301c:	3130 3131 3030 3330 3642 3139 3641 3033     01110003B691A630
2000302c:	4538 3730 3642 4241 3642 4230 3642 3038     8E07B6ABB60BB680
2000303c:	4633 3130 3046 3833 0d45 3a0a 3031 3131     3F01F038E..:1011
2000304c:	3032 3030 3130 3232 4139 3034 4233 3936     200001229A403B69
2000305c:	4135 3336 3030 4642 4332 3733 4442 3634     5A6300BF2C37BD46
2000306c:	3038 4342 3030 0a0d 313a 3130 3331 3030     80BC00..:1011300
2000307c:	3730 3430 3837 4230 3834 4239 3030 4130     0704780B489B000A
2000308c:	3746 3638 3730 3642 4638 3642 4631 3642     F78607B68FB61FB6
2000309c:	3639 0d31 3a0a 3031 3131 3034 3030 4242     961..:10114000BB
200030ac:	3136 4242 3936 4237 3136 4237 3936 4235     61BB697B617B695B
200030bc:	3930 4233 3136 4233 3936 3330 3546 3330     093B613B6903F503
200030cc:	0a0d 313a 3130 3531 3030 3030 3130 3033     ..:1011500000130
200030dc:	4633 3032 3737 3533 3042 4432 3641 4642     3F207735B02DA6BF
200030ec:	3642 4639 3642 4630 3642 3438 0d39 3a0a     B69FB60FB6849..:
200030fc:	3031 3131 3036 3030 3330 3046 4631 3330     1011600003F01F03
2000310c:	3130 3132 3130 4146 3330 3346 3331 3034     012101FA03F31340
2000311c:	3030 4232 3431 4642 3630 0a0d 313a 3130     002B14BF06..:101
2000312c:	3731 3030 3030 3231 3033 3230 4433 4242     1700001230023DBB
2000313c:	3132 3438 3236 3334 4237 3444 3836 4230     218462437BD4680B
2000314c:	3743 3430 4537 0d43 3a0a 3031 3131 3038     C7047EC..:101180
2000315c:	3030 3038 3442 4238 3042 3030 4641 3837     0080B48BB000AF78
2000316c:	3036 4237 3836 4237 3236 4237 4136 4233     607B687B627B6A3B
2000317c:	3236 3732 0a0d 313a 3130 3931 3030 3330     6227..:101190003
2000318c:	3642 4641 3642 4631 3642 3539 3042 4239     B6AFB61FB695B09B
2000319c:	3642 4231 3642 3039 4633 3035 3130 3333     B61BB6903F500133
200031ac:	0d42 3a0a 3031 3131 3041 3030 3330 3246     B..:1011A00003F2
200031bc:	3730 3337 4235 3230 4237 3136 4237 4136     07735B027B617B6A
200031cc:	4233 3136 4233 3936 3330 3046 4637 0a0d     3B613B6903F07F..
200031dc:	313a 3130 4231 3030 3130 3046 3033 3231     :1011B0001F03012
200031ec:	3032 4632 3041 4633 4633 3642 3730 3642     202FA03F3FB607B6
200031fc:	4439 3641 3742 3642 3841 0d46 3a0a 3031     9DA6B7B6A8F..:10
2000320c:	3131 3043 3030 4242 3036 4242 3836 3330     11C000BB60BB6803
2000321c:	3046 4631 3330 3130 3132 3130 4146 3330     F01F03012101FA03
2000322c:	3346 3331 3034 3636 0a0d 313a 3130 4431     F3134066..:1011D
2000323c:	3030 3030 3230 3042 4433 3730 3642 4639     000002B03D07B69F
2000324c:	3641 3538 3641 3033 4532 3730 3642 4639     A685A6302E07B69F
2000325c:	3641 4538 0d36 3a0a 3031 3131 3045 3030     A68E6..:1011E000
2000326c:	4131 3336 3030 4642 4332 3733 4442 3634     1A6300BF2C37BD46
2000327c:	3038 4342 3037 3734 4432 3945 3046 3834     80BC70472DE9F048
2000328c:	4331 0a0d 313a 3130 4631 3030 3030 4130     1C..:1011F00000A
2000329c:	3246 3444 3942 3438 3237 3444 3238 3444     F2D4B98472D482D4
200032ac:	3942 3438 3237 3444 3942 3438 4337 0d36     B98472D4B9847C6.
200032bc:	3a0a 3031 3231 3030 3030 4432 4234 3839     .:101200002D4B98
200032cc:	3734 4432 4234 3030 3232 4131 3036 3432     472D4B00221A6024
200032dc:	3032 4332 4234 3839 3734 3944 0a0d 313a     202C4B9847D9..:1
200032ec:	3130 3132 3030 3030 3433 3036 3230 3142     01210000346002B1
200032fc:	4234 3046 3231 3033 3230 4433 4242 3832     4BF01230023DBB28
2000330c:	4633 3030 3031 3333 0d43 3a0a 3031 3231     3F001033C..:1012
2000331c:	3032 3030 4244 3242 3330 3046 3130 3330     2000DBB203F00103
2000332c:	4244 3242 3931 3634 3030 3032 3532 4234     DBB219460020254B
2000333c:	3839 3734 4644 0a0d 313a 3130 3332 3030     9847DF..:1012300
2000334c:	3030 3230 3230 3435 3942 3438 3237 3435     00020254B9847254
2000335c:	3942 3438 3037 3433 3136 3439 3436 4646     B9847034619464FF
2000336c:	3030 0d39 3a0a 3031 3231 3034 3030 3030     009..:1012400000
2000337c:	3230 4230 3634 3431 3634 4244 3831 3434     020B461446DB1844
2000338c:	4245 3430 3430 4235 3831 3434 4245 3532     EB04045B1844EB25
2000339c:	0a0d 313a 3130 3532 3030 3030 3032 3634     ..:1012500002046
200033ac:	3036 3431 4536 4441 3633 3536 3044 3531     60146EAD3665D015
200033bc:	3142 3439 4534 3042 3036 4134 0d44 3a0a     B1944EB0604AD..:
200033cc:	3031 3231 3036 3030 4235 3831 3434 4245     101260005B1844EB
200033dc:	3230 3430 3334 3246 4641 3136 4634 3046     020443F2AF614FF0
200033ec:	3030 3230 3331 4245 3235 0a0d 313a 3130     000213EB52..:101
200033fc:	3732 3030 3030 3031 3442 4534 3042 3032     27000010B44EB020
2000340c:	3543 3438 3636 3431 3136 3435 3443 4633     C58466146154C43F
2000341c:	4232 3630 3332 0d38 3a0a 3031 3231 3038     2B06238..:101280
2000342c:	3030 4634 3046 3030 3330 3041 3734 3330     004FF00003A04703
2000343c:	3634 4330 3634 3831 3634 3131 4234 3839     460C461846114B98
2000344c:	3734 3130 0a0d 313a 3130 3932 3030 3030     4701..:101290000
2000345c:	3441 3142 3642 3038 3230 4342 4442 3030     A4B1B68002BCBD00
2000346c:	3438 3042 3230 3132 3641 3030 3230 4130     84B00221A600020A
2000347c:	0d31 3a0a 3031 3231 3041 3030 3930 4234     1..:1012A000094B
2000348c:	3839 3734 3443 3745 3030 4642 3543 3530     9847C4E700BFC505
2000349c:	3034 3030 3035 3431 4530 3034 3545 0a0d     400050140E40E5..
200034ac:	313a 3130 4232 3030 3630 3035 3443 3030     :1012B000650C400
200034bc:	3230 3039 3443 3030 4330 3044 3446 3030     0290C4000CD0F400
200034cc:	4430 3030 3034 3230 4630 0d38 3a0a 3031     0D0040020F8..:10
200034dc:	3231 3043 3030 3333 3131 3034 3030 3943     12C00033114000C9
200034ec:	3031 3034 3030 3138 3131 3034 3030 3542     10400081114000B5
200034fc:	3031 3034 3030 4141 0a0d 313a 3130 4432     104000AA..:1012D
2000350c:	3030 4430 3139 3432 3030 3030 3031 3030     000D912400001000
2000351c:	3230 3530 4233 3439 4241 3039 3230 3039     02053B94AB900290
2000352c:	4238 4346 0d33 3a0a 3031 3231 3045 3030     8BFC3..:1012E000
2000353c:	3030 3832 4331 4642 4634 3046 4646 3133     00281CBF4FF0FF31
2000354c:	4634 3046 4646 3033 3030 3046 4137 3942     4FF0FF3000F07AB9
2000355c:	4246 0a0d 313a 3130 4632 3030 4130 4644     FB..:1012F000ADF
2000356c:	3031 3038 3643 4544 3039 4334 3045 4630     1080C6DE904CE00F
2000357c:	3030 4636 4438 4644 3038 4534 3630 0d44     006F8DDF804E06D.
2000358c:	3a0a 3031 3331 3030 3030 4444 3945 3230     .:10130000DDE902
2000359c:	3332 3430 3042 3037 3734 4432 3945 3046     2304B070472DE9F0
200035ac:	3734 4338 3634 4430 3634 3531 0a0d 313a     478C460D4615..:1
200035bc:	3130 3133 3030 3030 3434 3036 3938 3045     01310000446089E0
200035cc:	3230 3542 4431 3831 3441 3132 3437 3636     02B51D18A4217466
200035dc:	4444 4239 4632 3741 0d35 3a0a 3031 3331     DD9B2FA75..:1013
200035ec:	3032 3030 3238 4546 4542 3146 3030 4630     200082FEBEF1000F
200035fc:	4230 3044 4543 3146 3032 4330 3130 4146     0BD0CEF1200C01FA
2000360c:	4530 3546 4242 0a0d 313a 3130 3333 3030     0EF5BB..:1013300
2000361c:	3230 4630 3041 4643 3043 4632 3041 4645     020FA0CFC02FA0EF
2000362c:	3437 4543 3041 3035 3043 4630 3041 4645     74CEA050C00FA0EF
2000363c:	3434 0d37 3a0a 3031 3331 3034 3030 4634     447..:101340004F
2000364c:	4145 3731 4134 3532 4330 4342 4246 4146     EA174A250CBCFBFA
2000365c:	3846 4631 4146 3738 3946 4130 4246 4238     F81FFA87F90AFB8B
2000366c:	0a0d 313a 3130 3533 3030 3130 4338 3443     ..:1013500018CC4
2000367c:	4535 3041 3443 3035 4638 3042 4639 4133     5EA0C4508FB09F3A
2000368c:	3442 3032 4441 4539 3144 3539 0d34 3a0a     B420AD9ED1954..:
2000369c:	3031 3331 3036 3030 3830 3146 4646 3233     1013600008F1FF32
200036ac:	3038 3046 3332 3138 4241 3234 3034 3246     80F02381AB4240F2
200036bc:	3032 3138 3841 3146 3645 0a0d 313a 3130     2081A8F1E6..:101
200036cc:	3733 3030 3030 3032 3338 3444 4534 3144     3700002083D44ED1
200036dc:	4141 4234 4232 4635 4642 4641 3030 4641     AA4B2B5FBFAF00AF
200036ec:	3142 3530 3835 0d31 3a0a 3031 3331 3038     B105581..:101380
200036fc:	3030 3434 4145 3530 3434 3030 4246 3930     0044EA054400FB09
2000370c:	3946 3141 3534 3930 3944 3445 3931 3030     F9A14509D9E41900
2000371c:	3146 3333 0a0d 313a 3130 3933 3030 4630     F133..:10139000F
2000372c:	3346 3833 4630 3030 3841 4131 3431 3435     F3380F00A81A1454
2000373c:	4630 3032 3837 3031 3332 3338 3443 4334     0F2078102383C44C
2000374c:	0d36 3a0a 3031 3331 3041 3030 3441 4245     6..:1013A000A4EB
2000375c:	3930 3430 3034 4145 3830 3034 3030 3132     090440EA08400021
2000376c:	3030 4532 3136 3044 3432 4146 3139 0a0d     002E61D024FA91..
2000377c:	313a 3130 4233 3030 3030 4645 3034 3230     :1013B0000EF4002
2000378c:	3333 3634 3730 3633 4230 4544 4638 3830     334607360BDE8F08
2000379c:	3837 3442 3032 4437 4439 0d38 3a0a 3031     78B4207D9D8..:10
200037ac:	3331 3043 3030 3030 4532 3435 3044 3030     13C000002E54D000
200037bc:	3132 3638 3845 3132 3030 3830 3634 4442     2186E821000846BD
200037cc:	3845 3046 3738 3142 0a0d 313a 3130 4433     E8F087B1..:1013D
200037dc:	3030 4230 4633 3841 4633 3031 3230 3439     000B3FA83F100294
200037ec:	4630 3830 3845 4130 3442 3032 4432 3833     0F08E80AB4202D38
200037fc:	3432 4632 0d46 3a0a 3031 3331 3045 3030     242FF..:1013E000
2000380c:	3030 3246 4146 3038 3438 4131 3536 4245     00F2FA80841A65EB
2000381c:	3330 3530 3130 3032 4341 3634 3030 4532     03050120AC46002E
2000382c:	4135 0a0d 313a 3130 4633 3030 3330 4446     5A..:1013F0003FD
2000383c:	3830 4536 3138 3130 4230 4544 4638 3830     086E81010BDE8F08
2000384c:	3137 4232 3039 3231 4237 4637 3842 0d46     712B90127B7FB8F.
2000385c:	3a0a 3031 3431 3030 3030 3246 3746 3742     .:10140000F2F7B7
2000386c:	4146 3738 4546 4542 3146 3030 4630 3433     FA87FEBEF1000F34
2000387c:	3144 4245 4231 4133 4330 4541 0a0d 313a     D1EB1B3A0CAE..:1
2000388c:	3130 3134 3030 3130 4646 3841 4637 3043     01410001FFA87FC0
2000389c:	3231 4231 4633 4642 4632 3238 3035 3043     121B3FBF2F8250C0
200038ac:	4632 3142 3338 4633 0d44 3a0a 3031 3431     2FB1833FD..:1014
200038bc:	3032 3030 3534 4145 3330 3534 4330 4246     200045EA03450CFB
200038cc:	3830 3346 4241 3234 3730 3944 4445 3931     08F3AB4207D9ED19
200038dc:	3830 3146 3737 0a0d 313a 3130 3334 3030     08F177..:1014300
200038ec:	4630 3346 3030 4432 4132 3442 3032 4630     0FF3002D2AB4200F
200038fc:	4432 3831 3830 3430 4536 3144 4141 4233     2D1808046ED1AA3B
2000390c:	3532 0d37 3a0a 3031 3431 3034 3030 3542     257..:10144000B5
2000391c:	4246 3246 3046 3230 4246 3031 3535 3334     FBF2F002FB105543
2000392c:	4145 3530 3434 4330 4246 3030 4346 4632     EA05440CFB00FC2F
2000393c:	0a0d 313a 3130 3534 3030 4130 3434 3035     ..:10145000A4450
2000394c:	4437 4539 3134 3039 4630 4631 3346 3033     7D9E41900F1FF330
2000395c:	4432 4132 3434 3035 4630 4632 0d34 3a0a     2D2A44500F2F4..:
2000396c:	3031 3431 3036 3030 3842 3038 3831 3634     10146000B8801846
2000397c:	3441 4245 4330 3430 3034 4145 3830 3034     A4EB0C0440EA0840
2000398c:	4439 3745 3133 3634 4144 0a0d 313a 3130     9DE73146DA..:101
2000399c:	3734 3030 3330 3430 4236 4544 4638 3830     470003046BDE8F08
200039ac:	4337 4645 3231 3030 3034 4635 3041 4645     7CEF1200405FA0EF
200039bc:	3033 4637 4641 0d36 3a0a 3031 3431 3038     307FAF6..:101480
200039cc:	3030 4530 3746 3032 4146 3430 3846 4133     000EF720FA04F83A
200039dc:	4330 3532 4146 3430 3446 3834 4145 3330     0C25FA04F448EA03
200039ec:	3830 3741 0a0d 313a 3130 3934 3030 4230     08A7..:10149000B
200039fc:	4634 4642 4632 3431 4546 3141 3438 3035     4FBF2F14FEA18450
20003a0c:	4632 3142 3431 3134 4646 3841 4637 3343     2FB11441FFA87FC3
20003a1c:	0d36 3a0a 3031 3431 3041 3030 3534 4145     6..:1014A00045EA
20003a2c:	3430 3534 3130 4246 4330 3346 4241 3234     044501FB0CF3AB42
20003a3c:	3030 4146 4530 3446 3930 3944 4546 0a0d     00FA0EF409D9FE..
20003a4c:	313a 3130 4234 3030 4530 3144 3039 4631     :1014B000ED1901F
20003a5c:	4631 3346 3830 4630 3830 3841 4130 3442     1FF3080F08A80AB4
20003a6c:	3432 4630 3832 3837 3630 0d35 3a0a 3031     240F2878065..:10
20003a7c:	3431 3043 3030 3230 3933 4433 3434 4245     14C00002393D44EB
20003a8c:	4131 4631 4146 3838 3546 3342 4246 3246     1A1FFA88F5B3FBF2
20003a9c:	3046 3230 4246 3833 0a0d 313a 3130 4434     F002FB38..:1014D
20003aac:	3030 3130 3330 3433 4535 3041 3433 3035     000103345EA03450
20003abc:	4630 3042 4643 4133 3442 3032 4437 4539     0FB0CF3AB4207D9E
20003acc:	3144 3839 0d35 3a0a 3031 3431 3045 3030     D1985..:1014E000
20003adc:	3030 3146 4646 3833 4636 3244 4241 3234     00F1FF386FD2AB42
20003aec:	4436 3944 3230 3833 4433 3434 4245 4131     6DD902383D44EB1A
20003afc:	3041 0a0d 313a 3130 4634 3030 3430 4530     A0..:1014F00040E
20003b0c:	3041 3431 3831 4546 4337 4631 3231 3030     A01418FE7C1F1200
20003b1c:	3237 4632 3041 4637 3838 3442 3430 0d42     722FA07F88B404B.
20003b2c:	3a0a 3031 3531 3030 3030 3530 4146 3130     .:1015000005FA01
20003b3c:	3446 3834 4145 3330 3330 3032 4146 3730     F448EA030320FA07
20003b4c:	4546 4634 4145 3331 4334 3846 0a0d 313a     FE4FEA134CF8..:1
20003b5c:	3130 3135 3030 4630 3444 3430 4545 3041     0151000FD404EEA0
20003b6c:	3034 4245 4635 4642 4643 3439 4546 3141     40EB5FBFCF94FEA1
20003b7c:	3445 3034 4643 4642 0d44 3a0a 3031 3531     E440CFBFD..:1015
20003b8c:	3032 3030 3931 3535 4631 4146 3338 3846     200019551FFA83F8
20003b9c:	3434 4145 3530 3534 3930 4246 3830 3446     44EA054509FB08F4
20003bac:	4341 3234 3335 0a0d 313a 3130 3335 3030     AC4253..:1015300
20003bbc:	3030 4632 3041 4631 3032 4630 3041 4631     002FA01F200FA01F
20003bcc:	3041 4438 4539 3144 3038 4639 4631 3346     A08D9ED1809F1FF3
20003bdc:	4230 0d38 3a0a 3031 3531 3034 3030 3334     0B8..:1015400043
20003bec:	3244 4341 3234 3134 3944 3941 3146 3230     D2AC4241D9A9F102
20003bfc:	3930 4431 3434 4432 4231 4631 4146 3731     091D442D1B1FFA17
20003c0c:	0a0d 313a 3130 3535 3030 3830 4645 4245     ..:101550008EFEB
20003c1c:	4635 4642 4643 3030 4643 3142 3530 3435     5FBFCF00CFB10554
20003c2c:	4545 3041 3435 3034 4630 3742 0d42 3a0a     EEA054400FB7B..:
20003c3c:	3031 3531 3036 3030 3830 3846 3041 3534     1015600008F8A045
20003c4c:	3730 3944 3445 3831 3030 3146 4646 3533     07D9E41800F1FF35
20003c5c:	3932 3244 3041 3534 3542 0a0d 313a 3130     29D2A045B5..:101
20003c6c:	3735 3030 3230 4437 3039 3332 3138 3443     5700027D902381C4
20003c7c:	3434 4530 3041 3439 4130 4534 3042 3038     440EA0940A4EB080
20003c8c:	4134 4630 3242 0d38 3a0a 3031 3531 3038     4A0FB28..:101580
20003c9c:	3030 3230 3938 4334 3534 3643 3634 4434     0002894C45C6464D
20003cac:	3634 3531 3344 3231 3044 3635 3142 4142     4615D312D056B1BA
20003cbc:	4245 4132 0a0d 313a 3130 3935 3030 3030     EB2A..:101590000
20003ccc:	3045 3633 4534 3042 3035 3034 4634 3041     E0364EB050404FA0
20003cdc:	4637 4337 3442 3130 3446 4333 3443 3630     7F7CB401F43CC406
20003cec:	0d44 3a0a 3031 3531 3041 3030 3733 3036     D..:1015A0003760
20003cfc:	3437 3036 3030 3132 4442 3845 3046 3738     74600021BDE8F087
20003d0c:	3831 3634 3846 3645 3039 3634 3138 0a0d     1846F8E6904681..
20003d1c:	313a 3130 4235 3030 4530 4530 4336 3432     :1015B000E0E6C24
20003d2c:	4535 4441 4232 4538 3042 3032 3645 4539     5EAD2B8EB020E69E
20003d3c:	3042 3033 3035 3331 3538 0d41 3a0a 3031     B030501385A..:10
20003d4c:	3531 3043 3030 3445 3745 3832 3634 3744     15C000E4E72846D7
20003d5c:	3745 3034 3634 3139 3745 3138 3634 4542     E7404691E78146BE
20003d6c:	3745 3130 3634 3337 0a0d 313a 3130 4435     E7014673..:1015D
20003d7c:	3030 3730 4538 3037 3332 3338 3443 3434     00078E702383C444
20003d8c:	4535 3037 3438 3036 4538 4137 4638 3031     5E7084608E7A8F10
20003d9c:	3032 4538 0d36 3a0a 3031 3531 3045 3030     208E6..:1015E000
20003dac:	4433 3434 4232 3745 3037 3734 3030 4642     3D442BE7704700BF
20003dbc:	3037 3542 4630 4534 4630 4434 3637 4231     70B50F4E0F4D761B
20003dcc:	3338 0a0d 313a 3130 4635 3030 4230 3136     83..:1015F000B61
20003ddc:	3130 4238 3046 3230 3034 4435 3030 3331     018BF002405D0013
20003dec:	3534 4635 3038 3334 3942 3438 4237 0d35     455F8043B9847B5.
20003dfc:	3a0a 3031 3631 3030 3030 3641 3234 3946     .:10160000A642F9
20003e0c:	3144 4130 4534 4230 4434 3637 4231 3030     D10A4E0B4D761B00
20003e1c:	3046 3741 3846 3642 3031 3239 0a0d 313a     F0A7F8B61092..:1
20003e2c:	3130 3136 3030 3130 4238 3046 3230 3034     016100018BF00240
20003e3c:	4436 3030 3331 3534 4635 3038 3334 3942     6D0013455F8043B9
20003e4c:	3438 4137 3436 3732 0d31 3a0a 3031 3631     847A64271..:1016
20003e5c:	3032 3030 3946 3144 3037 4442 3037 4442     2000F9D170BD70BD
20003e6c:	3030 4642 3836 3731 3034 3030 3836 3731     00BF681740006817
20003e7c:	3034 3030 3935 0a0d 313a 3130 3336 3030     400059..:1016300
20003e8c:	3730 3130 3437 3030 3630 3138 3437 3030     0701740006817400
20003e9c:	3030 3432 3142 4233 3031 3432 3038 4630     0024B13B1024800F
20003eac:	4430 0d39 3a0a 3031 3631 3034 3030 3530     0D9..:1016400005
20003ebc:	3842 3037 3734 3030 3030 3030 3030 3935     B870470000000059
20003ecc:	3631 3034 3030 3030 3332 3130 3634 4430     164000002301460D
20003edc:	0a0d 313a 3130 3536 3030 3130 3441 3136     ..:101650001A461
20003eec:	3438 3036 4630 3130 4245 3338 4238 3035     84600F01EB838B50
20003efc:	3441 3043 3441 3644 3134 4542 0d44 3a0a     A4C0A4D641BED..:
20003f0c:	3031 3631 3036 3030 3441 3031 4130 3044     10166000A4100AD0
20003f1c:	3430 3146 3038 3334 3130 4233 3530 4245     04F18043013B05EB
20003f2c:	3338 3530 3130 4333 3334 0a0d 313a 3130     8305013C43..:101
20003f3c:	3736 3030 3530 4635 3038 3334 3939 3438     6700055F80439984
20003f4c:	3037 3230 4643 4439 4231 4544 3338 3438     7002CF9D1BDE8384
20003f5c:	3030 4630 4630 0d45 3a0a 3031 3631 3038     000F0FE..:101680
20003f6c:	3030 3737 3842 3030 4642 3038 3731 3034     0077B800BF801740
20003f7c:	3030 4337 3731 3034 3030 3037 3734 3030     007C174000704700
20003f8c:	4642 4334 0a0d 313a 3130 3936 3030 3730     BF4C..:101690007
20003f9c:	3430 3037 4230 3246 4544 4639 3438 3233     04700BF2DE9F8432
20003fac:	3443 3044 3436 3236 3638 3938 3438 3536     C4D0646286898465
20003fbc:	0d30 3a0a 3031 3631 3041 3030 4630 3634     0..:1016A0000F46
20003fcc:	3139 3634 4646 3746 3246 4646 3932 4234     9146FFF7F2FF294B
20003fdc:	4331 3836 3444 3846 3834 3133 4145 0a0d     1C68D4F84831EA..
20003fec:	313a 3130 4236 3030 3030 3230 3342 4445     :1016B000002B3ED
20003ffc:	3530 3641 3138 3246 3141 4443 3043 4632     05A681F2A1CDC02F
2000400c:	3031 3031 3745 4236 4331 0d35 3a0a 3031     1010E76B1C5..:10
2000401c:	3631 3043 3030 3330 4245 3238 3130 3130     16C00003EB820101
2000402c:	3432 3143 3846 3838 3039 3344 3846 3838     24C1F88890D3F888
2000403c:	3130 3439 3034 4238 0a0d 313a 3130 4436     0194408B..:1016D
2000404c:	3030 3230 3430 3033 3232 4345 4633 3838     0002043022EC3F88
2000405c:	3038 4331 4631 3038 3838 3231 4433 3030     801C1F8088123D00
2000406c:	3332 4332 0d41 3a0a 3031 3631 3045 3030     232CA..:1016E000
2000407c:	3343 3846 3430 3045 3832 3836 3334 3846     C3F804E0286843F8
2000408c:	3232 3037 4646 3746 3144 4646 3030 3032     2270FFF7D1FF0020
2000409c:	3831 0a0d 313a 3130 4636 3030 4230 4544     18..:1016F000BDE
200040ac:	4638 3838 3133 3437 3042 4242 3433 4646     8F883174B0BB34FF
200040bc:	4334 3738 4130 4646 3033 3830 3030 0d44     4C870AFF300800D.
200040cc:	3a0a 3031 3731 3030 3030 3330 3634 3844     .:101700000346D8
200040dc:	3142 3444 3846 3834 3132 3230 3036 3030     B1D4F84821026000
200040ec:	3132 3134 3036 4130 3634 4535 0a0d 313a     2141600A465E..:1
200040fc:	3130 3137 3030 4330 4634 3438 3038 3431     0171000C4F848014
2000410c:	4646 3030 3031 4345 4630 3838 3138 4331     FF0010EC0F88811C
2000411c:	4630 3838 3143 4431 0d30 3a0a 3031 3731     0F88C11D0..:1017
2000412c:	3032 3030 3030 4532 4344 3044 4343 3745     2000002EDCD0CCE7
2000413c:	3344 3846 4338 3131 4330 3334 3343 3846     D3F88C110C43C3F8
2000414c:	4338 3134 4445 0a0d 313a 3130 3337 3030     8C41ED..:1017300
2000415c:	4430 4535 3037 4634 4135 3736 4333 4634     0D5E704F5A673C4F
2000416c:	3438 3338 4231 4542 3237 3638 4638 4646     84831BBE72868FFF
2000417c:	3737 0d45 3a0a 3031 3731 3034 3030 3741     77E..:10174000A7
2000418c:	4646 4634 3046 4646 3033 4442 3845 3846     FF4FF0FF30BDE8F8
2000419c:	3338 3030 4642 3833 3430 3030 3032 4134     8300BF380400204A
200041ac:	0a0d 313a 3130 3537 3030 3530 3138 3437     ..:1017500058174
200041bc:	3030 3030 3030 3030 3030 3130 3030 3030     0000000000010000
200041cc:	3230 4630 4238 3035 4230 3346 0d45 3a0a     020F8B500BF3E..:
200041dc:	3031 3731 3036 3030 3846 4342 3830 4342     10176000F8BC08BC
200041ec:	4539 3634 3037 3734 3933 3631 3034 3030     9E46704739164000
200041fc:	3146 3030 3034 3030 3641 0a0d 313a 3130     F1004000A6..:101
2000420c:	3737 3030 4630 4238 3035 4230 4646 4238     77000F8B500BFF8B
2000421c:	3043 4238 3943 3445 3736 3430 4337 3044     C08BC9E467047CD0
2000422c:	3430 3030 4430 0d44 3a0a 3830 3731 3038     04000DD..:081780
2000423c:	3030 3838 4246 4646 4637 3130 3030 3030     0088FBFF7F010000
2000424c:	3030 4635 0a0d 313a 3130 3837 3038 4230     005F..:10178800B
2000425c:	4646 3533 3846 3046 3331 4638 4442 3731     FF35F8F0138FBD17
2000426c:	3430 3037 3030 3030 3030 3339 3044 4130     047000000093D00A
2000427c:	0d46 3a0a 3031 3731 3839 3030 3030 3030     F..:101798000000
2000428c:	3030 3030 4346 3230 3030 3032 3436 3330     0000FC0200206403
2000429c:	3030 3032 4343 3330 3030 3032 4441 0a0d     0020CC030020AD..
200042ac:	313a 3130 4137 3038 3030 3030 3030 3030     :1017A8000000000
200042bc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200042cc:	3030 3030 3030 3030 3330 0d31 3a0a 3031     00000000031..:10
200042dc:	3731 3842 3030 3030 3030 3030 3030 3030     17B8000000000000
200042ec:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200042fc:	3030 3030 3030 3132 0a0d 313a 3130 4337     00000021..:1017C
2000430c:	3038 3030 3030 3030 3030 3030 3030 3030     8000000000000000
2000431c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000432c:	3030 3130 0d31 3a0a 3031 3731 3844 3030     00011..:1017D800
2000433c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000434c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000435c:	3130 0a0d 313a 3130 4537 3038 3030 3030     01..:1017E800000
2000436c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000437c:	3030 3030 3030 3030 3030 3030 4630 0d31     0000000000000F1.
2000438c:	3a0a 3031 3731 3846 3030 3030 3030 3030     .:1017F800000000
2000439c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200043ac:	3030 3030 3030 3030 3030 3145 0a0d 313a     0000000000E1..:1
200043bc:	3130 3038 3038 3030 3030 3030 3030 3030     0180800000000000
200043cc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200043dc:	3030 3030 3030 4430 0d30 3a0a 3031 3831     0000000D0..:1018
200043ec:	3831 3030 3030 3030 3030 3030 3030 3030     1800000000000000
200043fc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000440c:	3030 3030 3043 0a0d 313a 3130 3238 3038     0000C0..:1018280
2000441c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000442c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000443c:	4230 0d30 3a0a 3031 3831 3833 3030 3030     0B0..:1018380000
2000444c:	3030 3030 3030 3030 3030 3030 3030 3130     0000000000000001
2000445c:	3030 3030 3030 3030 3030 3030 3030 4639     000000000000009F
2000446c:	0a0d 313a 3130 3438 3038 3030 3345 4333     ..:101848000E33C
2000447c:	4144 3342 3134 3632 4544 4536 4443 3045     DAB34126DE6ECDE0
2000448c:	3035 3030 3042 3030 3030 3630 0d34 3a0a     5000B00000064..:
2000449c:	3031 3831 3835 3030 3030 3030 3030 3030     1018580000000000
200044ac:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200044bc:	3030 3030 3030 3030 3038 0a0d 313a 3130     0000000080..:101
200044cc:	3638 3038 3030 3030 3030 3030 3030 3030     8680000000000000
200044dc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200044ec:	3030 3030 3730 0d30 3a0a 3031 3831 3837     0000070..:101878
200044fc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000450c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000451c:	3030 3036 0a0d 313a 3130 3838 3038 3030     0060..:101888000
2000452c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000453c:	3030 3030 3030 3030 3030 3030 3030 3530     0000000000000005
2000454c:	0d30 3a0a 3031 3831 3839 3030 3030 3030     0..:101898000000
2000455c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000456c:	3030 3030 3030 3030 3030 3030 3034 0a0d     00000000000040..
2000457c:	313a 3130 4138 3038 3030 3030 3030 3030     :1018A8000000000
2000458c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000459c:	3030 3030 3030 3030 3330 0d30 3a0a 3031     00000000030..:10
200045ac:	3831 3842 3030 3030 3030 3030 3030 3030     18B8000000000000
200045bc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200045cc:	3030 3030 3030 3032 0a0d 313a 3130 4338     00000020..:1018C
200045dc:	3038 3030 3030 3030 3030 3030 3030 3030     8000000000000000
200045ec:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200045fc:	3030 3130 0d30 3a0a 3031 3831 3844 3030     00010..:1018D800
2000460c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000461c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000462c:	3030 0a0d 313a 3130 4538 3038 3030 3030     00..:1018E800000
2000463c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000464c:	3030 3030 3030 3030 3030 3030 4630 0d30     0000000000000F0.
2000465c:	3a0a 3031 3831 3846 3030 3030 3030 3030     .:1018F800000000
2000466c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000467c:	3030 3030 3030 3030 3030 3045 0a0d 313a     0000000000E0..:1
2000468c:	3130 3039 3038 3030 3030 3030 3030 3030     0190800000000000
2000469c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200046ac:	3030 3030 3030 4330 0d46 3a0a 3031 3931     0000000CF..:1019
200046bc:	3831 3030 3030 3030 3030 3030 3030 3030     1800000000000000
200046cc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200046dc:	3030 3030 4642 0a0d 313a 3130 3239 3038     0000BF..:1019280
200046ec:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200046fc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000470c:	4130 0d46 3a0a 3031 3931 3833 3030 3030     0AF..:1019380000
2000471c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000472c:	3030 3030 3030 3030 3030 3030 3030 4639     000000000000009F
2000473c:	0a0d 313a 3130 3439 3038 3030 3030 3030     ..:1019480000000
2000474c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000475c:	3030 3030 3030 3030 3030 3830 0d46 3a0a     000000000008F..:
2000476c:	3031 3931 3835 3030 3030 3030 3030 3030     1019580000000000
2000477c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000478c:	3030 3030 3030 3030 4637 0a0d 313a 3130     000000007F..:101
2000479c:	3639 3038 3030 3030 3030 3030 3030 3030     9680000000000000
200047ac:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200047bc:	3030 3030 3630 0d46 3a0a 3031 3931 3837     000006F..:101978
200047cc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200047dc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200047ec:	3030 4635 0a0d 313a 3130 3839 3038 3030     005F..:101988000
200047fc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000480c:	3030 3030 3030 3030 3030 3030 3030 3430     0000000000000004
2000481c:	0d46 3a0a 3031 3931 3839 3030 3030 3030     F..:101998000000
2000482c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000483c:	3030 3030 3030 3030 3030 3030 4633 0a0d     0000000000003F..
2000484c:	313a 3130 4139 3038 3030 3030 3030 3030     :1019A8000000000
2000485c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000486c:	3030 3030 3030 3030 3230 0d46 3a0a 3031     0000000002F..:10
2000487c:	3931 3842 3030 3030 3030 3030 3030 3030     19B8000000000000
2000488c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000489c:	3030 3030 3030 4631 0a0d 313a 3130 4339     0000001F..:1019C
200048ac:	3038 3030 3030 3030 3030 3030 3030 3030     8000000000000000
200048bc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200048cc:	3030 3030 0d46 3a0a 3031 3931 3844 3030     0000F..:1019D800
200048dc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200048ec:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200048fc:	4646 0a0d 313a 3130 4539 3038 3030 3030     FF..:1019E800000
2000490c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000491c:	3030 3030 3030 3030 3030 3030 4530 0d46     0000000000000EF.
2000492c:	3a0a 3031 3931 3846 3030 3030 3030 3030     .:1019F800000000
2000493c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000494c:	3030 3030 3030 3030 3030 4644 0a0d 313a     0000000000DF..:1
2000495c:	3130 3041 3038 3030 3030 3030 3030 3030     01A0800000000000
2000496c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
2000497c:	3030 3030 3030 4330 0d45 3a0a 3031 4131     0000000CE..:101A
2000498c:	3831 3030 3030 3030 3030 3030 3030 3030     1800000000000000
2000499c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200049ac:	3030 3030 4542 0a0d 313a 3130 3241 3038     0000BE..:101A280
200049bc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200049cc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200049dc:	4130 0d45 3a0a 3031 4131 3833 3030 3030     0AE..:101A380000
200049ec:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
200049fc:	3030 3030 3030 3030 3030 3030 3030 4539     000000000000009E
20004a0c:	0a0d 313a 3130 3441 3038 3030 3030 3030     ..:101A480000000
20004a1c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004a2c:	3030 3030 3030 3030 3030 3830 0d45 3a0a     000000000008E..:
20004a3c:	3031 4131 3835 3030 3030 3030 3030 3030     101A580000000000
20004a4c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004a5c:	3030 3030 3030 3030 4537 0a0d 313a 3130     000000007E..:101
20004a6c:	3641 3038 3030 3030 3030 3030 3030 3030     A680000000000000
20004a7c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004a8c:	3030 3030 3630 0d45 3a0a 3031 4131 3837     000006E..:101A78
20004a9c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004aac:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004abc:	3030 4535 0a0d 313a 3130 3841 3038 3030     005E..:101A88000
20004acc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004adc:	3030 3030 3030 3030 3030 3030 3030 3430     0000000000000004
20004aec:	0d45 3a0a 3031 4131 3839 3030 3030 3030     E..:101A98000000
20004afc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004b0c:	3030 3030 3030 3030 3030 3030 4533 0a0d     0000000000003E..
20004b1c:	313a 3130 4141 3038 3030 3030 3030 3030     :101AA8000000000
20004b2c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004b3c:	3030 3030 3030 3030 3230 0d45 3a0a 3031     0000000002E..:10
20004b4c:	4131 3842 3030 3030 3030 3030 3030 3030     1AB8000000000000
20004b5c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004b6c:	3030 3030 3030 4531 0a0d 313a 3130 4341     0000001E..:101AC
20004b7c:	3038 3030 3030 3030 3030 3030 3030 3030     8000000000000000
20004b8c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004b9c:	3030 3030 0d45 3a0a 3031 4131 3844 3030     0000E..:101AD800
20004bac:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004bbc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004bcc:	4546 0a0d 313a 3130 4541 3038 3030 3030     FE..:101AE800000
20004bdc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004bec:	3030 3030 3030 3030 3030 3030 4530 0d45     0000000000000EE.
20004bfc:	3a0a 3031 4131 3846 3030 3030 3030 3030     .:101AF800000000
20004c0c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004c1c:	3030 3030 3030 3030 3030 4544 0a0d 313a     0000000000DE..:1
20004c2c:	3130 3042 3038 3030 3030 3030 3030 3030     01B0800000000000
20004c3c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004c4c:	3030 3030 3030 4330 0d44 3a0a 3031 4231     0000000CD..:101B
20004c5c:	3831 3030 3030 3030 3030 3030 3030 3030     1800000000000000
20004c6c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004c7c:	3030 3030 4442 0a0d 313a 3130 3242 3038     0000BD..:101B280
20004c8c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004c9c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004cac:	4130 0d44 3a0a 3031 4231 3833 3030 3030     0AD..:101B380000
20004cbc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004ccc:	3030 3030 3030 3030 3030 3030 3030 4439     000000000000009D
20004cdc:	0a0d 313a 3130 3442 3038 3030 3030 3030     ..:101B480000000
20004cec:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004cfc:	3030 3030 3030 3030 3030 3830 0d44 3a0a     000000000008D..:
20004d0c:	3031 4231 3835 3030 3030 3030 3030 3030     101B580000000000
20004d1c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004d2c:	3030 3030 3030 3030 4437 0a0d 313a 3130     000000007D..:101
20004d3c:	3642 3038 3030 3030 3030 3030 3030 3030     B680000000000000
20004d4c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004d5c:	3030 3030 3630 0d44 3a0a 3031 4231 3837     000006D..:101B78
20004d6c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004d7c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004d8c:	3030 4435 0a0d 313a 3130 3842 3038 3030     005D..:101B88000
20004d9c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004dac:	3030 3030 3030 3030 3030 3030 3030 3430     0000000000000004
20004dbc:	0d44 3a0a 3031 4231 3839 3030 3030 3030     D..:101B98000000
20004dcc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004ddc:	3030 3030 3030 3030 3030 3030 4433 0a0d     0000000000003D..
20004dec:	313a 3130 4142 3038 3030 3030 3030 3030     :101BA8000000000
20004dfc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
20004e0c:	3030 3030 3030 3030 3230 0d44 3a0a 4330     0000000002D..:0C
20004e1c:	4231 3842 3030 3030 3030 3030 3030 3030     1BB8000000000000
20004e2c:	3030 3030 3030 3844 3430 3030 3032 3532     000000D804002025
20004e3c:	0a0d 303a 3034 3030 3030 3035 3430 3030     ..:0400000500400
20004e4c:	3843 3231 0d41 3a0a 3030 3030 3030 3130     C812A..:00000001
20004e5c:	4646 0a0d 0000 0000 0000 0000 0000 0000     FF..............
	...

200061b4 <SystemCoreClock>:
200061b4:	0900 003d                                   ..=.

200061b8 <_impure_ptr>:
200061b8:	61c0 2000 0000 0000                         .a. ....

200061c0 <impure_data>:
200061c0:	0000 0000 64ac 2000 6514 2000 657c 2000     .....d. .e. |e. 
	...
20006268:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
20006278:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

200065e8 <__atexit_recursive_mutex>:
200065e8:	7078 2000                                   xp. 

200065ec <__malloc_av_>:
	...
200065f4:	65ec 2000 65ec 2000 65f4 2000 65f4 2000     .e. .e. .e. .e. 
20006604:	65fc 2000 65fc 2000 6604 2000 6604 2000     .e. .e. .f. .f. 
20006614:	660c 2000 660c 2000 6614 2000 6614 2000     .f. .f. .f. .f. 
20006624:	661c 2000 661c 2000 6624 2000 6624 2000     .f. .f. $f. $f. 
20006634:	662c 2000 662c 2000 6634 2000 6634 2000     ,f. ,f. 4f. 4f. 
20006644:	663c 2000 663c 2000 6644 2000 6644 2000     <f. <f. Df. Df. 
20006654:	664c 2000 664c 2000 6654 2000 6654 2000     Lf. Lf. Tf. Tf. 
20006664:	665c 2000 665c 2000 6664 2000 6664 2000     \f. \f. df. df. 
20006674:	666c 2000 666c 2000 6674 2000 6674 2000     lf. lf. tf. tf. 
20006684:	667c 2000 667c 2000 6684 2000 6684 2000     |f. |f. .f. .f. 
20006694:	668c 2000 668c 2000 6694 2000 6694 2000     .f. .f. .f. .f. 
200066a4:	669c 2000 669c 2000 66a4 2000 66a4 2000     .f. .f. .f. .f. 
200066b4:	66ac 2000 66ac 2000 66b4 2000 66b4 2000     .f. .f. .f. .f. 
200066c4:	66bc 2000 66bc 2000 66c4 2000 66c4 2000     .f. .f. .f. .f. 
200066d4:	66cc 2000 66cc 2000 66d4 2000 66d4 2000     .f. .f. .f. .f. 
200066e4:	66dc 2000 66dc 2000 66e4 2000 66e4 2000     .f. .f. .f. .f. 
200066f4:	66ec 2000 66ec 2000 66f4 2000 66f4 2000     .f. .f. .f. .f. 
20006704:	66fc 2000 66fc 2000 6704 2000 6704 2000     .f. .f. .g. .g. 
20006714:	670c 2000 670c 2000 6714 2000 6714 2000     .g. .g. .g. .g. 
20006724:	671c 2000 671c 2000 6724 2000 6724 2000     .g. .g. $g. $g. 
20006734:	672c 2000 672c 2000 6734 2000 6734 2000     ,g. ,g. 4g. 4g. 
20006744:	673c 2000 673c 2000 6744 2000 6744 2000     <g. <g. Dg. Dg. 
20006754:	674c 2000 674c 2000 6754 2000 6754 2000     Lg. Lg. Tg. Tg. 
20006764:	675c 2000 675c 2000 6764 2000 6764 2000     \g. \g. dg. dg. 
20006774:	676c 2000 676c 2000 6774 2000 6774 2000     lg. lg. tg. tg. 
20006784:	677c 2000 677c 2000 6784 2000 6784 2000     |g. |g. .g. .g. 
20006794:	678c 2000 678c 2000 6794 2000 6794 2000     .g. .g. .g. .g. 
200067a4:	679c 2000 679c 2000 67a4 2000 67a4 2000     .g. .g. .g. .g. 
200067b4:	67ac 2000 67ac 2000 67b4 2000 67b4 2000     .g. .g. .g. .g. 
200067c4:	67bc 2000 67bc 2000 67c4 2000 67c4 2000     .g. .g. .g. .g. 
200067d4:	67cc 2000 67cc 2000 67d4 2000 67d4 2000     .g. .g. .g. .g. 
200067e4:	67dc 2000 67dc 2000 67e4 2000 67e4 2000     .g. .g. .g. .g. 
200067f4:	67ec 2000 67ec 2000 67f4 2000 67f4 2000     .g. .g. .g. .g. 
20006804:	67fc 2000 67fc 2000 6804 2000 6804 2000     .g. .g. .h. .h. 
20006814:	680c 2000 680c 2000 6814 2000 6814 2000     .h. .h. .h. .h. 
20006824:	681c 2000 681c 2000 6824 2000 6824 2000     .h. .h. $h. $h. 
20006834:	682c 2000 682c 2000 6834 2000 6834 2000     ,h. ,h. 4h. 4h. 
20006844:	683c 2000 683c 2000 6844 2000 6844 2000     <h. <h. Dh. Dh. 
20006854:	684c 2000 684c 2000 6854 2000 6854 2000     Lh. Lh. Th. Th. 
20006864:	685c 2000 685c 2000 6864 2000 6864 2000     \h. \h. dh. dh. 
20006874:	686c 2000 686c 2000 6874 2000 6874 2000     lh. lh. th. th. 
20006884:	687c 2000 687c 2000 6884 2000 6884 2000     |h. |h. .h. .h. 
20006894:	688c 2000 688c 2000 6894 2000 6894 2000     .h. .h. .h. .h. 
200068a4:	689c 2000 689c 2000 68a4 2000 68a4 2000     .h. .h. .h. .h. 
200068b4:	68ac 2000 68ac 2000 68b4 2000 68b4 2000     .h. .h. .h. .h. 
200068c4:	68bc 2000 68bc 2000 68c4 2000 68c4 2000     .h. .h. .h. .h. 
200068d4:	68cc 2000 68cc 2000 68d4 2000 68d4 2000     .h. .h. .h. .h. 
200068e4:	68dc 2000 68dc 2000 68e4 2000 68e4 2000     .h. .h. .h. .h. 
200068f4:	68ec 2000 68ec 2000 68f4 2000 68f4 2000     .h. .h. .h. .h. 
20006904:	68fc 2000 68fc 2000 6904 2000 6904 2000     .h. .h. .i. .i. 
20006914:	690c 2000 690c 2000 6914 2000 6914 2000     .i. .i. .i. .i. 
20006924:	691c 2000 691c 2000 6924 2000 6924 2000     .i. .i. $i. $i. 
20006934:	692c 2000 692c 2000 6934 2000 6934 2000     ,i. ,i. 4i. 4i. 
20006944:	693c 2000 693c 2000 6944 2000 6944 2000     <i. <i. Di. Di. 
20006954:	694c 2000 694c 2000 6954 2000 6954 2000     Li. Li. Ti. Ti. 
20006964:	695c 2000 695c 2000 6964 2000 6964 2000     \i. \i. di. di. 
20006974:	696c 2000 696c 2000 6974 2000 6974 2000     li. li. ti. ti. 
20006984:	697c 2000 697c 2000 6984 2000 6984 2000     |i. |i. .i. .i. 
20006994:	698c 2000 698c 2000 6994 2000 6994 2000     .i. .i. .i. .i. 
200069a4:	699c 2000 699c 2000 69a4 2000 69a4 2000     .i. .i. .i. .i. 
200069b4:	69ac 2000 69ac 2000 69b4 2000 69b4 2000     .i. .i. .i. .i. 
200069c4:	69bc 2000 69bc 2000 69c4 2000 69c4 2000     .i. .i. .i. .i. 
200069d4:	69cc 2000 69cc 2000 69d4 2000 69d4 2000     .i. .i. .i. .i. 
200069e4:	69dc 2000 69dc 2000 69e4 2000 69e4 2000     .i. .i. .i. .i. 

200069f4 <__malloc_sbrk_base>:
200069f4:	ffff ffff                                   ....

200069f8 <__malloc_trim_threshold>:
200069f8:	0000 0002                                   ....

200069fc <__global_locale>:
200069fc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20006a1c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20006a3c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20006a5c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20006a7c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20006a9c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20006abc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20006adc:	69e9 0040 65a9 0040 0000 0000 7654 0040     .i@..e@.....Tv@.
20006aec:	7650 0040 74f0 0040 74f0 0040 74f0 0040     Pv@..t@..t@..t@.
20006afc:	74f0 0040 74f0 0040 74f0 0040 74f0 0040     .t@..t@..t@..t@.
20006b0c:	74f0 0040 74f0 0040 ffff ffff ffff ffff     .t@..t@.........
20006b1c:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
20006b44:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
